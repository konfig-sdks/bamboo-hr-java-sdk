openapi: 3.0.0
info:
  description: |-
    This is the majority of the API requests including some that are not documented.

    http://www.bamboohr.com/api/documentation/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
  title: BambooHR API
  version: v1
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
  x-konfig-uses-multipart-form-data: true
servers:
- url: https://api.bamboohr.com/api/gateway.php
security:
- auth: []
- basic: []
tags:
- name: Benefits
- name: Goals
- name: Time Tracking
- name: Time Off
- name: Payroll
- name: Training
- name: Applicant Tracking
- name: Time Tracking - Private Beta
- name: Tabular Data
- name: Webhooks
- name: Employee Files
- name: Company Files
- name: Account Information
- name: Hours
- name: Employees
- name: Reports
- name: Photos
- name: Last Change Information
- name: Login
paths:
  /{companyDomain}/v1/employees/directory:
    get:
      description: Gets employee directory.
      operationId: Employees_getDirectory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeesGetDirectoryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeesGetDirectory200Response'
          description: List of employees
        "403":
          description: if the directory has not been shared company-wide.
      summary: Get Employee Directory
      tags:
      - Employees
      x-unitTests:
      - request:
          method: GET
          uri: /employees/directory
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Get Employees (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-directory
      x-accepts: application/json
  /{companyDomain}/v1/employees/files/categories:
    post:
      description: Add an employee file category.
      operationId: EmployeeFiles_addCategory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewEmployeeFileCategory'
        required: true
      responses:
        "201":
          description: The category was created
        "400":
          description: if the posted XML is invalid or there was no category name
            given.
        "403":
          description: if the API user does not have permission to create employee
            categories.
        "500":
          description: there was an unknown server error.
      summary: Add Employee File Category
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: POST
          uri: /employees/files/categories
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}/files/{fileId}:
    delete:
      description: Delete an employee file
      operationId: EmployeeFiles_removeFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-delete-parameters-1-schema
        style: simple
      - description: "{fileId} is the ID of the employee file being deleted."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Employee file was deleted
        "403":
          description: if the API user does not have permission to see the requested
            employee or the employee's files.
        "404":
          description: if the employee file was not found.
      summary: Delete Employee File
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employees-id-files-fileId
      x-accepts: application/json
    get:
      description: Gets an employee file
      operationId: EmployeeFiles_getEmployeeFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-get-parameters-1-schema
        style: simple
      - description: "{fileId} is the ID of the employee file being retrieved."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Employee file was successfully retrieved
        "403":
          description: if the API user does not have permission to see the requested
            employee or the employee's files.
        "404":
          description: if the employee file was not found.
      summary: Get an Employee File
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-files-fileId
      x-accepts: application/json
    post:
      description: Update an employee file
      operationId: EmployeeFiles_updateEmployeeFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-post-parameters-1-schema
        style: simple
      - description: "{fileId} is the ID of the employee file being updated."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeFileUpdate'
        required: true
      responses:
        "200":
          description: The employee file was updated
        "400":
          description: Invalid JSON
        "403":
          description: if the API user does not have permission to see the requested
            employee or the employee's files.
        "404":
          description: if the employee file or category was not found.
      summary: Update Employee File
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-files-fileId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}/files:
    post:
      description: Upload an employee file
      operationId: EmployeeFiles_uploadFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-post-parameters-1-schema
        style: simple
      responses:
        "201":
          description: The employee file was successfully uploaded
        "403":
          description: if the API user does not have permission to see the requested
            employee or the employee's files.
        "404":
          description: if the category ID was not found.
        "413":
          description: if the file size exceeds 20MB or the storage limit for the
            company.
      summary: Upload Employee File
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/files"
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: multipart/form-data
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-files
      x-accepts: application/json
  /{companyDomain}/v1/files/categories:
    post:
      description: Add a company file category.
      operationId: CompanyFiles_createCategory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompanyFileCategory'
        required: true
      responses:
        "201":
          description: The category was created
        "400":
          description: if the posted JSON is invalid or there was no category name
            given.
        "403":
          description: if the API user does not have permission to see the company
            files.
        "500":
          description: there was an unknown server error.
      summary: Add Company File Category
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: POST
          uri: /files/categories
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/files/{fileId}:
    delete:
      description: Delete a company file
      operationId: CompanyFiles_removeFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{fileId} is the ID of the company file being deleted."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Company file was deleted
        "403":
          description: if the API user does not have permission to see the requested
            file.
        "404":
          description: if the file was not found.
      summary: Delete Company File
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: POST
          uri: "/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-files-fileId
      x-accepts: application/json
    get:
      description: Gets an company file
      operationId: CompanyFiles_getFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{fileId} is the ID of the company file being retrieved."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Company file was successfully retrieved
        "403":
          description: if the API user does not have permission to see the company
            files.
        "404":
          description: if the file was not found.
      summary: Get an Company File
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: POST
          uri: "/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-files-fileId
      x-accepts: application/json
    post:
      description: Update a company file
      operationId: CompanyFiles_updateFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{fileId} is the ID of the employee file being updated."
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFileUpdate'
        required: true
      responses:
        "200":
          description: The employee file was updated
        "400":
          description: if the posted JSON is invalid.
        "403":
          description: if the API user does not have permission to see the company
            files.
        "404":
          description: if the file or category was not found.
      summary: Update Company File
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: POST
          uri: "/files/{fileId}"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-files-fileId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/files:
    post:
      description: Upload a company file
      operationId: CompanyFiles_uploadFile
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: The company file was successfully uploaded
        "403":
          description: if the API user does not have permission to see the company
            files.
        "404":
          description: if the category ID was not found.
        "413":
          description: if the file size exceeds 20MB or the storage limit for the
            company.
      summary: Upload Company File
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: POST
          uri: /files
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: multipart/form-data
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-files
      x-accepts: application/json
  /{companyDomain}/v1/reports/{id}:
    get:
      description: "Use this resource to request one of your existing custom company\
        \ reports from the My Reports or Manage Reports sections in the Reports tab.\
        \ You can get the report number by hovering over the report name and noting\
        \ the ID from the URL. At present, only reports from the My Reports or Manage\
        \ Reports sections are supported. In the future we may implement reports from\
        \ the Standard Reports section if there is enough demand for it. The report\
        \ numbers used in this request are different in each company."
      operationId: Reports_companyReport
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is a report ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "The output format for the report. Supported formats: CSV, PDF,\
          \ XLS, XML, JSON"
        explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      - description: "yes=apply standard duplicate field filtering, no=return the\
          \ raw results with no duplicate filtering. Default value is \"yes\""
        explode: true
        in: query
        name: fd
        required: false
        schema:
          type: string
        style: form
      - description: Setting to false will return future dated values from history
          table fields.
        explode: true
        in: query
        name: onlyCurrent
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-reports-id-get-parameters-4-schema
        style: form
      responses:
        "200":
          description: All fields available in BambooHR.
        "404":
          description: if you request a nonexistent report number.
      summary: Get company report
      tags:
      - Reports
      x-unitTests:
      - request:
          method: GET
          uri: "/reports/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-reports-id
      x-accepts: application/json
  /{companyDomain}/v1/reports/custom:
    post:
      description: "Use this resource to request BambooHR generate a report. You must\
        \ specify a type of either \"PDF\", \"XLS\", \"CSV\", \"JSON\", or \"XML\"\
        . You must specify a list of fields to show on the report. The list of fields\
        \ is available here. The custom report will return employees regardless of\
        \ their status, \"Active\" or \"Inactive\". This differs from the UI, which\
        \ by default applies a quick filter to display only \"Active\" employees."
      operationId: Reports_requestCustomReport
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "The output format for the report. Supported formats: CSV, PDF,\
          \ XLS, XML, JSON"
        explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      - description: Limits the report to only current employees. Setting to false
          will include future-dated employees in the report.
        explode: true
        in: query
        name: onlyCurrent
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-reports-custom-post-parameters-2-schema
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCustomReport'
        required: true
      responses:
        "200":
          description: Custom report successfully requested
      summary: Request a custom report
      tags:
      - Reports
      x-unitTests:
      - request:
          method: POST
          uri: /files
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-reports-custom
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}/tables/{table}:
    get:
      description: Returns a data structure representing all the table rows for a
        given employee and table combination. The result is not sorted in any particular
        order.
      operationId: TabularData_getEmployeeTableRows
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Gets table rows for a given employee and table combination
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: GET
          uri: "/employees/{id}/tables/{table}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-tables-table
      x-accepts: application/json
    post:
      description: "Adds a table row. If employee is currently on a pay schedule syncing\
        \ with Trax Payroll, or being added to one, the row cannot be added if they\
        \ are missing any required fields for that table. If the API user is adding\
        \ a row on the compensation table, the row cannot be added if they are missing\
        \ any of the required employee fields (including fields not on that table)."
      operationId: TabularData_addTableRow
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TableRowUpdate'
      responses:
        "200":
          description: Row added successfully.
        "400":
          description: Invalid or missing required fields.
        "403":
          description: Permission denied.
        "406":
          description: An error with one or more of the fields.
      summary: Adds a table row
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/tables/{table}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-tables-table
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}/tables/{table}/{rowId}:
    delete:
      description: Deletes a table row
      operationId: TabularData_deleteRow
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: Row ID
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabularDataDeleteRowResponse'
          description: "Respond true if the row was deleted, false if the row was\
            \ not found."
        "400":
          description: Bad request. Invalid employee ID or table name.
        "401":
          description: Unauthorized.
        "403":
          description: Permission denied.
      summary: Deletes a table row
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: DELETE
          uri: "/employees/{id}/tables/{table}/{rowId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Table Row
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employees-id-tables-table-rowId
      x-accepts: application/json
    post:
      description: "Updates a table row. If employee is currently on a pay schedule\
        \ syncing with Trax Payroll, or being added to one, the row cannot be added\
        \ if they are missing any required fields for that table. If the API user\
        \ is updating a row on the compensation table, the row cannot be updated if\
        \ they are missing any of the required employee fields (including fields not\
        \ on that table)."
      operationId: TabularData_updateRow
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: Row ID
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TableRowUpdate'
      responses:
        "200":
          description: A successful response is possible even if one or more updates
            were dis-allowed because of permissions. As long as a single field is
            updated a 200 response will be returned.
        "400":
          description: Invalid or missing required fields.
        "403":
          description: Permission denied.
        "406":
          description: An error with one or more of the fields.
      summary: Updates a table row.
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/tables/{table}/{rowId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-tables-table-rowId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1_1/employees/{id}/tables/{table}/{rowId}:
    post:
      description: "Updates a table row. Fundamentally the same as version 1 so choose\
        \ a version and stay with it unless other changes occur. Changes from version\
        \ 1 are now minor with a few variations limited to ACA, payroll, terminated\
        \ rehire, gusto, benetrac, and final pay date."
      operationId: TabularData_updateRow
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: Row ID
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TableRowUpdate'
      responses:
        "200":
          description: A successful response is possible even if one or more updates
            were dis-allowed because of permissions. As long as a single field is
            updated a 200 response will be returned.
        "400":
          description: Invalid or missing required fields.
        "403":
          description: Permission denied.
        "406":
          description: An error with one or more of the fields.
      summary: Updates a table row.
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/tables/{table}/{rowId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1_1-employees-id-tables-table-rowId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1_1/employees/{id}/tables/{table}:
    post:
      description: "Adds a table row. Fundamentally the same as version 1 so choose\
        \ a version and stay with it unless other changes occur. Changes from version\
        \ 1 are now minor with a few variations limited to ACA, payroll, terminated\
        \ rehire, gusto, benetrac, and final pay date."
      operationId: TabularData_addRow
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TableRowUpdate'
      responses:
        "200":
          description: ""
      summary: Adds a table row
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/tables/{table}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1_1-employees-id-tables-table
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/changed/tables/{table}:
    get:
      description: "This API is merely an optimization to avoid downloading all table\
        \ data for all employees. When you use this API you will provide a timestamp\
        \ and the results will be limited to just the employees that have changed\
        \ since the time you provided. This API operates on an employee-last-changed-timestamp,\
        \ which means that a change in ANY field in the employee record will cause\
        \ ALL of that employees table rows to show up via this API."
      operationId: TabularData_getChangedTableRows
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: URL encoded iso8601 timestamp
        explode: true
        in: query
        name: since
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Gets all updated employee table data
      tags:
      - Tabular Data
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/changed/tables/{table}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-changed-tables-table
      x-accepts: application/json
  /{companyDomain}/v1/meta/lists/{listFieldId}:
    put:
      description: "This resource accepts one or more options. To update an option,\
        \ specify an ID. You may also remove an option from the list of current values\
        \ by archiving the value. To create a new option, do not specify an \"id\"\
        \ attribute."
      operationId: AccountInformation_updateListFieldValues
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: listFieldId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFieldValues'
        required: true
      responses:
        "200":
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the full list of options
            for the specified listId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: List is not editable or insufficient permissions.
        "404":
          description: A non-existant list value or option ID is specified.
        "409":
          description: A duplicate list value conflicted with the value specified.
      summary: Add or Update Values for List Fields
      tags:
      - Account Information
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-meta-lists-listFieldId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/time_off/request:
    put:
      description: "A time off request is an entity that describes the decision making\
        \ process for approving time off. Once a request has been created, a history\
        \ entry can be created documenting the actual use of time off."
      operationId: TimeOff_requestCreation
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
        required: true
      responses:
        "201":
          description: Request created.
        "400":
          description: Malformed request.
        "403":
          description: Forbidden. Cannot change past approved requests.
        "404":
          description: Employee not found
      summary: Add a Time Off Request
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: PUT
          uri: "/employees/{employeeId}/time_off/request"
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: text/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Add a Time Off Request"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-request
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_off/requests/{requestId}/status:
    put:
      description: "This endpoint allows you to change the status of a request in\
        \ the system. You can use this to approve, deny, or cancel a time off request."
      operationId: TimeOff_changeRequestStatus
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request'
        required: true
      responses:
        "200":
          description: The status has been updated.
        "400":
          description: "If the posted XML is invalid or the status is not \"approved\"\
            , \"denied\", \"canceled\", or \"declined\"."
        "403":
          description: If the current user doesn't have access to change the status
            in this way.
        "404":
          description: If the time off request ID doesn't exist.
      summary: Change a Request Status
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: PUT
          uri: "/time_off/requests/{timeOffRequestId}/status"
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: text/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Change a Request Status"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-time_off-requests-requestId-status
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/time_off/policies:
    get:
      description: ""
      operationId: TimeOff_listEmployeeTimeOffPolicies
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: List Time Off Policies for Employee
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: "/employees{employeeId}/time_off/policies"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: List Time Off Policies for Employee"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-time_off-policies
      x-accepts: application/json
    put:
      description: "To use this API make an HTTP PUT where the body of the request\
        \ is the JSON documented below. A time off policy will be assigned to the\
        \ employee with accruals starting on the date specified. A null start date\
        \ will remove the assignment. On success, a 200 Success code is returned and\
        \ the content of the response will be the same as the List Time off Policies\
        \ API."
      operationId: TimeOff_assignEmployeePolicies
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TimeOffPolicies'
      responses:
        "200":
          description: ""
      summary: Assign Time Off Policies for an Employee
      tags:
      - Time Off
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1_1/employees/{employeeId}/time_off/policies:
    get:
      description: ""
      operationId: TimeOff_listEmployeePolicies
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: "List Time Off Policies for Employee, Version 1.1"
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: "/employees{employeeId}/time_off/policies"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: List Time Off Policies for Employee"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-employees-employeeId-time_off-policies
      x-accepts: application/json
    put:
      description: "To use this API make an HTTP PUT where the body of the request\
        \ is the JSON documented below. A time off policy will be assigned to the\
        \ employee with accruals starting on the date specified. On success, a 200\
        \ Success code is returned and the content of the response will be the same\
        \ as the List Time off Policies API."
      operationId: TimeOff_assignEmployeePoliciesV11
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TimeOffPolicies'
      responses:
        "200":
          description: ""
      summary: "Assign Time Off Policies for an Employee, Version 1.1"
      tags:
      - Time Off
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/time_off/calculator:
    get:
      description: "This endpoint will sum future time off accruals, scheduled time\
        \ off, and carry-over events to produce estimates for the anticipated time\
        \ off balance on a given date in the future."
      operationId: TimeOff_estimateFutureTimeOffBalances
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: ""
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Estimate Future Time Off Balances
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: "/employees/{{employeeId}}/time_off/calculator?end=2017-12-01"
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Estimate Future Time Off Balances"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-time_off-calculator
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/photo/{size}:
    get:
      description: Get an employee photo
      operationId: Photos_getEmployeePhoto
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID for the employee you are getting the photo for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: Photo size
        explode: false
        in: path
        name: size
        required: true
        schema:
          enum:
          - original
          - large
          - medium
          - xs
          - tiny
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get an employee photo
      tags:
      - Photos
      x-unitTests:
      - request:
          method: GET
          uri: "/employees/{employeeId}/photo/small"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-photo-size
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/photo:
    post:
      description: Store a new employee photo
      operationId: Photos_storeNewEmployeePhoto
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID for the employee you are setting the photo for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: The file was successfully uploaded
        "404":
          description: if the employee doesn't exist
        "413":
          description: if the file is too big.
        "415":
          description: if the file is not in a supported file format or if the width
            doesn't match the height.
      summary: Store a new employee photo
      tags:
      - Photos
      x-unitTests:
      - request:
          method: POST
          uri: /files
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: multipart/form-data
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-employeeId-photo
      x-accepts: application/json
  /{companyDomain}/v1/employees/changed:
    get:
      description: "This API allows for efficient syncing of employee data. When you\
        \ use this API you will provide a timestamp and the results will be limited\
        \ to just the employees that have changed since the time you provided. This\
        \ API operates on an employee-last-changed-timestamp, which means that a change\
        \ in ANY individual field in the employee record, as well as any change to\
        \ the employment status, job info, or compensation tables, will cause that\
        \ employee to be returned via this API."
      operationId: LastChangeInformation_getChangedEmployeeIds
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: URL encoded iso8601 timestamp
        explode: true
        in: query
        name: since
        required: true
        schema:
          type: string
        style: form
      - description: "Use one of these in the {type} variable in the URL: \"inserted\"\
          , \"updated\", \"deleted\""
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Gets all updated employee IDs
      tags:
      - Last Change Information
      x-unitTests:
      - request:
          method: POST
          uri: /employees/changed
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-changed
      x-accepts: application/json
  /{companyDomain}/v1/login:
    post:
      description: User Login
      operationId: Login_userCredentials
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: ""
      summary: User Login
      tags:
      - Login
      x-unitTests:
      - request:
          method: POST
          uri: "/employees/{id}/tables/{table}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-login
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /{companyDomain}/v1/benefits/settings/deduction_types/all:
    get:
      description: Get benefit deduction types
      operationId: Benefits_getDeductionTypesAll
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit deduction types
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefits/settings/deduction_types/all
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefits-settings-deduction_types-all
      x-accepts: application/json
  /{companyDomain}/v1/benefit/company_benefit:
    get:
      description: Get a list of company benefits
      operationId: Benefits_listCompanyBenefits
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitsListCompanyBenefitsResponse'
          description: List of company benefits.
      summary: Get a list of company benefits
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefit/company_benefit
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Get List of benefit deductions"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit
      x-accepts: application/json
    post:
      description: Add a new company benefit
      operationId: Benefits_addNewCompanyBenefit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BenefitsAddNewCompanyBenefitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBenefitResponse'
          description: The newly created company benefit.
      summary: Add a new company benefit
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: POST
          uri: /benefit/company_benefit
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Add New Company Benefit"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefit-company_benefit
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /{companyDomain}/v1/benefit/company_benefit/{id}:
    delete:
      description: Delete a company benefit
      operationId: Benefits_deleteCompanyBenefit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the company benefit ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted company benefit.
      summary: Delete a company benefit
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: DELETE
          uri: "/benefit/company_benefit/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Delete a Company Benefit"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-benefit-company_benefit-id
      x-accepts: application/json
    get:
      description: Get a company benefit
      operationId: Benefits_getCompanyBenefit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the company benefit ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBenefitResponse'
          description: The requested company benefit.
      summary: Get a company benefit
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/benefit/company_benefit/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Get a Company Benefit"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit-id
      x-accepts: application/json
    put:
      description: Update a company benefit
      operationId: Benefits_updateCompanyBenefit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the company benefit ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitsUpdateCompanyBenefitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBenefitResponse'
          description: The updated company benefit.
      summary: Update a company benefit
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: PUT
          uri: "/benefit/company_benefit/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Update a Company Benefit"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-benefit-company_benefit-id
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/benefit/company_benefit/type:
    get:
      description: Get a list of company benefit types
      operationId: Benefits_listCompanyBenefitTypes
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitsListCompanyBenefitTypesResponse'
          description: List of company benefit types.
      summary: Get a list of company benefit types
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefit/company_benefit/type
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Get a list of Company Benefit Types"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit-type
      x-accepts: application/json
  /{companyDomain}/v1/benefit/employee_benefit:
    get:
      description: Get a list of employee benefits
      operationId: Benefits_listEmployeeBenefits
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBenefitFilters'
        description: Employee Benefit Filters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitsListEmployeeBenefitsResponse'
          description: List of employee benefits.
      summary: Get a list of employee benefits
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefit/employee_benefit
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Get a list of Employee Benefits"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-employee_benefit
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: Add an employee benefit
      operationId: Benefits_addEmployeeBenefit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitsAddEmployeeBenefitRequest'
        description: Employee Benefit
        required: true
      responses:
        "200":
          description: Employee benefit created
      summary: Add an employee benefit
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: POST
          uri: /benefit/employee_benefit
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "HE: Add an Employee Benefit"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefit-employee_benefit
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/benefitcoverages:
    get:
      description: Get benefit coverages
      operationId: Benefits_getCoverages
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit coverages
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefitcoverages
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitcoverages
      x-accepts: application/json
  /{companyDomain}/v1/employeedependents/{id}:
    get:
      description: Get employee dependent
      operationId: Benefits_getEmployeeDependent
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee dependent ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get employee dependent
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/employeedependents/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employeedependents-id
      x-accepts: application/json
    put:
      description: This API allows you to change the information for a given dependent
        ID.
      operationId: Benefits_updateDependentInformation
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee dependent ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EmployeeDependent'
      responses:
        "201":
          description: Dependent updated
        "400":
          description: if the posted JSON is invalid
        "403":
          description: if the current user doesn't have access to change the dependent
            in this way.
        "500":
          description: Server error.
      summary: Update an employee dependent
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: PUT
          uri: "/employeedependents/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Add a Time Off Request"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employeedependents-id
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employeedependents:
    get:
      description: Get all employee dependents
      operationId: Benefits_listEmployeeDependents
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{employeeid} is the employee ID. Supplying this ID limits the\
          \ response to the specific employee."
        explode: true
        in: query
        name: employeeid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get all employee dependents
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /employeedependents
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employeedependents
      x-accepts: application/json
    post:
      description: Adds an employee dependent
      operationId: Benefits_createEmployeeDependent
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EmployeeDependent'
      responses:
        "200":
          description: Dependent added
        "400":
          description: if the posted JSON is invalid
        "403":
          description: if the current user doesn't have access to add the dependent.
        "500":
          description: Server error.
      summary: Add an employee dependent
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: PUT
          uri: employeedependents
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Add a Time Off Request"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employeedependents
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/benefitplans:
    get:
      description: Get benefit plans
      operationId: Benefits_getBenefitPlans
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit plans
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/benefitplans/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitplans
      x-accepts: application/json
  /{companyDomain}/v1/benefitplancoverages:
    get:
      description: Get benefit plan coverages
      operationId: Benefits_listBenefitPlanCoverages
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit plan coverages
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/benefitplancoverages/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitplancoverages
      x-accepts: application/json
  /{companyDomain}/v1/benefitgroups:
    get:
      description: Get benefit groups
      operationId: Benefits_getBenefitGroups
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit groups
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefitgroups
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroups
      x-accepts: application/json
  /{companyDomain}/v1/benefitgroupemployees:
    get:
      description: Get benefit group employees
      operationId: Benefits_getBenefitGroupEmployees
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit group employees
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefitgroupemployees
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupemployees
      x-accepts: application/json
    post:
      description: Add a benefit group employee
      operationId: Benefits_addBenefitGroupEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitGroupEmployee'
        required: true
      responses:
        "200":
          description: Benefit group employee added
        "400":
          description: if the posted JSON is invalid
        "403":
          description: if the current user doesn't have access to add the benefit
            group employee.
        "500":
          description: Server error.
      summary: Add a benefit group employee
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: POST
          uri: /benefitgroupemployees
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefitgroupemployees
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/benefitgroupplans:
    get:
      description: Get benefit group plans
      operationId: Benefits_getGroupPlans
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit group plans
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefitgroupplans
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupplans
      x-accepts: application/json
  /{companyDomain}/v1/benefitgroupplancosts:
    get:
      description: Get benefit group plan costs
      operationId: Benefits_getGroupPlanCosts
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit group plan costs
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: /benefitgroupplancosts
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupplancosts
      x-accepts: application/json
  /{companyDomain}/v1/employee/deductions/{id}:
    get:
      description: Get employee deductions by benefit plan
      operationId: Benefits_getDeductionsByPlan
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the benefit plan ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get employee deductions by benefit plan
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/employee/deductions/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee-deductions-id
      x-accepts: application/json
  /{companyDomain}/v1/employee/plans/{id}:
    get:
      description: Get benefit plan deductions by employee
      operationId: Benefits_getBenefitPlanDeductionsByEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit plan deductions by employee
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/employee/plans/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee-plans-id
      x-accepts: application/json
  /{companyDomain}/v1/payroll/deductions/{id}:
    get:
      description: Get benefit deductions for employee
      operationId: Benefits_getEmployeeBenefitDeductions
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get benefit deductions for employee
      tags:
      - Benefits
      x-unitTests:
      - request:
          method: GET
          uri: "/payroll/deductions/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-payroll-deductions-id
      x-accepts: application/json
  /{companyDomain}/v1/employee_withholding/{id}:
    delete:
      description: Clear an employee's default withholdings
      operationId: Payroll_clearEmployeeWithholdings
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee id."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON success document.
        "400":
          description: Invalid employee ID is provided
        "403":
          description: if the API user doesn't have access to edit the employee withholdings
            information.
      summary: Clear an employee's default withholdings
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: DELETE
          uri: "/employee_withholding/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_withholding-id
      x-accepts: application/json
    get:
      description: Get an employee's default withholdings
      operationId: Payroll_getDefaultWithholdings
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with the requested
            information.
        "400":
          description: Invalid employee ID is provided
      summary: Get an employee's default withholdings
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: GET
          uri: "/employee_withholding/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_withholding-id
      x-accepts: application/json
    post:
      description: Add an employee's default withholdings
      operationId: Payroll_addEmployeeWithholdings
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee id."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWithholding'
        required: true
      responses:
        "200":
          description: Withholding added
        "400":
          description: "if an invalid employee ID is provided, or the posted JSON\
            \ is not valid."
        "403":
          description: if the current user doesn't have access to add employee withholdings
            information.
      summary: Add an employee's default withholdings
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: POST
          uri: "/employee_withholding/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_withholding-id
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employee_direct_deposit_accounts/{id}:
    delete:
      description: Clear an employee's direct deposit information
      operationId: Payroll_clearEmployeeDirectDeposit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON success document.
        "400":
          description: Invalid employee ID is provided
        "403":
          description: if the API user doesn't have access to edit the employee's
            direct deposit declarations.
      summary: Clear an employee's direct deposit information
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: DELETE
          uri: "/employee_direct_deposit_account/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_direct_deposit_accounts-id
      x-accepts: application/json
    get:
      description: Get an employee's direct deposit information
      operationId: Payroll_employeeDirectDepositInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with the requested
            information.
        "400":
          description: Invalid employee ID is provided
      summary: Get an employee's direct deposit information
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: GET
          uri: "/employee_direct_deposit_account/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_direct_deposit_accounts-id
      x-accepts: application/json
    post:
      description: Add an employee's direct deposit information
      operationId: Payroll_addEmployeeDirectDepositInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee id."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeposit'
        required: true
      responses:
        "200":
          description: The saved values for the employee's direct deposit declarations
            will be returned in JSON.
        "400":
          description: "if an invalid employee ID is provided, or the posted JSON\
            \ is not valid."
        "403":
          description: if the current user doesn't have access to update the employee's
            direct deposit declarations.
      summary: Add an employee's direct deposit information
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: POST
          uri: "/employee_direct_deposit_account/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_direct_deposit_accounts-id
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employee_unpaid_pay_stubs/{id}:
    delete:
      description: Clear an employee's unpaid paystubs
      operationId: Payroll_clearEmployeeUnpaidPaystubs
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee id."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Unpaid paystub cleared
        "400":
          description: Unauthorized
          headers:
            X-BambooHR-Message:
              description: "Human readable error to help when debugging, suitable\
                \ for logging"
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Forbidden
          headers:
            X-BambooHR-Message:
              description: "Human readable error to help when debugging, suitable\
                \ for logging"
              explode: false
              schema:
                type: string
              style: simple
      summary: Clear an employee's unpaid paystubs
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: DELETE
          uri: "/employee_unpaid_pay_stubs/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_unpaid_pay_stubs-id
      x-accepts: application/json
    get:
      description: Get an employee's unpaid paystubs
      operationId: Payroll_getUnpaidPaystubs
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the employee."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get an employee's unpaid paystubs
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: GET
          uri: "/employee_unpaid_pay_stubs/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_unpaid_pay_stubs-id
      x-accepts: application/json
  /{companyDomain}/v1/employee_unpaid_pay_stubs:
    post:
      description: Add an employee's unpaid paystubs
      operationId: Payroll_addEmployeeUnpaidPaystubs
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnpaidPaystub'
        required: true
      responses:
        "200":
          description: "Additionally, the saved values for the employee's unpaid pay\
            \ stubs will be returned in JSON."
        "400":
          description: "if an invalid employee ID is provided, or the posted JSON\
            \ is not valid."
        "403":
          description: if the current user doesn't have access to add employee unpaid
            pay stub information.
      summary: Add an employee's unpaid paystubs
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: POST
          uri: /employee_unpaid_pay_stubs
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_unpaid_pay_stubs
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employee_pay_stub/{id}:
    delete:
      description: Delete an employee's paystub
      operationId: Payroll_deleteEmployeePaystub
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the paystub (record) ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON success document.
        "400":
          description: Invalid employee ID is provided
        "403":
          description: if the API user doesn't have access to edit the employee unpaid
            paystub information.
      summary: Delete an employee's paystub
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: DELETE
          uri: "/employee_pay_stub/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_pay_stub-id
      x-accepts: application/json
    get:
      description: Get an employee's paystub
      operationId: Payroll_getPaystub
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the paystub (record) ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with the requested
            information.
        "400":
          description: Invalid employee ID is provided
      summary: Get an employee's paystub
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: GET
          uri: "/employee_pay_stub/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_pay_stub-id
      x-accepts: application/json
  /{companyDomain}/v1/employee_pay_stub:
    post:
      description: Add an employee's paystub
      operationId: Payroll_addEmployeePaystub
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePaystub'
        required: true
      responses:
        "200":
          description: "Additionally, the saved values for the employee's paystub\
            \ record will be returned in JSON along with its record ID."
        "400":
          description: "if an invalid employee ID is provided, or the posted JSON\
            \ is not valid."
        "403":
          description: if the current user doesn't have access to add an employee
            pay stub.
      summary: Add an employee's paystub
      tags:
      - Payroll
      x-unitTests:
      - request:
          method: POST
          uri: /employee_pay_stub
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_pay_stub
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/timetracking/record/{id}:
    get:
      description: Get an hour record
      operationId: Hours_getHourRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is the time tracking ID used to originally create the record."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with the requested
            information.
        "400":
          description: Invalid or missing argument.
        "500":
          description: Server error.
      summary: Get an hour record
      tags:
      - Hours
      x-unitTests:
      - request:
          method: GET
          uri: "/timetracking/record/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-timetracking-record-id
      x-accepts: application/json
  /{companyDomain}/v1/timetracking/add:
    post:
      description: Add an hour record
      operationId: Hours_recordAddition
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingRecord'
        required: true
      responses:
        "201":
          description: The time tracking ID will be returned in JSON.
        "400":
          description: "If any required field is missing, any of the IDs are invalid,\
            \ or the posted JSON is not valid."
      summary: Add an hour record
      tags:
      - Hours
      x-unitTests:
      - request:
          method: POST
          uri: /timetracking/add
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-timetracking-add
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/timetracking/adjust:
    put:
      description: Edit an hour record
      operationId: Hours_editHourRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HoursEditHourRecordRequest'
        required: true
      responses:
        "201":
          description: The time tracking ID will be returned in JSON.
        "400":
          description: "if any required field is missing, any of the IDs are invalid,\
            \ or the posted JSON is not valid"
      summary: Edit an hour record
      tags:
      - Hours
      x-unitTests:
      - request:
          method: PUT
          uri: /timetracking/adjust
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-timetracking-adjust
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/timetracking/delete/{id}:
    delete:
      description: Delete an hour record
      operationId: Hours_deleteHourRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The time tracking id is the id that was used to track the record
          up to 36 characters in length. (i.e. UUID).
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Record removed.
        "400":
          description: If the time tracking ID cannot be found.
      summary: Delete an hour record
      tags:
      - Hours
      x-unitTests:
      - request:
          method: DELETE
          uri: "/timetracking/delete/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-timetracking-delete-id
      x-accepts: application/json
  /{companyDomain}/v1/timetracking/record:
    post:
      description: Bulk add/edit hour records
      operationId: Hours_bulkRecordEdit
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingRecordBulk'
        required: true
      responses:
        "201":
          description: An array of objects with success as true or false depending
            on the success of each time tracking object in the request along with
            the successful IDs or the reason of the error.
      summary: Bulk add/edit hour records
      tags:
      - Hours
      x-unitTests:
      - request:
          method: POST
          uri: /timetracking/record
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/timesheets/approve:
    post:
      description: Approve employee timesheets
      operationId: TimeTracking_approveEmployeeTimesheets
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingApproveEmployeeTimesheetsRequest'
        required: true
      responses:
        "204":
          description: Successful approval will return a 204 - No content response.
        "403":
          description: Missing time tracking tool or permissions to approve.
        "404":
          description: Invalid timesheet id.
        "409":
          description: Stale data or employee clocked in.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Approve employee timesheets
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: /time_tracking/timesheets/approve
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Approve timesheets"
        x-testDescription: Approve timesheets
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-timesheets-approve
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/timesheets/clock_out_and_approve:
    post:
      description: Approve timesheets for employees that are currently clocked in
      operationId: TimeTracking_approveEmployeeTimesheets
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingApproveEmployeeTimesheetsRequest1'
        required: true
      responses:
        "204":
          description: Successful approval will return a 204 - No content response.
        "400":
          description: Invalid or missing argument
        "403":
          description: Missing time tracking tool or permissions to approve.
        "404":
          description: Invalid timesheet id.
        "409":
          description: Stale data or employee clocked in.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Approve timesheets for employees that are currently clocked in
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: /time_tracking/timesheets/clock_out_and_approve
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Clock out and approve timesheets"
        x-testDescription: Clock out and approve timesheets
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-timesheets-clock_out_and_approve
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/timesheets:
    get:
      description: Get timesheets by ids
      operationId: TimeTracking_getTimesheetsByIds
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingGetTimesheetsByIdsRequest'
        required: true
      responses:
        "200":
          description: The response content will be JSON with the requested information.
        "400":
          description: No timesheet ids given.
        "403":
          description: Missing permissions to view all or some of the timesheets.
        "404":
          description: Timesheet not found.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Get timesheets by ids
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: /time_tracking/timesheets
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Get timesheets"
        x-testDescription: Get timesheets
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-timesheets
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/clock_in/{employeeId}:
    post:
      description: Clock in (employee id optional)
      operationId: TimeTracking_clockInEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{employeeId} is id of the employee clocking out"
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingClockInEmployeeRequest'
      responses:
        "200":
          description: The response content will be JSON with the clock in information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Most likely because of missing permissions to clock in.
        "404":
          description: Id not found.
        "409":
          description: Employee already clocked in or invalid timesheet type.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Clock in (employee id optional)
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: "/time_tracking/clock_in/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Clock in"
        x-testDescription: Clock in
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_in-employeeId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/clock_out/{employeeId}:
    post:
      description: Clock out (employee id optional)
      operationId: TimeTracking_clockOutEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{employeeId} is id of the employee clocking out"
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingClockOutEmployeeRequest'
      responses:
        "200":
          description: The response content will be JSON with the clock out information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Most likely because of missing permissions to clock out.
        "404":
          description: Id not found.
        "409":
          description: Employee already clocked in or invalid timesheet type.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Clock out (employee id optional)
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: "/time_tracking/clock_out/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Clock out"
        x-testDescription: Clock out
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_out-employeeId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/daily_entries:
    post:
      description: Store daily entries
      operationId: TimeTracking_storeDailyEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingStoreDailyEntriesRequest'
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "409":
          description: Invalid timesheet type.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Store daily entries
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: /time_tracking/daily_entries
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Store daily entries"
        x-testDescription: Store daily entries
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-daily_entries
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/clock_entries:
    delete:
      description: Delete clock entries
      operationId: TimeTracking_deleteClockEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingDeleteClockEntriesRequest'
        required: true
      responses:
        "204":
          description: Successful deletion will return a 204 - No content response.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions or timesheet already approved.
        "404":
          description: Id not found.
        "409":
          description: "If clock timesheet, may still be clocked in. Have to clock\
            \ out first."
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Delete clock entries
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: DELETE
          uri: /time_tracking/clock_entries
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Delete clock entries"
        x-testDescription: Delete clock entries
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-time_tracking-clock_entries
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: Store clock entries
      operationId: TimeTracking_storeClockEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingStoreClockEntriesRequest'
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "409":
          description: Invalid timesheet type or overlapping time entries.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Store clock entries
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: /time_tracking/clock_entries
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Store clock entries"
        x-testDescription: Store clock entries
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/timesheet/{timesheetId}:
    get:
      description: Get a timesheet for an employee
      operationId: TimeTracking_employeeTimesheetGet
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of employee to whom the timesheet belongs.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: timesheetId is the id to whom the timesheet belongs.
        explode: false
        in: path
        name: timesheetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the timesheet information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Get a timesheet for an employee
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/timesheet/{timesheetId}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Get employee timesheet"
        x-testDescription: Get employee timesheet
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-timesheet-timesheetId
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/daily_entries/{id}:
    get:
      description: Get a daily entry
      operationId: TimeTracking_getDailyEntry
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of employee to whom the daily entry belongs.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: the id to whom the daily entry belongs.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Get a daily entry
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/daily_entries/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Get a daily entry"
        x-testDescription: Get a daily entry
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-daily_entries-id
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/clock_entries/{id}:
    get:
      description: Get a clock entry
      operationId: TimeTracking_getClockEntry
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of employee to whom the clock entry belongs.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: the id to whom the clock entry belongs.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "500":
          description: Server error.
      summary: Get a clock entry
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/clock_entries/{id}"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Get a clock entry"
        x-testDescription: Get a clock entry
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-clock_entries-id
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/is_clocked_in:
    get:
      description: Is employee clocked in?
      operationId: TimeTracking_employeeClockedIn
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of employee to whom the clock entry belongs.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "403":
          description: Missing permissions.
        "500":
          description: Server error.
      summary: Is employee clocked in?
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/is_clocked_in"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Is employee clocked in?"
        x-testDescription: Is employee clocked in?
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-is_clocked_in
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/clock_out/datetime:
    post:
      description: Clock out an employee at a specific time
      operationId: TimeTracking_clockOutEmployeeAtSpecificTime
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to whom the projects belong.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingClockOutEmployeeAtSpecificTimeRequest'
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "400":
          description: Invalid information passed in.
        "403":
          description: Missing permissions.
        "404":
          description: Id not found.
        "412":
          description: Invalid company configuration or timezone.
        "500":
          description: Server error.
      summary: Clock out an employee at a specific time
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: "/time_tracking/employee/{employeeId}/clock_out/datetime"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Clock out employee at specific time"
        x-testDescription: Clock out employee at specific time
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/clock_in/data:
    post:
      description: Edit information on the currently clocked in entry
      operationId: TimeTracking_editClockedInEntryData
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to whom the projects belong.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingEditClockedInEntryDataRequest'
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "400":
          description: Invalid or missing argument.
        "403":
          description: Invalid permissions.
        "404":
          description: Not found.
        "409":
          description: Conflict found.
        "412":
          description: Precondition failed.
        "500":
          description: Server error.
      summary: Edit information on the currently clocked in entry
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: POST
          uri: "/time_tracking/employee/{employeeId}/clock_in/data"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Tracking: Edit information on the currently clocked in entry"
        x-testDescription: Edit information on the currently clocked in entry
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employee-employeeId-clock_in-data
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/projects:
    get:
      description: Get projects an employee can log time to
      operationId: TimeTracking_listEmployeeProjects
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to whom the projects belong.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the daily entry information.
        "500":
          description: Server error.
      summary: Get projects an employee can log time to
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/projects"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Time Tracking:Get projects an employee can log time to
        x-testDescription: Get projects an employee can log time to
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-projects
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employee/{employeeId}/projects/{projectId}/tasks:
    get:
      description: Get tasks for a project
      operationId: TimeTracking_getProjectTasks
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to whom the projects belong.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: id of the project to which the tasks belong.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be JSON with the task information.
        "403":
          description: Invalid permissions.
        "500":
          description: Server error.
      summary: Get tasks for a project
      tags:
      - Time Tracking
      x-unitTests:
      - request:
          method: GET
          uri: "/time_tracking/employee/{employeeId}/projects/{projectId}/tasks"
          headers:
            Authorization: "Basic {{apiKey}}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Time Tracking:Get tasks for a project
        x-testDescription: Get tasks for a project
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-projects-projectId-tasks
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/timesheet_entries:
    get:
      description: Get all timesheet entries for a given period of time.
      operationId: TimeTrackingPrivateBeta_listTimesheetEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: YYYY-MM-DD. Only show timesheet entries on/after the specified
          start date. Must be within the last 365 days.
        explode: true
        in: query
        name: start
        required: true
        schema:
          type: string
        style: form
      - description: YYYY-MM-DD. Only show timesheet entries on/before the specified
          end date. Must be within the last 365 days.
        explode: true
        in: query
        name: end
        required: true
        schema:
          type: string
        style: form
      - description: "A comma separated list of employee IDs. When specified, only\
          \ entries that match these employee IDs are returned."
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingPrivateBetaListTimesheetEntriesResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
      summary: Get Timesheet Entries
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-timesheet_entries
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/clock_entries/store:
    post:
      description: Add or edit timesheet clock entries.
      operationId: TimeTrackingPrivateBeta_addEditClockEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditClockEntriesRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditClockEntriesResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
        "500":
          description: Internal server error.
      summary: Add/Edit Timesheet Clock Entries
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries-store
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/clock_entries/delete:
    post:
      description: Delete timesheet clock entries.
      operationId: TimeTrackingPrivateBeta_deleteTimeSheetEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaDeleteTimeSheetEntriesRequest'
      responses:
        "204":
          description: Success. No content returned.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
        "412":
          description: Invalid time tracking configuration or timezone.
        "500":
          description: Internal server error.
      summary: Delete Timesheet Clock Entries
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries-delete
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/hour_entries/store:
    post:
      description: Add or edit timesheet hour entries.
      operationId: TimeTrackingPrivateBeta_addEditHourEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditHourEntriesRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditHourEntriesResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
        "500":
          description: Internal server error.
      summary: Add/Edit Timesheet Hour Entries
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-hour_entries-store
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/hour_entries/delete:
    post:
      description: Delete timesheet hour entries.
      operationId: TimeTrackingPrivateBeta_deleteHourEntries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaDeleteHourEntriesRequest'
      responses:
        "204":
          description: Success. No content returned.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
        "412":
          description: Invalid time tracking configuration or timezone.
        "500":
          description: Internal server error.
      summary: Delete Timesheet Hour Entries
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-hour_entries-delete
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employees/{employeeId}/clock_in:
    post:
      description: Clock in an employee.
      operationId: TimeTrackingPrivateBeta_addTimesheetClockIn
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to clock in.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaAddTimesheetClockInRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
      summary: Add Timesheet Clock-In Entry
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employees-employeeId-clock_in
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employees/{employeeId}/clock_out:
    post:
      description: Clock out an employee.
      operationId: TimeTrackingPrivateBeta_addClockOut
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to clock out.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
      summary: Add Timesheet Clock-Out Entry
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employees-employeeId-clock_out
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/employees/{employeeId}/projects:
    get:
      description: Get the projects an employee can track time for.
      operationId: TimeTrackingPrivateBeta_listEmployeeProjects
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: id of the employee to retrieve projects for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingPrivateBetaListEmployeeProjectsResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
      summary: Get Employee Projects
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employees-employeeId-projects
      x-accepts: application/json
  /{companyDomain}/v1/time_tracking/projects:
    post:
      description: Create a time tracking project with optional tasks.
      operationId: TimeTrackingPrivateBeta_createProjectTask
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingPrivateBetaCreateProjectTaskRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingProjectWithTasksAndEmployeeIds'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Forbidden. Insufficient user permissions or API access is not
            turned on.
        "406":
          description: Request not acceptable.
        "409":
          description: There was a conflict with the request.
        "500":
          description: Internal server error.
      summary: Create a Time Tracking Project
      tags:
      - Time Tracking - Private Beta
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-projects
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/aggregate:
    get:
      description: "Provides a list of all goals, type counts, goal comment counts,\
        \ and employees shared with goals for the given employee. This version of\
        \ the endpoint will not return any goals with milestones. Milestone functionality\
        \ for this endpoint begins in version 1.2."
      operationId: Goals_getAllAggregateInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID used to generate the aggregate
          information.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsGetAllAggregateInfoResponse'
          description: The response content will be an JSON document with the requested
            information.
      summary: Get All Aggregate Goal Info
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-aggregate
      x-accepts: application/json
  /{companyDomain}/v1_1/performance/employees/{employeeId}/goals/aggregate:
    get:
      description: "Provides a list of all goals, type counts, filter actions, goal\
        \ comment counts, and employees shared with goals for the given employee.\
        \ Difference from Version 1: Returns goals in the closed filter and provides\
        \ filter actions for each filter. This version of the endpoint will not return\
        \ any goals with milestones. Milestone functionality for this endpoint begins\
        \ in version 1.2."
      operationId: Goals_getAllAggregateInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID used to generate the aggregate
          information.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response'
          description: The response content will be an JSON document with the requested
            information.
      summary: "Get All Aggregate Goal Info, Version 1.1"
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-performance-employees-employeeId-goals-aggregate
      x-accepts: application/json
  /{companyDomain}/v1_2/performance/employees/{employeeId}/goals/aggregate:
    get:
      description: "Provides a list of all goals, type counts, filter actions, goal\
        \ comment counts, and employees shared with goals for the given employee.\
        \ Difference from Version 1.1: Returns all goals, including goals that contain\
        \ milestones."
      operationId: Goals_getAllAggregateInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID used to generate the aggregate
          information.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1'
          description: The response content will be an JSON document with the requested
            information.
      summary: "Get All Aggregate Goal Info, Version 1.2"
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_2-performance-employees-employeeId-goals-aggregate
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/aggregate:
    get:
      description: "Provides goal information, goal comments, and employees shared\
        \ with goals or who have commented on the given goal."
      operationId: Goals_getGoalAggregateInfo
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the Goal ID used to generate the aggregate information.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse'
          description: The response content will be an JSON document with the requested
            information.
      summary: Get Aggregate Goal Info
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-goalId-aggregate
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/sharedWith:
    put:
      description: Updates which employees this goal is shared with.
      operationId: Goals_updateGoalSharing
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsUpdateGoalSharingRequest'
        description: Employee IDs of employees with whom the goal is shared. All goal
          owners are considered "shared with".
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsUpdateGoalSharingResponse'
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the goal response object
            for the specified goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: No goal found for the given goalId.
      summary: Update Goal Sharing
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-performance-employees-employeeId-goals-goalId-sharedWith
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/progress:
    put:
      operationId: Goals_updateProgress
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: integer
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsUpdateProgressRequest'
        description: Employee IDs of employees with whom the goal is shared. All goal
          owners are considered "shared with".
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsUpdateProgressResponse'
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the goal response object
            for the specified goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: No goal found for the given goalId.
      summary: Update Goal Progress
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/filters:
    get:
      description: Get the number of goals per status for an employee.
      operationId: Goals_statusCount
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID to whom the goals are assigned.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsStatusCountResponse'
          description: The response content will be a JSON document with the requested
            information.
      summary: Get Goal Status Counts
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-filters
      x-accepts: application/json
  /{companyDomain}/v1_1/performance/employees/{employeeId}/goals/filters:
    get:
      description: "Get the number of goals per status for an employee. Difference\
        \ from Version 1: Returns goals in the closed filter and provides filter actions\
        \ for each filter."
      operationId: Goals_countPerStatus
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID to whom the goals are assigned.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsCountPerStatusResponse'
          description: The response content will be a JSON document with the requested
            information.
      summary: "Get Goal Status Counts, Version 1.1"
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-performance-employees-employeeId-goals-filters
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/canCreateGoals:
    get:
      description: Determine if the API user has permission to create a goal for this
        employee.
      operationId: Goals_determinePermission
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with the requested
            information.
      summary: Can Create a Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-canCreateGoals
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals:
    get:
      description: Get goals for an employee.
      operationId: Goals_getEmployeeGoals
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID to whom the goals are assigned.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: A filter that can be applied to only show the goals that are
          in a certain state.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsGetEmployeeGoalsResponse'
          description: The response content will be a JSON document with the requested
            information.
      summary: Get Goals
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals
      x-accepts: application/json
    post:
      description: Create a new goal for an employee.
      operationId: Goals_createEmployeeGoal
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGoal'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsCreateEmployeeGoalResponse'
          description: A goal object that includes the new goal ID.
        "400":
          description: If the posted XML or JSON is invalid or the minimum fields
            are not provided.
        "403":
          description: If the API user does not have permission to create a goal for
            this employee.
      summary: Create Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-performance-employees-employeeId-goals
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}:
    delete:
      description: Delete a goal.
      operationId: Goals_deleteById
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful deletion will return a 204 - No content response.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Delete Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-performance-employees-employeeId-goals-goalId
      x-accepts: application/json
    put:
      description: "Update a goal. This version will not update a goal to contain\
        \ milestones, that functionality is added in version 1.1"
      operationId: Goals_updateEmployeeGoal
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
        description: "Required fields: title, sharedWithEmployeeIds, dueDate. Any\
          \ non-required field not provided will overwrite existing data with a NULL\
          \ value."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsUpdateEmployeeGoalResponse'
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the goal response object
            for the specified goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Update Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-performance-employees-employeeId-goals-goalId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1_1/performance/employees/{employeeId}/goals/{goalId}:
    put:
      description: "Update a goal. Version 1.1 allows the updating of the milestones\
        \ contained within the goal, unlike Version 1."
      operationId: Goals_updateEmployeeGoalV11
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGoalV1_1'
        description: "Required fields: title, sharedWithEmployeeIds, dueDate. Any\
          \ non-required field not provided will overwrite existing data with a NULL\
          \ value."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsUpdateEmployeeGoalV11Response'
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the goal response object
            for the specified goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: "Update Goal, V1.1"
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1_1-performance-employees-employeeId-goals-goalId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/close:
    post:
      description: Close a goal.
      operationId: Goals_closeGoal
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsCloseGoalRequest'
        description: Comment field is optional.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsCloseGoalResponse'
          description: A successful response indicates that all the goal was closed.
            The content of the response will be the goal response object for the specified
            goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Close Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/reopen:
    post:
      description: Reopen a goal.
      operationId: Goals_reopenGoal
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsReopenGoalResponse'
          description: A successful response indicates that all the goal was reopened.
            The content of the response will be the goal response object for the specified
            goalId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Reopen a Goal
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-performance-employees-employeeId-goals-goalId-reopen
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/shareOptions:
    get:
      description: Provides a list of employees with whom the specified employee's
        goals may be shared.
      operationId: Goals_shareOptionsGet
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID to get sharing options for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: "The search term used to filter employees returned. Will search\
          \ name, employee ID and email."
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Limit will restrict results to specified number.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: The response content will be a JSON document with a list of
            available employees with whom the goals can be shared.
      summary: Available Goal Sharing Options
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-shareOptions
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/alignmentOptions:
    get:
      description: Get alignable goal options for an employee.
      operationId: Goals_getAlignableOptions
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID to get alignable goal options for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsGetAlignableOptionsRequest'
        description: "Get alignment options including the option currently aligned\
          \ with this goal (if applicable). If omitted, response will be alignment\
          \ options belonging to the API user."
      responses:
        "200":
          description: The response content will be a JSON document with a list of
            goals that are available alignment options.
      summary: Alignable Goal Options
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/comments:
    get:
      description: Get comments for a goal.
      operationId: Goals_getComments
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The response content will be a JSON document with a list of
            comments for the specified goal.
      summary: Get Goal Comments
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-goalId-comments
      x-accepts: application/json
    post:
      description: Create a new goal comment.
      operationId: Goals_createComment
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/post-goal-commentText'
      responses:
        "201":
          description: A goal comment object with the new goal comment ID.
        "400":
          description: If the posted XML or JSON is invalid or the minimum fields
            are not provided.
        "403":
          description: If the API user does not have permission to add a comment to
            the specified goal.
      summary: Create Goal Comment
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/performance/employees/{employeeId}/goals/{goalId}/comments/{commentId}:
    delete:
      description: Delete a goal comment.
      operationId: Goals_deleteComment
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      - description: commentId is the ID of a specific comment for the specified goal.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful deletion will return a 204 - No content response.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Delete Goal Comment
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-performance-employees-employeeId-goals-goalId-comments-commentId
      x-accepts: application/json
    put:
      description: Update a goal comment.
      operationId: Goals_updateComment
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: employeeId is the employee ID with whom the goal is associated.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      - description: goalId is the goal ID for the specified employee.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      - description: commentId is the comment ID for the specified goal.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/post-goal-commentText'
      responses:
        "200":
          description: A successful response indicates that all the requested changes
            were made. The content of the response will be the goal comment response
            object for the specified commentId.
        "400":
          description: The posted JSON is invalid.
        "403":
          description: Goal is not editable or insufficient permissions.
        "404":
          description: The goal specified by the given goalId was not found.
      summary: Update Goal Comment
      tags:
      - Goals
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/jobs:
    get:
      description: Get a list of job summaries. The owner of the API key used must
        have access to ATS settings. Combine as many different optional parameter
        filters as you like.
      operationId: ApplicantTracking_getJobSummaries
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: A list of status groups to filter positions by.
        explode: true
        in: query
        name: statusGroups
        required: false
        schema:
          enum:
          - ALL
          - DRAFT_AND_OPEN
          - Open
          - Filled
          - Draft
          - Deleted
          - On Hold
          - Canceled
          type: string
        style: form
      - description: A specific field to sort the results by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - count
          - title
          - lead
          - created
          - status
          type: string
        style: form
      - description: Order by which to sort results.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - title:
                      id: 7153
                      label: Draftsperson
                    postedDate: 2017-11-30 16:59:40
                    location:
                      id: 5094
                      label: St. Louis
                      address:
                        description: null
                        name: null
                        addressLine1: null
                        addressLine2: null
                        city: Lehi
                        state: Utah
                        zipcode: "84043"
                        country: United States
                        phoneNumber: null
                    department:
                      id: 367
                      label: Engineering
                    status:
                      id: 1
                      label: Open
                    newApplicantsCount: 1
                    activeApplicantsCount: 3
                    totalApplicantsCount: 4
                    id: 2
                    postingUrl: string
                  - title:
                      id: 16222
                      label: HR Specialist
                    postedDate: 2017-12-08 15:29:44
                    location:
                      id: 5094
                      label: St. Louis
                      address:
                        description: null
                        name: null
                        addressLine1: null
                        addressLine2: null
                        city: Lehi
                        state: Utah
                        zipcode: "84043"
                        country: United States
                        phoneNumber: null
                    department:
                      id: 17813
                      label: HR
                    status:
                      id: 1
                      label: Open
                    newApplicantsCount: 5
                    activeApplicantsCount: 5
                    totalApplicantsCount: 5
                    id: 3
                    postingUrl: string
              schema:
                $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
      summary: Get Job Summaries
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-jobs
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/applications:
    get:
      description: Get a list of applications. The owner of the API key used must
        have access to ATS settings. Combine as many different optional parameter
        filters as you like.
      operationId: ApplicantTracking_listApplications
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A Job Id to limit results to
        explode: true
        in: query
        name: jobId
        required: false
        schema:
          type: integer
        style: form
      - description: Application status id to filter by.
        explode: true
        in: query
        name: applicationStatusId
        required: false
        schema:
          type: integer
        style: form
      - description: A list of application status groups to filter by.
        explode: true
        in: query
        name: applicationStatus
        required: false
        schema:
          enum:
          - ALL
          - ALL_ACTIVE
          - NEW
          - ACTIVE
          - INACTIVE
          - HIRED
          type: string
        style: form
      - description: A list of position status groups to filter by.
        explode: true
        in: query
        name: jobStatusGroups
        required: false
        schema:
          enum:
          - ALL
          - DRAFT_AND_OPEN
          - Open
          - Filled
          - Draft
          - Deleted
          - On Hold
          - Canceled
          type: string
        style: form
      - description: A general search criteria by which to find applications.
        explode: true
        in: query
        name: searchString
        required: false
        schema:
          type: string
        style: form
      - description: A specific field to sort the results by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - first_name
          - job_title
          - rating
          - phone
          - status
          - last_updated
          - created_date
          type: string
        style: form
      - description: Order by which to sort results.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: "Only get applications newer than a given UTC timestamp, for\
          \ example 2024-01-01 13:00:00"
        explode: true
        in: query
        name: newSince
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    paginationComplete: true
                    applications:
                    - id: 0
                      appliedDate: string
                      status:
                        id: 0
                        label: string
                      rating: 0
                      applicant:
                        id: 0
                        firstName: string
                        lastName: string
                        avatar: string
                      job:
                        title:
                          id: 0
                          label: string
                        id: 0
                    nextPageUrl: string
              schema:
                $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse'
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
      summary: Get Applications
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-applications
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/applications/{applicationId}:
    get:
      description: Get the details of an application. The owner of the API key used
        must have access to ATS settings.
      operationId: ApplicantTracking_getApplicationDetails
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the application to look up details.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: 4
                    appliedDate: 2018-02-09 19:43:31
                    status:
                      id: 19
                      label: Moved
                      changedByUser:
                        id: 2292
                        firstName: Jim
                        lastName: Gang
                        avatar: null
                    rating: 5
                    resumeFileId: 10
                    coverLetterFileId: 5
                    movedTo:
                      applicationId: 5
                      job:
                        title:
                          id: 254
                          label: HR Specialist
                        id: 16222
                    movedFrom: null
                    alsoAppliedToCount: 2
                    duplicateApplicationCount: 1
                    referredBy: null
                    desiredSalary: "80000"
                    commentCount: 1
                    emailCount: 0
                    questionsAndAnswers:
                    - question:
                        id: 1
                        label: What's your favorite color
                      answer:
                        id: 22
                        label: blue
                    applicant:
                      email: test@bamboohr.com
                      phoneNumber: "8019942392"
                      address:
                        addressLine1: 12 w 12 s
                        addressLine2: null
                        city: Lehi
                        state: UT
                        zipcode: "84005"
                        country: United States
                      linkedinUrl: null
                      websiteUrl: null
                      availableStartDate: null
                      education:
                        institution: Arizona University
                        level:
                          id: 10
                          label: Master of Science
                      id: 35
                      firstName: Jimmy
                      lastName: Jackson
                      avatar: null
                    job:
                      title:
                        id: 6477
                        label: CEO
                      hiringLead:
                        employeeId: 40340
                        firstName: Josh
                        lastName: Smith
                        avatar: null
                        jobTitle:
                          id: 205
                          label: Head Engineer
                      id: 1
              schema:
                $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse'
          description: Success.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Get Application Details
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-applications-applicationId
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/applications/{applicationId}/comments:
    post:
      description: Add a comment to an application. The owner of the API key used
        must have access to ATS settings.
      operationId: ApplicantTracking_addApplicationComment
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the application to add a comment to.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-comments-post-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantTrackingAddApplicationCommentRequest'
        description: Comment object to post
        required: true
      responses:
        "200":
          description: Success.
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Add Application Comment
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-applications-applicationId-comments
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/statuses:
    get:
      description: Get a list of statuses for a company. The owner of the API key
        used must have access to ATS settings.
      operationId: ApplicantTracking_listStatuses
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - description: null
                    code: PHONE
                    enabled: true
                    id: "2"
                    manageable: true
                    name: Phone Screened
                    translatedName: Phone Screened
              schema:
                $ref: '#/components/schemas/ApplicantTrackingListStatusesResponse'
          description: Success.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
      summary: Get Statuses
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-statuses
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/applications/{applicationId}/status:
    post:
      description: Change applicant's status. The owner of the API key used must have
        access to ATS settings.
      operationId: ApplicantTracking_changeApplicantStatus
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the application to add a comment to.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-status-post-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantTrackingChangeApplicantStatusRequest'
        description: Sample Post Data.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Change Applicant's Status
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-applications-applicationId-status
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/locations:
    get:
      description: Get company locations for use in creating a new job opening. The
        owner of the API key used must have access to ATS settings.
      operationId: ApplicantTracking_getCompanyLocations
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantTrackingGetCompanyLocationsResponse'
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Get Company Locations
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-locations
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/hiring_leads:
    get:
      description: Get potential hiring leads for use in creating a new job opening.
        The owner of the API key used must have access to ATS settings.
      operationId: ApplicantTracking_getHiringLeads
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantTrackingGetHiringLeadsResponse'
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Get Hiring Leads
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-hiring_leads
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/application:
    post:
      description: Add a new candidate application to a job opening. The owner of
        the API key used must have access to ATS settings.
      operationId: ApplicantTracking_createNewApplication
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicantTrackingCreateNewApplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - result: success
                    candidateId: 42
              schema:
                $ref: '#/components/schemas/ApplicantTrackingCreateNewApplicationResponse'
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
        "422":
          description: Unprocessable entity. One or more parameters failed validation.
      summary: Add New Candidate
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-application
      x-content-type: multipart/form-data
      x-accepts: application/json
  /{companyDomain}/v1/applicant_tracking/job_opening:
    post:
      description: Add a new job opening. The owner of the API key used must have
        access to ATS settings.
      operationId: ApplicantTracking_createNewJobOpening
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicantTrackingCreateNewJobOpeningRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - result: success
                    jobOpeningId: 11
              schema:
                $ref: '#/components/schemas/ApplicantTrackingCreateNewJobOpeningResponse'
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
        "422":
          description: Unprocessable entity. One or more parameters failed validation.
      summary: Add New Job Opening
      tags:
      - Applicant Tracking
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-job_opening
      x-content-type: multipart/form-data
      x-accepts: application/json
  /{companyDomain}/v1/training/type:
    get:
      description: Get a list of training types. The owner of the API key used must
        have access to training settings.
      operationId: Training_getTypes
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    "1":
                      description: null
                      id: "1"
                      name: Emergency Preparedness
                      renewable: false
                      frequency: 0
                      dueFromHireDate: []
                      required: false
                      category: []
                      linkUrl: https://example.com/
                      allowEmployeesToMarkComplete: true
                    "2":
                      description: Very important.
                      id: 2X
                      name: CPR Certification
                      renewable: true
                      frequency: "12"
                      dueFromHireDate:
                        unit: day
                        amount: "1"
                      required: true
                      category:
                        id: "18001"
                        name: First Aid Trainings
                      linkUrl: null
                      allowEmployeesToMarkComplete: false
              schema:
                $ref: '#/components/schemas/TrainingGetTypesResponse'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: List Training Types
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-type
      x-accepts: application/json
    post:
      description: Add a training type. The owner of the API key used must have access
        to training settings.
      operationId: Training_typeAddition
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingTypeAdditionRequest'
        description: Training object to post
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingType'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingType'
          description: Created
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Add Training Type
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-type
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/training/type/{trainingTypeId}:
    delete:
      description: Delete an existing training type. The owner of the API key used
        must have access to training settings. Deleting a training type will only
        be successful if all employee trainings for this type have been removed prior
        to this request.
      operationId: Training_removeType
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training type to delete.
        explode: false
        in: path
        name: trainingTypeId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-delete-parameters-1-schema
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url or training type does not exist.
        "405":
          description: Training type was unable to be deleted.
      summary: Delete Training Type
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-type-trainingTypeId
      x-accepts: application/json
    put:
      description: Update an existing training type. The owner of the API key used
        must have access to training settings.
      operationId: Training_updateType
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training type to update.
        explode: false
        in: path
        name: trainingTypeId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingUpdateTypeRequest'
        description: Training type object to update to
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingType'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingType'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Update Training Type
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-type-trainingTypeId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/training/category:
    get:
      description: Get a list of training categories. The owner of the API key used
        must have access to training settings.
      operationId: Training_categoryList
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    "18047":
                      id: 18001X
                      name: First Aid Trainings
                    "18048":
                      id: "18002"
                      name: Management Training
              schema:
                $ref: '#/components/schemas/TrainingCategoryListResponse'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: List Training Categories
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-category
      x-accepts: application/json
    post:
      description: Add a training category. The owner of the API key used must have
        access to training settings.
      operationId: Training_addCategory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingAddCategoryRequest'
        description: Training category to post
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
          description: Created
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Add Training Category
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-category
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/training/category/{trainingCategoryId}:
    delete:
      description: Delete an existing training category. The owner of the API key
        used must have access to training settings.
      operationId: Training_deleteCategory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training category to delete.
        explode: false
        in: path
        name: trainingCategoryId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-delete-parameters-1-schema
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url or training category does not exist.
        "500":
          description: Internal server error
      summary: Delete Training Category
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-category-trainingCategoryId
      x-accepts: application/json
    put:
      description: Update an existing training category. The owner of the API key
        used must have access to training settings.
      operationId: Training_updateCategory
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training category to update.
        explode: false
        in: path
        name: trainingCategoryId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingUpdateCategoryRequest'
        description: Training category to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Update Training Category
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-category-trainingCategoryId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/training/record/employee/{employeeId}:
    get:
      description: Get all employee training records. The owner of the API key used
        must have access to view the employee. The API will only return trainings
        for the employee that the owner of the API key has permission to see. Included
        with each employee training is the training information that has been selected
        for tracking in settings.
      operationId: Training_listEmployeeTrainings
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the employee to get a list of trainings for.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-1-schema
        style: simple
      - description: The training type id is optional. Not supplying a training type
          id will return the collection of all training records for the employee.
        explode: true
        in: query
        name: trainingTypeId
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    "13":
                      id: "13"
                      employeeId: "40468"
                      trainingTypeId: "4"
                      completed: 2015-11-20
                      notes: null
                      credits: null
                      cost: null
                    "14":
                      id: "14"
                      employeeId: "40468"
                      trainingTypeId: "4"
                      completed: 2015-05-21
                      notes: null
                      credits: null
                      cost: null
                    "15":
                      id: "15"
                      employeeId: "40468"
                      trainingTypeId: "4"
                      completed: 2016-07-01
                      notes: "55"
                      credits: "55"
                      cost: 55.00 USD
              schema:
                $ref: '#/components/schemas/TrainingListEmployeeTrainingsResponse'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: List Employee Trainings
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-record-employee-employeeId
      x-accepts: application/json
    post:
      description: Add a new employee training record. The owner of the API key used
        must have permission to add trainings for the selected employee.
      operationId: Training_addEmployeeTrainingRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the employee to add a training record to.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-post-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingAddEmployeeTrainingRecordRequest'
        description: Training object to post
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
          description: Created
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Add New Employee Training Record
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-record-employee-employeeId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/training/record/{employeeTrainingRecordId}:
    delete:
      description: Delete an existing employee training record. The owner of the API
        key used must have permission to view and edit the employee and training type.
      operationId: Training_deleteEmployeeRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training record to delete.
        explode: false
        in: path
        name: employeeTrainingRecordId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-delete-parameters-1-schema
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url or training record does not exist.
        "405":
          description: Unable to delete training record.
      summary: Delete Employee Training Record
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-record-employeeTrainingRecordId
      x-accepts: application/json
    put:
      description: Update an existing exmployee training record. The owner of the
        API key used must have permission to add trainings for the selected employee
      operationId: Training_updateEmployeeTrainingRecord
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the training record to update.
        explode: false
        in: path
        name: employeeTrainingRecordId
        required: true
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingUpdateEmployeeTrainingRecordRequest'
        description: Training object to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
          description: Success
        "400":
          description: Bad request parameters.
        "401":
          description: Unauthorized. Invalid API credentials.
        "403":
          description: Insufficient user permissions or API access is not turned on.
        "404":
          description: Bad request url.
      summary: Update Employee Training Record
      tags:
      - Training
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-record-employeeTrainingRecordId
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/webhooks/monitor_fields:
    get:
      description: Get a list fields webhooks can monitor monitor
      operationId: Webhooks_listMonitorFields
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListMonitorFieldsResponse'
          description: A list of logs
        "401":
          description: The user API key is invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Get monitor fields
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-monitor_fields
      x-accepts: application/json
  /{companyDomain}/v1/webhooks/{id}/log:
    get:
      description: Get webhook logs for specific webhook id that is associated with
        the user API Key.
      operationId: Webhooks_getWebhookLogs
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook ID to get logs about.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookLogResponse'
          description: A Webhook
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook403Error'
          description: "The API user key is invalid, or does not have permission to\
            \ see the requested webhook."
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook404Error'
          description: The webhook does not exist.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Get Webhook Logs
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-id-log
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}:
    get:
      description: "Get employee data by specifying a set of fields. This is suitable\
        \ for getting basic employee information, including current values for fields\
        \ that are part of a historical table, like job title, or compensation information.\
        \ See the [fields](ref:metadata-get-a-list-of-fields) endpoint for a list\
        \ of possible fields."
      operationId: Employees_getEmployeeData
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{fields} is a comma separated list of values taken from the\
          \ official list of field names. "
        explode: true
        in: query
        name: fields
        required: true
        schema:
          default: "firstName,lastName"
          example: "firstName,lastName"
          type: string
          x-konfig-original-example: "firstName,lastName"
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-1-schema
        style: form
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-2-schema
        style: simple
      - description: Setting to false will return future dated values from history
          table fields.
        explode: true
        in: query
        name: onlyCurrent
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeesGetEmployeeDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeesGetEmployeeData200Response'
          description: An Employee
        "403":
          description: if the API user does not have permission to see the requested
            employee.
        "404":
          description: if the employee does not exist.
      summary: Get Employee
      tags:
      - Employees
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id
      x-accepts: application/json
    post:
      description: "Update an employee, based on employee ID. If employee is currently\
        \ on a pay schedule syncing with Trax Payroll, or being added to one, the\
        \ API user will need to update the employee with all of the following required\
        \ fields for the update to be successful (listed by API field name): employeeNumber,\
        \ firstName, lastName, dateOfBirth, ssn, gender, maritalStatus, hireDate,\
        \ address1, city, state, country, employmentHistoryStatus, exempt, payType,\
        \ payRate, payPer, location, department, and division."
      operationId: Employees_updateEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: Employee updated successfully.
        "400":
          description: Provided JSON is bad or user is missing required fields.
        "403":
          description: If the user doesn't have perms to see the employee or the user
            doesn't have perms to update ANY of the requested fields.
        "404":
          description: If the employee to be updated doesn't exist.
        "409":
          description: If an employee field was given an invalid value
      summary: Update Employee
      tags:
      - Employees
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees:
    post:
      description: "Add a new employee. New employees must have at least a first name\
        \ and a last name. The ID of the newly created employee is included in the\
        \ Location header of the response. Other fields can be included. Please see\
        \ the [fields](ref:metadata-get-a-list-of-fields) endpoint. New Employees\
        \ added to a pay schedule synced with Trax Payroll must have the following\
        \ required fields (listed by API field name): employeeNumber, firstName, lastName,\
        \ dateOfBirth, ssn, gender, maritalStatus, hireDate, address1, city, state,\
        \ country, employmentHistoryStatus, exempt, payType, payRate, payPer, location,\
        \ department, and division."
      operationId: Employees_createNewEmployee
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postNewEmployee'
        required: true
      responses:
        "201":
          description: "Additionally, an HTTP Location: header that points to the\
            \ new API URL for the new employee will be returned."
          headers:
            Location:
              description: The URL to view the employee in the web app. The ID of
                the employee will be included.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: If the posted XML or JSON is invalid or the minimum fields
            are not provided.
        "403":
          description: If the API user does not have permission to add an employee.
        "409":
          description: If an employee field was given an invalid value.
      summary: Add Employee
      tags:
      - Employees
      x-unitTests:
      - request:
          method: POST
          uri: /employees/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Add Employee (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{id}/files/view:
    get:
      description: Lists employee files and categories
      operationId: EmployeeFiles_listFilesAndCategories
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an employee ID. The special employee ID of zero (0)\
          \ means to use the employee ID associated with the API key (if any)."
        explode: false
        in: path
        name: id
        required: true
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-view-get-parameters-1-schema
        style: simple
      responses:
        "200":
          description: Employee file and category list
        "403":
          description: if the API user does not have permission to see the requested
            employee or the employee's files.
        "404":
          description: if no files are found for this employee.
      summary: List employee files and categories
      tags:
      - Employee Files
      x-unitTests:
      - request:
          method: GET
          uri: "/employees/{id}/files/view"
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Get Employees (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-files-view
      x-accepts: application/json
  /{companyDomain}/v1/files/view:
    get:
      description: Lists company files and categories
      operationId: CompanyFiles_listFilesAndCategories
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Company files and category list
        "403":
          description: if the API user does not have permission to see the company
            files.
        "404":
          description: if no files or categories are found.
      summary: List company files and categories
      tags:
      - Company Files
      x-unitTests:
      - request:
          method: GET
          uri: /files/view
          headers:
            Authorization: "Basic {{apiKey}}"
            Content-Type: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "SDD: Get Employees (BAD)"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-files-view
      x-accepts: application/json
  /{companyDomain}/v1/meta/fields:
    get:
      description: This endpoint can help with discovery of fields that are available
        in an account.
      operationId: AccountInformation_getFieldList
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: All fields available in BambooHR.
      summary: Get a list of fields
      tags:
      - Account Information
      x-unitTests:
      - request:
          method: GET
          uri: /meta/fields/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-fields
      x-accepts: application/json
  /{companyDomain}/v1/meta/tables:
    get:
      description: This endpoint can help discover table fields available in your
        BambooHR account.
      operationId: AccountInformation_discoverTableFields
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: All table fields available in BambooHR
      summary: Get a list of tabular fields
      tags:
      - Account Information
      x-unitTests:
      - request:
          method: GET
          uri: /meta/tables/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/xml
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Tabular Fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-tables
      x-accepts: application/json
  /{companyDomain}/v1/meta/lists:
    get:
      description: "This endpoint will return details for all list fields. Lists that\
        \ can be edited will have the \"manageable\" attribute set to yes. Lists with\
        \ the \"multiple\" attribute set to yes are fields that can have multiple\
        \ values. Options with the \"archived\" attribute set to yes should not appear\
        \ as current options, but are included so that historical data can reference\
        \ the value."
      operationId: AccountInformation_getListFields
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: All details for list fields available in BambooHR
      summary: Get details for list fields
      tags:
      - Account Information
      x-unitTests:
      - request:
          method: GET
          uri: /meta/lists/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get details for list fields"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-lists
      x-accepts: application/json
  /{companyDomain}/v1/meta/users:
    get:
      description: ""
      operationId: AccountInformation_getUserList
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get a List of Users
      tags:
      - Account Information
      x-unitTests:
      - request:
          method: GET
          uri: /meta/users/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Users"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-users
      x-accepts: application/json
  /{companyDomain}/v1/meta/time_off/types:
    get:
      description: This endpoint gets a list of time off types.
      operationId: TimeOff_getTimeOffTypes
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "set to 'request' to get a list of all time off types with which\
          \ this user can create a time off request. The default is to return the\
          \ list of time off types the user has permissions on. This distinction is\
          \ important, as employees can request time off for types that they don't\
          \ have permission to view balances and requests for."
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Time off types
      summary: Get Time Off Types
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: /meta/time_off/types/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get Time Off Types"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-time_off-types
      x-accepts: application/json
  /{companyDomain}/v1/meta/time_off/policies:
    get:
      description: This endpoint gets a list of time off policies.
      operationId: TimeOff_getPolicies
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      summary: Get Time Off Policies
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: /meta/time_off/policies/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Metadata: Get a List of Time Off Policies"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-time_off-policies
      x-accepts: application/json
  /{companyDomain}/v1/time_off/requests:
    get:
      description: ""
      operationId: TimeOff_getTimeOffRequests
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: A particular request ID to limit the response to.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: "Limit to requests that the user has a particular level of access\
          \ to. Legal values are: \"view\" or \"approve\". Defaults to view."
        explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      - description: A particular employee ID to limit the response to.
        explode: true
        in: query
        name: employeeId
        required: false
        schema:
          type: string
        style: form
      - description: YYYY-MM-DD. Only show time off that occurs on/after the specified
          start date.
        explode: true
        in: query
        name: start
        required: true
        schema:
          type: string
        style: form
      - description: YYYY-MM-DD. Only show time off that occurs on/before the specified
          end date.
        explode: true
        in: query
        name: end
        required: true
        schema:
          type: string
        style: form
      - description: "A comma separated list of time off types IDs to include limit\
          \ the response to. If omitted, requests of all types are included."
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: "A comma separated list of request status values to include.\
          \ If omitted, requests of all status values are included. Legal values are\
          \ \"approved\", \"denied\", \"superceded\", \"requested\", \"canceled\"."
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: ""
        "400":
          description: Malformed request
      summary: Get Time Off Requests
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: /time_off/requests/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off: Get Time Off Requests"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: true
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_off-requests
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/time_off/history:
    put:
      description: "To use this API make an HTTP PUT where the body of the request\
        \ is the JSON documented below. A new time off history item will be inserted\
        \ into the database. On success, a 201 Created code is returned and the \"\
        Location\" header of the response will contain a URL that identifies the new\
        \ history item."
      operationId: TimeOff_addTimeOffHistoryItem
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the employee.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffHistory'
        required: true
      responses:
        "201":
          description: The history item has been created.
        "400":
          description: "For empty or malformed JSON, an invalid date format, or an\
            \ invalid time off request."
        "403":
          description: Invalid permissions to perform this action.
        "409":
          description: If the time off request already has a history item.
      summary: Add a Time Off History Item For Time Off Request
      tags:
      - Time Off
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-history
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/employees/{employeeId}/time_off/balance_adjustment:
    put:
      description: "To use this API make an HTTP PUT where the body of the request\
        \ is the JSON documented below. A time off balance adjustment will be inserted\
        \ into the database. On success, a 201 Created code is returned and the \"\
        Location\" header of the response will contain a URL that identifies the new\
        \ history item."
      operationId: TimeOff_balanceAdjustmentPut
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the employee.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustTimeOffBalance'
        required: true
      responses:
        "201":
          description: The balance adjustment has been created.
        "400":
          description: "For empty or malformed JSON, an invalid date format, or an\
            \ invalid time off type."
        "403":
          description: Invalid permissions to perform this action.
      summary: Adjust Time Off Balance
      tags:
      - Time Off
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-balance_adjustment
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/time_off/whos_out:
    get:
      description: "This endpoint will return a list, sorted by date, of employees\
        \ who will be out, and company holidays, for a period of time."
      operationId: TimeOff_getWhosOutList
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: A date in the form YYYY-MM-DD - defaults to the current date.
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: A date in the form YYYY-MM-DD - defaults to 14 days from the
          start date.
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get a list of Who's Out
      tags:
      - Time Off
      x-unitTests:
      - request:
          method: GET
          uri: /time_off/whos_out/
          headers:
            Authorization: "Basic {{apiKey}}"
            Accept: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Time Off:  Get a list of Who's Out"
        x-testDescription: "TODO: Add Description"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_off-whos_out
      x-accepts: application/json
  /{companyDomain}/v1/webhooks:
    get:
      description: Gets as list of webhooks for the user API key.
      operationId: Webhooks_getUserList
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetUserListResponse'
          description: List of webhooks
        "401":
          description: The user API key is invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Gets as list of webhooks for the user API key.
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks
      x-accepts: application/json
    post:
      description: "Add a new Webhook. For more details or instructions you can refer\
        \ to the [webhooks API tutorial](https://documentation.bamboohr.com/docs/webhooks-api-permission-based)."
      operationId: Webhooks_addNewWebhook
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewWebHook'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksAddNewWebhookResponse'
          description: "Webhook created, JSON output of webhook follows. Private key\
            \ is included in the create webhook only!"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook400Error'
          description: "Provided JSON is bad, missing required fields, or mulitple\
            \ access levels."
          x-do-not-generate: true
        "401":
          description: The user API key is invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksAddNewWebhook403Response'
          description: Permission violations in the fields selected.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Add Webhook
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-webhooks
      x-content-type: application/json
      x-accepts: application/json
  /{companyDomain}/v1/webhooks/{id}:
    delete:
      description: Delete a webhook that is tied to a specific user API Key.
      operationId: Webhooks_deleteWebhook
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is an webhook ID that is associated with the User API key."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Webhook was deleted
        "401":
          description: The user API key is invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook403Error'
          description: The API user key does not have permission to delete the requested
            webhook.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook404Error'
          description: The webhook to be deleted doesn't exist.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Delete Webhook
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-webhooks-id
      x-accepts: application/json
    get:
      description: Get webhook data that is tied to a specific user API Key.
      operationId: Webhooks_getUserWebhook
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook ID to display details about.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookResponse'
          description: A Webhook
        "401":
          description: The user API key is invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook403Error'
          description: The API user key does not have permission to see the requested
            webhook.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook404Error'
          description: The webhook does not exist.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Get Webhook
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-id
      x-accepts: application/json
    put:
      description: "Update a webhook, based on webhook ID."
      operationId: Webhooks_updateWebhookById
      parameters:
      - description: "The subdomain used to access BambooHR. If you access BambooHR\
          \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
        explode: false
        in: path
        name: companyDomain
        required: true
        schema:
          type: string
        style: simple
      - description: "{id} is a webhook ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewWebHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookResponse'
          description: Webhook updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook400Error'
          description: "Provided JSON is bad, missing required fields, or mulitple\
            \ access levels."
          x-do-not-generate: true
        "401":
          description: The user API key is invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhookByIdResponse'
          description: "Permission violations in the fields selected, or the user\
            \ does not have access to the webhook."
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook404Error'
          description: The webhook to be updated doesn't exist.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook500Error'
          description: Internal error
          x-do-not-generate: true
      summary: Update Webhook
      tags:
      - Webhooks
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-webhooks-id
      x-content-type: application/json
      x-accepts: application/json
components:
  parameters:
    CompanyDomainParameter:
      description: "The subdomain used to access BambooHR. If you access BambooHR\
        \ at https://mycompany.bamboohr.com, then the companyDomain is \"mycompany\""
      explode: false
      in: path
      name: companyDomain
      required: true
      schema:
        type: string
      style: simple
    EmployeeIdPathParameter:
      description: The ID of the employee.
      explode: false
      in: path
      name: employeeId
      required: true
      schema:
        type: integer
      style: simple
    AcceptHeaderParameter:
      description: This endpoint can produce either JSON or XML.
      explode: false
      in: header
      name: Accept
      required: false
      schema:
        enum:
        - application/xml
        - application/json
        type: string
      style: simple
    AcceptXmlHeaderParameter:
      description: This endpoint will produce XML.
      explode: false
      in: header
      name: Accept
      required: false
      schema:
        enum:
        - application/xml
        type: string
      style: simple
    AcceptJsonHeaderParameter:
      description: This endpoint will produce JSON.
      explode: false
      in: header
      name: Accept
      required: false
      schema:
        enum:
        - application/json
        type: string
      style: simple
  requestBodies:
    TimeOffPolicies:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeOffPolicies'
      required: true
    NewWebHook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewWebHook'
      required: true
    TableRowUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TableRowUpdate'
      required: true
    EmployeeDependent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeDependent'
      required: true
    post-goal-commentText:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalsCreateCommentRequest'
      required: true
  responses:
    "400":
      description: Unauthorized
      headers:
        X-BambooHR-Message:
          description: "Human readable error to help when debugging, suitable for\
            \ logging"
          explode: false
          schema:
            type: string
          style: simple
    "401":
      description: Unauthorized
      headers:
        X-BambooHR-Message:
          description: "Human readable error to help when debugging, suitable for\
            \ logging"
          explode: false
          schema:
            type: string
          style: simple
    "403":
      description: Forbidden
      headers:
        X-BambooHR-Message:
          description: "Human readable error to help when debugging, suitable for\
            \ logging"
          explode: false
          schema:
            type: string
          style: simple
    "404":
      description: Not Found
      headers:
        X-BambooHR-Message:
          description: "Human readable error to help when debugging, suitable for\
            \ logging"
          explode: false
          schema:
            type: string
          style: simple
    "409":
      description: Conflict
      headers:
        X-BambooHR-Message:
          description: "Human readable error to help when debugging, suitable for\
            \ logging"
          explode: false
          schema:
            type: string
          style: simple
    "413":
      description: Payload too large
      headers:
        X-BambooHR-Message:
          description: The attempted file upload was too large
          explode: false
          schema:
            type: string
          style: simple
    "500":
      description: Unknown Error
      headers:
        X-BambooHR-Message:
          description: There was an unknown server error
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    Employee:
      additionalProperties: true
      example:
        firstName: Panda
        lastName: Bear
      properties:
        firstName:
          description: ""
          example: Panda
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-firstName
        lastName:
          description: ""
          example: Bear
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-lastName
      title: Employee when updating
      type: object
      x-konfig-original-example:
        firstName: Panda
        lastName: Bear
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee
    postNewEmployee:
      additionalProperties: true
      example:
        firstName: Panda
        lastName: Bear
      properties:
        firstName:
          description: ""
          example: Panda
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-postNewEmployee-properties-firstName
        lastName:
          description: ""
          example: Bear
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-postNewEmployee-properties-lastName
      title: New Employee
      type: object
      x-konfig-original-example:
        firstName: Panda
        lastName: Bear
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-postNewEmployee
    ListFieldValues:
      example:
        options:
        - archived: archived
          adpCode: adpCode
          id: 0
          value: value
        - archived: archived
          adpCode: adpCode
          id: 0
          value: value
      properties:
        options:
          description: ""
          items:
            $ref: '#/components/schemas/ListFieldValues_options_inner'
          type: array
      title: Add or Update Values for List Fields
      type: object
    TimeOffRequest:
      example:
        amount: 6
        notes:
        - note: note
          from: from
        - note: note
          from: from
        start: start
        previousRequest: 5
        end: end
        dates:
        - ymd: ymd
          amount: 1
        - ymd: ymd
          amount: 1
        timeOffTypeId: 0
        status: status
      properties:
        status:
          description: ""
          maximum: 255
          type: string
        start:
          description: ""
          maximum: 255
          type: string
        end:
          description: ""
          maximum: 255
          type: string
        timeOffTypeId:
          description: ""
          type: integer
        amount:
          description: ""
          type: integer
        notes:
          description: ""
          items:
            $ref: '#/components/schemas/TimeOffRequest_notes_inner'
          type: array
        dates:
          description: ""
          items:
            $ref: '#/components/schemas/TimeOffRequest_dates_inner'
          type: array
        previousRequest:
          description: ""
          type: integer
      title: Add time off request
      type: object
    request:
      example:
        status: Approved
        note: Note!
      properties:
        status:
          description: "One of approved, cancelled, denied"
          example: Approved
          maximum: 20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-request-properties-status
        note:
          description: A note to attach to the change in status
          example: Note!
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-request-properties-note
      title: Request Status
      type: object
      x-konfig-original-example:
        status: Approved
        note: Note!
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-request
    TimeOffHistory:
      example:
        date: date
        note: note
        timeOffRequestId: 0
      properties:
        date:
          description: The date the request should be added in history. This will
            usually be the first date of the request. Should be in ISO8601 date format
            (YYYY-MM-DD).
          type: string
        timeOffRequestId:
          description: The ID of the time off request.
          type: integer
        note:
          description: This is an optional note to show in history.
          maximum: 255
          type: string
      required:
      - date
      - timeOffRequestId
      type: object
    AdjustTimeOffBalance:
      example:
        date: date
        note: note
        amount: 6.0274563
        timeOffTypeId: 0
      properties:
        date:
          description: The date the adjustment should be added in history. Should
            be in ISO8601 date format (YYYY-MM-DD).
          type: string
        timeOffTypeId:
          description: The ID of the time off type to add a balance adjustment for.
          type: integer
        amount:
          description: The number of hours/days to adjust the balance by.
          format: float
          type: number
        note:
          description: This is an optional note to show in history.
          maximum: 255
          type: string
      required:
      - amount
      - date
      - timeOffTypeId
      type: object
    TimeOffPolicies:
      items:
        $ref: '#/components/schemas/TimeOffPolicies_inner'
      title: Time Off Policies
      type: array
    PostNewEmployeeFileCategory:
      example:
      - A new category
      items:
        type: string
      title: New Employee File Category
      type: array
      x-konfig-original-example:
      - A new category
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostNewEmployeeFileCategory
    EmployeeFileUpdate:
      example:
        shareWithEmployee: shareWithEmployee
        name: name
        categoryId: categoryId
      properties:
        name:
          description: ""
          type: string
        categoryId:
          description: ""
          type: string
        shareWithEmployee:
          description: ""
          type: string
      title: Employee File Update
      type: object
    NewCompanyFileCategory:
      example:
      - A new category
      items:
        type: string
      title: New Company File Category
      type: array
      x-konfig-original-example:
      - A new category
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewCompanyFileCategory
    CompanyFileUpdate:
      example:
        shareWithEmployee: shareWithEmployee
        name: name
        categoryId: categoryId
      properties:
        name:
          description: ""
          type: string
        categoryId:
          description: ""
          type: string
        shareWithEmployee:
          description: ""
          type: string
      title: Company File Update
      type: object
    RequestCustomReport:
      example:
        filters:
          lastChanged:
            includeNull: includeNull
            value: value
        title: title
        fields:
        - fields
        - fields
      properties:
        title:
          description: ""
          type: string
        filters:
          $ref: '#/components/schemas/RequestCustomReport_filters'
        fields:
          description: ""
          items:
            description: ""
            type: string
          type: array
      title: Request Custom Report
      type: object
    TableRowUpdate:
      example:
        date: date
        division: division
        jobTitle: jobTitle
        location: location
        reportsTo: reportsTo
        department: department
      properties:
        date:
          description: ""
          type: string
        location:
          description: ""
          type: string
        division:
          description: ""
          type: string
        department:
          description: ""
          type: string
        jobTitle:
          description: ""
          type: string
        reportsTo:
          description: ""
          type: string
      title: Table Row Update
      type: object
    Login:
      properties:
        applicationKey:
          description: ""
          type: string
        user:
          description: ""
          type: string
        password:
          description: ""
          type: string
      title: Login
      type: object
    EmployeeDependent:
      example:
        lastName: lastName
        zipCode: zipCode
        country: country
        gender: gender
        city: city
        homePhone: homePhone
        employeeId: employeeId
        dateOfBirth: dateOfBirth
        isUsCitizen: isUsCitizen
        ssn: ssn
        firstName: firstName
        addressLine1: addressLine1
        middleName: middleName
        addressLine2: addressLine2
        state: state
        relationship: relationship
        isStudent: isStudent
      properties:
        employeeId:
          description: ""
          type: string
        firstName:
          description: ""
          type: string
        middleName:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
        relationship:
          description: ""
          type: string
        gender:
          description: ""
          type: string
        ssn:
          description: ""
          type: string
        dateOfBirth:
          description: ""
          type: string
        addressLine1:
          description: ""
          type: string
        addressLine2:
          description: ""
          type: string
        city:
          description: ""
          type: string
        state:
          description: ""
          type: string
        zipCode:
          description: ""
          type: string
        homePhone:
          description: ""
          type: string
        country:
          description: ""
          type: string
        isUsCitizen:
          description: ""
          type: string
        isStudent:
          description: ""
          type: string
      title: Employee Dependent
      type: object
    CompanyBenefitResponse:
      example:
        reimbursementFrequency: pay period
        meetAcaMin: "true"
        ssoLoginUrl: ssoLoginUrl
        endDate: 2000-01-23
        benefitType: health
        description: description
        planUrl: planUrl
        minEssentialCoverage: "true"
        benefitVendorId: benefitVendorId
        name: name
        ssoLoginUrlLinkText: ssoLoginUrlLinkText
        deductionTypeId: 0
        reimbursementAmount: 6.027456183070403
        safeHarbor: "true"
        startDate: 2000-01-23
      properties:
        description:
          description: Description
          type: string
        name:
          description: Name
          type: string
        benefitVendorId:
          description: Benefit vendor ID
          type: string
        benefitType:
          description: Benefit type
          enum:
          - health
          - dental
          - vision
          - retirement
          - hsa
          - flex
          - life
          - disability
          - reimbursement
          - supplemental
          - other
          type: string
        deductionTypeId:
          description: Deduction type ID
          type: integer
        startDate:
          description: Benefit start date
          format: date
          type: string
        endDate:
          description: Benefit end date
          format: date
          type: string
        planUrl:
          description: Plan url
          type: string
        ssoLoginUrl:
          description: SSO login url
          type: string
        ssoLoginUrlLinkText:
          description: SSO login link text
          type: string
        safeHarbor:
          description: Is a safe harbor
          enum:
          - "true"
          - "false"
          - null
          type: string
        meetAcaMin:
          description: Meets ACA minimum requirements
          enum:
          - "true"
          - "false"
          - null
          type: string
        reimbursementAmount:
          description: Reimbursement amount
          type: number
        reimbursementFrequency:
          description: Reimbursement frequency
          enum:
          - pay period
          - month
          - quarter
          - year
          - one time
          - null
          type: string
        minEssentialCoverage:
          description: Provides minimum essential coverage
          enum:
          - "true"
          - "false"
          - null
          type: string
      title: Company Benefit
      type: object
      x-konfig-is-used-in-successful-response: true
    CompanyBenefitRequest:
      properties:
        description:
          description: Description
          type: string
        companyBenefitName:
          description: Name
          type: string
        benefitVendorId:
          description: Benefit vendor ID
          type: string
        benefitType:
          description: Benefit type
          enum:
          - health
          - dental
          - vision
          - retirement
          - hsa
          - flex
          - life
          - disability
          - reimbursement
          - supplemental
          - other
          type: string
        deductionTypeId:
          description: Deduction type ID
          type: string
        startDate:
          description: Benefit start date
          format: date
          type: string
        endDate:
          description: Benefit end date
          format: date
          type: string
        planUrl:
          description: Plan url
          type: string
        ssoLoginUrl:
          description: SSO login url
          type: string
        ssoLoginUrlLinkText:
          description: SSO login link text
          type: string
        safeHarbor:
          description: Is a safe harbor
          type: boolean
        meetAcaMin:
          description: Meets ACA minimum requirements
          type: boolean
        reimbursementAmount:
          description: Reimbursement amount
          type: number
        reimbursementFrequency:
          description: Reimbursement frequency
          enum:
          - pay period
          - month
          - quarter
          - year
          - one time
          - null
          type: string
        reimbursementCurrencyCode:
          description: Reimbursement currency code
          type: string
        minEssentialCoverage:
          description: Provides minimum essential coverage
          type: boolean
      title: Company Benefit Request
      type: object
    CompanyBenefitType:
      example:
        canBeAcaPlan: true
        canCoExistEnrollment: true
        name: name
        isReimbursementPlan: true
        slug: slug
      properties:
        name:
          description: The name of the company benefit plan.
          type: string
        slug:
          description: The unique identifier for the company benefit plan.
          type: string
        canBeAcaPlan:
          description: Can the company benefit plan be an ACA plan.
          type: boolean
        canCoExistEnrollment:
          description: Can the company benefit plan co-exist with an enrollment plan.
          type: boolean
        isReimbursementPlan:
          description: Is the company benefit plan a reimbursement plan.
          type: boolean
      title: Company Benefit Type
      type: object
    EmployeeBenefitFilters:
      example:
        filters:
          employeeId: 0
          enrollmentStatusEffectiveDate: 2000-01-23
          companyBenefitId: 6
      properties:
        filters:
          $ref: '#/components/schemas/EmployeeBenefitFilters_filters'
      title: Employee Benefit Filters
      type: object
    EmployeeBenefit:
      example:
        companyAmount: 2.3021358869347655
        companyCapAmount: 7.061401241503109
        employeeCapAmount: 5.962133916683182
        coverageLevel: coverageLevel
        companyPercentBasedOn: companyPercentBasedOn
        employeeId: 0
        employeePercentBasedOn: employeePercentBasedOn
        deductionEndDate: 2000-01-23
        employeeAmountType: employeeAmountType
        companyBenefitName: companyBenefitName
        companyAmountType: companyAmountType
        companyCapAmountType: companyCapAmountType
        enrollmentStatus: Eligible
        deductionStartDate: 2000-01-23
        employeeCapAmountType: employeeCapAmountType
        benefitPlanCoverageId: 3.616076749251911
        companyBenefitId: 6
        currencyCode: currencyCode
        effectiveDate: 2000-01-23
        employeeAnnualMax: 5.637376656633329
        employeeAmount: 1.4658129805029452
        companyAnnualMax: 9.301444243932576
      properties:
        employeeId:
          description: Employee ID
          type: integer
        companyBenefitId:
          description: Company benefit ID
          type: integer
        companyBenefitName:
          description: Company benefit name
          type: string
        coverageLevel:
          description: Coverage level
          type: string
        deductionEndDate:
          description: Deduction end date
          format: date
          type: string
        deductionStartDate:
          description: Deduction start date
          format: date
          type: string
        enrollmentStatus:
          description: Enrollment status
          enum:
          - Eligible
          - Enrolled
          - Waived
          - Withdrawn
          - Terminated
          - Ineligible
          type: string
        effectiveDate:
          description: Enrollment status effective date
          format: date
          type: string
        currencyCode:
          description: Currency code
          type: string
        employeeAmount:
          description: Employee amount
          type: number
        employeeAmountType:
          description: Employee amount type
          type: string
        employeePercentBasedOn:
          description: Employee percent based on
          type: string
        employeeCapAmount:
          description: Employee cap amount
          type: number
        employeeCapAmountType:
          description: Employee cap amount type
          type: string
        employeeAnnualMax:
          description: Employee annual max
          type: number
        companyAmount:
          description: Company amount
          type: number
        companyAmountType:
          description: Company amount type
          type: string
        companyPercentBasedOn:
          description: Company percent based on
          type: string
        companyCapAmount:
          description: Company cap amount
          type: number
        companyCapAmountType:
          description: Company cap amount type
          type: string
        companyAnnualMax:
          description: Company annual max
          type: number
        benefitPlanCoverageId:
          description: Benefit Plan Coverage ID
          type: number
      title: Employee Benefit
      type: object
    BenefitPlan:
      properties:
        description:
          description: ""
          type: string
        name:
          description: ""
          type: string
        type:
          description: ""
          type: string
        deductionTypeId:
          description: ""
          type: string
        startYmd:
          description: ""
          type: string
        endYmd:
          description: ""
          type: string
        url:
          description: ""
          type: string
        meetAcaMin:
          description: ""
          type: string
      title: Benefit Plan
      type: object
    BenefitPlanCoverage:
      properties:
        benefitPlanId:
          description: ""
          type: string
        benefitCoverageId:
          description: ""
          type: string
        totalCost:
          description: ""
          type: string
        currencyType:
          description: ""
          type: string
        startYmd:
          description: ""
          type: string
        endYmd:
          description: ""
          type: string
      title: Benefit Plan Coverage
      type: object
    BenefitGroup:
      properties:
        name:
          description: ""
          type: string
        payPeriod:
          description: ""
          type: string
        startDate:
          description: ""
          type: string
        endDate:
          description: ""
          type: string
      title: Benefit Group
      type: object
    BenefitGroupEmployee:
      example:
        endDate: endDate
        benefitGroupId: benefitGroupId
        employeeId: employeeId
        startDate: startDate
      properties:
        benefitGroupId:
          description: ""
          type: string
        employeeId:
          description: ""
          type: string
        startDate:
          description: ""
          type: string
        endDate:
          description: ""
          type: string
      title: Benefit Group Employee
      type: object
    BenefitGroupPlan:
      properties:
        benefitGroupId:
          description: ""
          type: string
        benefitPlanId:
          description: ""
          type: string
        eligibility:
          description: ""
          type: string
        waitPeriod:
          description: ""
          type: string
        waitPeriodType:
          description: ""
          type: string
        startDate:
          description: ""
          type: string
        endDate:
          description: ""
          type: string
      title: Benefit Group Plan
      type: object
    BenefitGroupPlanCost:
      properties:
        benefitGroupPlanId:
          description: ""
          type: string
        benefitPlanCoverageId:
          description: ""
          type: string
        employeeCost:
          description: ""
          type: string
        companyCost:
          description: ""
          type: string
        startDate:
          description: ""
          type: string
        endDate:
          description: ""
          type: string
      title: Benefit Group Plan Cost
      type: object
    EmployeeWithholding:
      example:
        additionalFed: additionalFed
        localWithholding: localWithholding
        fedWithholding: fedWithholding
        additionalState: additionalState
        taxState: taxState
        stateWithholding: stateWithholding
        additionalLocal: additionalLocal
        taxLocal: taxLocal
      properties:
        fedWithholding:
          description: ""
          type: string
        stateWithholding:
          description: ""
          type: string
        localWithholding:
          description: ""
          type: string
        additionalFed:
          description: ""
          type: string
        additionalState:
          description: ""
          type: string
        additionalLocal:
          description: ""
          type: string
        taxState:
          description: ""
          type: string
        taxLocal:
          description: ""
          type: string
      title: Employee Withholding
      type: object
    EmployeeDeposit:
      example:
        accounts:
        - depositOrder: depositOrder
          accountType: accountType
          ruleType: ruleType
          bankName: bankName
          ruleAmount: ruleAmount
          maskedAccountNumber: maskedAccountNumber
        - depositOrder: depositOrder
          accountType: accountType
          ruleType: ruleType
          bankName: bankName
          ruleAmount: ruleAmount
          maskedAccountNumber: maskedAccountNumber
      properties:
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeeDeposit_accounts_inner'
          type: array
      title: Employee Deposit
      type: object
    EmployeeUnpaidPaystub:
      example:
        unpaidPeriods:
        - payDate: payDate
        - payDate: payDate
        employeeId: employeeId
      properties:
        employeeId:
          description: ""
          type: string
        unpaidPeriods:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeeUnpaidPaystub_unpaidPeriods_inner'
          type: array
      title: Employee Unpaid Paystub
      type: object
    EmployeePaystub:
      example:
        ytdDeductions: ytdDeductions
        ytdTaxes: ytdTaxes
        fedWitholding: fedWitholding
        taxes:
        - ytdTaxAmount: ytdTaxAmount
          taxDescription: taxDescription
          externalTaxId: externalTaxId
          taxAmount: taxAmount
        - ytdTaxAmount: ytdTaxAmount
          taxDescription: taxDescription
          externalTaxId: externalTaxId
          taxAmount: taxAmount
        deductions:
        - deductionAmount: deductionAmount
          externalDeductionId: externalDeductionId
          deductionDescription: deductionDescription
          ytdDeductionAmount: ytdDeductionAmount
        - deductionAmount: deductionAmount
          externalDeductionId: externalDeductionId
          deductionDescription: deductionDescription
          ytdDeductionAmount: ytdDeductionAmount
        payeeName: payeeName
        externalRecordId: externalRecordId
        payPeriodTo: payPeriodTo
        ytdGross: ytdGross
        deductionsAmount: deductionsAmount
        net: net
        payorZip: payorZip
        payorName: payorName
        twoJobs: twoJobs
        localWithholding: localWithholding
        gross: gross
        totalTaxes: totalTaxes
        additionalState: additionalState
        totalDeductions: totalDeductions
        federalType: 2020_w4
        payorState: payorState
        dependentsAmount: dependentsAmount
        employeeId: employeeId
        additionalLocal: additionalLocal
        taxLocal: taxLocal
        deposits:
        - depositAmount: depositAmount
          depositOrder: depositOrder
          accountType: accountType
          maskedAccountNumber: maskedAccountNumber
        - depositAmount: depositAmount
          depositOrder: depositOrder
          accountType: accountType
          maskedAccountNumber: maskedAccountNumber
        otherIncome: otherIncome
        additionalFed: additionalFed
        wages:
        - wageDescription: wageDescription
          hours: hours
          wageRate: wageRate
          ytdWageAmount: ytdWageAmount
          externalWageId: externalWageId
          wageAmount: wageAmount
        - wageDescription: wageDescription
          hours: hours
          wageRate: wageRate
          ytdWageAmount: ytdWageAmount
          externalWageId: externalWageId
          wageAmount: wageAmount
        payorCity: payorCity
        taxState: taxState
        stateWithholding: stateWithholding
        payorAdd2: payorAdd2
        payPeriodFrom: payPeriodFrom
        currencyCode: currencyCode
        payDate: payDate
        payorAdd1: payorAdd1
        ytdNet: ytdNet
      properties:
        employeeId:
          description: ""
          type: string
        externalRecordId:
          description: ""
          type: string
        payPeriodFrom:
          description: ""
          type: string
        payPeriodTo:
          description: ""
          type: string
        payDate:
          description: ""
          type: string
        payorName:
          description: ""
          type: string
        payorAdd1:
          description: ""
          type: string
        payorAdd2:
          description: ""
          type: string
        payorCity:
          description: ""
          type: string
        payorState:
          description: ""
          type: string
        payorZip:
          description: ""
          type: string
        payeeName:
          description: ""
          type: string
        currencyCode:
          description: ""
          type: string
        net:
          description: ""
          type: string
        gross:
          description: ""
          type: string
        totalTaxes:
          description: ""
          type: string
        totalDeductions:
          description: ""
          type: string
        ytdNet:
          description: ""
          type: string
        ytdGross:
          description: ""
          type: string
        ytdTaxes:
          description: ""
          type: string
        ytdDeductions:
          description: ""
          type: string
        fedWitholding:
          description: ""
          type: string
        federalType:
          description: "must be 2020_w4, pre_2020_w4, or null"
          enum:
          - 2020_w4
          - pre_2020_w4
          type: string
        twoJobs:
          description: boolean value
          type: string
        dependentsAmount:
          description: float value
          type: string
        otherIncome:
          description: float value
          type: string
        deductionsAmount:
          description: float value
          type: string
        stateWithholding:
          description: ""
          type: string
        localWithholding:
          description: ""
          type: string
        additionalFed:
          description: ""
          type: string
        additionalState:
          description: ""
          type: string
        additionalLocal:
          description: ""
          type: string
        taxState:
          description: ""
          type: string
        taxLocal:
          description: ""
          type: string
        wages:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeePaystub_wages_inner'
          type: array
        taxes:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeePaystub_taxes_inner'
          type: array
        deductions:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeePaystub_deductions_inner'
          type: array
        deposits:
          description: ""
          items:
            $ref: '#/components/schemas/EmployeePaystub_deposits_inner'
          type: array
      title: Employee Paystub
      type: object
    TimeTrackingRecord:
      example:
        rateType: rateType
        jobTitleId: 5
        jobData: jobData
        timeTrackingId: timeTrackingId
        departmentId: 1
        payRate: 5.637377
        jobCode: 7
        employeeId: 0
        divisionId: 6
        payCode: payCode
        hoursWorked: 2.302136
        dateHoursWorked: dateHoursWorked
      properties:
        timeTrackingId:
          description: A unique identifier for the record. Use this ID to adjust or
            delete these hours. It can be any ID you use to track the record up to
            36 characters in length. (i.e. UUID).
          maximum: 36
          type: string
        employeeId:
          description: The ID of the employee.
          type: integer
        divisionId:
          description: "[Optional] The ID of the division for the employee."
          type: integer
        departmentId:
          description: "[Optional] The ID of the department for the employee."
          type: integer
        jobTitleId:
          description: "[Optional] The ID of the job title for the employee."
          type: integer
        payCode:
          description: "[Optional] Only necessary if the payroll provider requires\
            \ a pay code"
          maximum: 50
          type: string
        dateHoursWorked:
          description: The date the hours were worked. Please use the ISO-8601 date
            format YYYY-MM-DD.
          type: string
        payRate:
          description: "[Optional] The rate of pay. e.g. $15.00/hour should use 15.00\
            \ here. Only necessary if the payroll provider requires a pay rate."
          format: float
          type: number
        rateType:
          description: The type of hours - regular or overtime. Please use either
            "REG" or "OT" here.
          type: string
        hoursWorked:
          description: The number of hours worked.
          format: float
          type: number
        jobCode:
          description: "[Optional] A job code."
          type: integer
        jobData:
          description: "[Optional] A list of up to four 20 characters max job numbers\
            \ in comma delimited format with no spaces."
          type: string
      required:
      - dateHoursWorked
      - employeeId
      - hoursWorked
      - rateType
      - timeTrackingId
      title: Time Tracking Record
      type: object
    TimeTrackingRecordBulk:
      items:
        $ref: '#/components/schemas/TimeTrackingRecord'
      title: Time Tracking Record Bulk
      type: array
    TimesheetEntry:
      example:
        note: note
        hours: 1.4658129805029452
        projectInfo:
          task:
            name: name
            id: 5
          project:
            name: name
            id: 5
        approved: true
        timezone: timezone
        start: start
        employeeId: 6
        end: end
        id: 0
        type: hour
        approvedAt: approvedAt
      properties:
        id:
          description: ID of the entry.
          type: integer
        employeeId:
          description: ID of the employee associated with the entry.
          type: integer
        type:
          description: type of the entry.
          enum:
          - hour
          - clock
          type: string
        start:
          description: "Timestamp, in UTC, of when the employee clocked in. ISO 8601\
            \ format. Property can be null."
          type: string
        end:
          description: "Timestamp, in UTC, of when the employee clocked out. ISO 8601\
            \ format. Property can be null."
          type: string
        timezone:
          description: The timezone the clock entry was recorded in. Property can
            be null.
          type: string
        hours:
          description: The number of hours for the entry. This value has a maximum
            scale of 4. Property can be null.
          type: number
        note:
          description: The note associated with the entry. Property can be null.
          type: string
        projectInfo:
          $ref: '#/components/schemas/TimeTrackingProjectInfo'
        approved:
          description: Approval status of the timesheet for the entry.
          type: boolean
        approvedAt:
          description: "Timestamp, in UTC, of when the timesheet for the entry was\
            \ approved. Property can be null."
          type: string
      title: Timesheet Entry
      type: object
      x-konfig-is-used-in-successful-response: true
    TimeTrackingProjectInfo:
      example:
        task:
          name: name
          id: 5
        project:
          name: name
          id: 5
      properties:
        project:
          $ref: '#/components/schemas/TimeTrackingProject'
        task:
          $ref: '#/components/schemas/TimeTrackingTask'
      title: Time Tracking Project Info
      type: object
    TimeTrackingProject:
      example:
        name: name
        id: 5
      properties:
        id:
          description: ID of the project.
          type: integer
        name:
          description: Name of the project.
          type: string
      title: Time Tracking Project
      type: object
    TimeTrackingTask:
      example:
        name: name
        id: 5
      properties:
        id:
          description: ID of the task.
          type: integer
        name:
          description: Name of the task.
          type: string
      title: Time Tracking Task
      type: object
    TimeTrackingProjectWithTasks:
      properties:
        id:
          description: ID of the project.
          type: integer
        name:
          description: Name of the project.
          type: string
        tasks:
          description: A list of time tracking tasks for the project.
          items:
            $ref: '#/components/schemas/TimeTrackingTask'
          type: array
      title: Time tracking project with tasks.
      type: object
    TimeTrackingProjectsWithTasks:
      items:
        $ref: '#/components/schemas/TimeTrackingProjectWithTasks'
      title: List of time tracking projects with tasks.
      type: array
    TimeTrackingProjectWithTasksAndEmployeeIds:
      example:
        employeeIds:
        - 6
        - 6
        name: name
        id: 0
        tasks:
        - name: name
          id: 5
        - name: name
          id: 5
      properties:
        id:
          description: ID of the project.
          type: integer
        name:
          description: Name of the project.
          type: string
        tasks:
          description: A list of time tracking tasks for the project.
          items:
            $ref: '#/components/schemas/TimeTrackingTask'
          type: array
        employeeIds:
          description: "A list of employee IDs that can log time for this project.\
            \ If not present, all employees can log time for the project."
          items:
            type: integer
          type: array
      title: Time tracking project with tasks and list of employee IDs.
      type: object
      x-konfig-is-used-in-successful-response: true
    Goal:
      example:
        dueDate: dueDate
        description: description
        completionDate: 5.962134
        id: 0
        percentComplete: 6
        title: title
        sharedWithEmployeeIds:
        - 1
        - 1
        alignsWithOptionId: alignsWithOptionId
      properties:
        title:
          description: The goal title.
          maxLength: 1024
          type: string
        description:
          description: The goal description.
          maxLength: 65535
          type: string
        id:
          description: A unique identifier for the record. Use this ID to reference
            this goal.
          type: integer
        percentComplete:
          description: The goal completion percentage (0 - 100).
          type: integer
        alignsWithOptionId:
          description: The option ID that aligns with this goal.
          type: string
        sharedWithEmployeeIds:
          description: Employee IDs of employees with whom the goal is shared. All
            goal owners are considered "shared with".
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: The goal due date in YYYY-mm-dd format.
          type: string
        completionDate:
          description: The date the goal was completed.
          format: float
          type: number
      required:
      - id
      - title
      title: Employee Goal
      type: object
    NewGoal:
      example:
        dueDate: dueDate
        description: description
        completionDate: 1.4658129
        percentComplete: 0
        title: title
        milestones:
        - endValue: 5.637377
          startValue: 5.962134
          title: title
        - endValue: 5.637377
          startValue: 5.962134
          title: title
        sharedWithEmployeeIds:
        - 6
        - 6
        alignsWithOptionId: alignsWithOptionId
      properties:
        title:
          description: "[Required] The goal title."
          maxLength: 1024
          type: string
        description:
          description: "[Optional] The goal description."
          maxLength: 65535
          type: string
        percentComplete:
          description: "[Optional] The goal completion percentage (0 - 100). If completionDate\
            \ is set, this value must be 100."
          type: integer
        alignsWithOptionId:
          description: "[Optional] The option ID that aligns with this goal."
          type: string
        sharedWithEmployeeIds:
          description: "[Required] Employee IDs of employees with whom the goal is\
            \ shared. All goal owners are considered \"shared with\". This must include\
            \ the employee for whom the goal is created."
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: "[Required] The goal due date in YYYY-mm-dd format."
          type: string
        completionDate:
          description: "[Optional] The date the goal was completed. If date is set,\
            \ and no milestones are contained within this goal, percentComplete must\
            \ be set to 100. If this goal does contain milestones, completion date\
            \ cannot be set."
          format: float
          type: number
        milestones:
          description: "[Optional] Milestones for the goal."
          items:
            $ref: '#/components/schemas/Milestone'
          type: array
      required:
      - dueDate
      - sharedWithEmployeeIds
      - title
      title: Add Employee Goal
      type: object
    UpdateGoalV1_1:
      properties:
        title:
          description: "[Required] The goal title."
          maxLength: 1024
          type: string
        description:
          description: "[Optional] The goal description."
          maxLength: 65535
          type: string
        alignsWithOptionId:
          description: "[Optional] The option ID that aligns with this goal."
          type: string
        sharedWithEmployeeIds:
          description: "[Required] Employee IDs of employees with whom the goal is\
            \ shared. All goal owners are considered \"shared with\". This must include\
            \ the employee for whom the goal is created."
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: "[Required] The goal due date in YYYY-mm-dd format."
          type: string
        milestonesEnabled:
          description: "[Optional] A flag indicating whether or not milestones are\
            \ enabled for this goal. Setting this flag to false will delete all existing\
            \ milestones for this goal."
          type: boolean
        deletedMilestoneIds:
          description: "[Optional] Ids of all the milestones to be deleted with the\
            \ update."
          items:
            type: integer
          type: array
        milestones:
          description: "[Optional] All milestones to be added to the goal with this\
            \ update."
          items:
            $ref: '#/components/schemas/Milestone'
          type: array
      required:
      - dueDate
      - sharedWithEmployeeIds
      - title
      title: Update Employee Goal With Milestones
      type: object
    Milestone:
      example:
        endValue: 5.637377
        startValue: 5.962134
        title: title
      properties:
        title:
          description: "[Required] The title of the milestone."
          type: string
        startValue:
          description: "[Optional] Initial value of the milestone. Rounded to the\
            \ nearest hundredth. If this value is set, endValue must also be set."
          format: float
          type: number
        endValue:
          description: "[Optional] End goal value for the milestone. Rounded to the\
            \ nearest hundredth. If this value is set, startValue must also be set."
          format: float
          type: number
      required:
      - title
      title: Goal Milestone
      type: object
    Location:
      example:
        zipcode: zipcode
        country:
          name: name
          id: 1
          iso_code: iso_code
        city: city
        phone: phone
        name: name
        description: description
        addressLine1: addressLine1
        addressLine2: addressLine2
        id: 0
        state:
          name: name
          id: 6
          abbrev: abbrev
          iso_code: iso_code
      properties:
        description:
          description: Description of the location
          type: string
        id:
          description: The ID of the location
          type: integer
        name:
          description: Name of the location
          type: string
        city:
          description: City of the location
          type: string
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
        zipcode:
          description: The ZIP or postal code of the location
          type: string
        addressLine1:
          description: The first address line of the location
          type: string
        addressLine2:
          description: The second address line of the location
          type: string
        phone:
          description: The phone number of the location
          type: string
      type: object
    State:
      example:
        name: name
        id: 6
        abbrev: abbrev
        iso_code: iso_code
      properties:
        id:
          description: The ID of the state
          type: integer
        name:
          description: The name of the state
          type: string
        abbrev:
          description: The abbreviation of the state
          type: string
        iso_code:
          description: The ISO standard code of the state
          type: string
      type: object
    Country:
      example:
        name: name
        id: 1
        iso_code: iso_code
      properties:
        id:
          description: The ID of the country
          type: integer
        name:
          description: The name of the country
          type: string
        iso_code:
          description: The ISO standard code of the country
          type: string
      type: object
    HiringLead:
      example:
        preferredFullName: preferredFullName
        employeeId: 0
      properties:
        employeeId:
          description: The employeeId of the potential hiring lead
          type: integer
        preferredFullName:
          description: The preferred full name of the potential hiring lead
          type: string
      type: object
    TrainingType:
      example:
        dueFromHireDate: 1
        renewable: true
        name: name
        linkUrl: linkUrl
        description: description
        id: 0
        category:
          name: name
          id: 5
        required: 5
        frequency: 6
        allowEmployeesToMarkComplete: true
      properties:
        description:
          description: Description for the training.
          type: string
        id:
          description: The ID of the training
          type: integer
        name:
          description: Name of the training type.
          type: string
        renewable:
          description: "If true, training will be renewed based off of frequency."
          type: boolean
        frequency:
          description: The frequency is the (optional) amount of months between renewing
            trainings. Not valid if training are not renewable.
          type: integer
        dueFromHireDate:
          description: Number of days before the training is due for new hires. Not
            valid if training is not required.
          type: integer
        required:
          description: Is this a required training?
          type: integer
        category:
          $ref: '#/components/schemas/TrainingCategory'
        linkUrl:
          description: Optional URL that can be included with a training.
          type: string
        allowEmployeesToMarkComplete:
          description: Allows all employees who can view the training to be able to
            mark it complete.
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    TrainingCategory:
      description: The category ID and name
      example:
        name: name
        id: 5
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    TrainingRecord:
      example:
        hours: 5.962133916683182
        notes: notes
        cost: cost
        instructor: instructor
        credits: 1.4658129805029452
        employeeId: 6
        id: 0
        completed: completed
        type: 5
      properties:
        id:
          description: The ID of the training record.
          type: integer
        employeeId:
          description: The ID of the employee associated with the training.
          type: integer
        completed:
          description: Completed is a date in the format yyyy-mm-dd.
          type: string
        notes:
          description: Notes left on the training record.
          type: string
        instructor:
          description: Name of the instructor.
          type: string
        credits:
          description: What was credited for the training record.
          type: number
        hours:
          description: Hours associated with the training record.
          type: number
        cost:
          description: The currency and cost for the training record.
          type: string
        type:
          description: The training type ID.
          type: integer
      type: object
      x-konfig-is-used-in-successful-response: true
    NewWebHook:
      example:
        includeCompanyDomain: true
        name: My new webhook
        format: json
        limit:
          times: 5
          seconds: 2
        monitorFields:
        - firstName
        - lastName
        postFields:
          firstName: Name
          lastName: Surname
          dateOfBirth: DOB
        url: url
        frequency:
          hour: 1
          month: 7
          day: 5
          minute: 35
      properties:
        name:
          description: The name of the webhook.
          example: My new webhook
          maxLength: 1024
          type: string
          x-konfig-original-example: My new webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-name
        monitorFields:
          description: A list of fields to monitor.
          example:
          - firstName
          - lastName
          items:
            type: string
          type: array
          x-konfig-original-example:
          - firstName
          - lastName
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-monitorFields
        postFields:
          additionalProperties:
            description: External name to post field to
            type: string
          description: "A list of fields to post to the webhook url. Field ID or alias:\
            \ external name"
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          type: object
          x-konfig-original-example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-postFields
        url:
          description: The url the webhook should send data to (must begin with https://).
          pattern: ^http://
          type: string
        format:
          description: "The format the webhook should use (json - default, form-encoded)."
          enum:
          - json
          - form-encoded
          type: string
        frequency:
          $ref: '#/components/schemas/NewWebHook_frequency'
        limit:
          $ref: '#/components/schemas/NewWebHook_limit'
        includeCompanyDomain:
          description: "If set to true, the company domain will be added to the header."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-includeCompanyDomain
      required:
      - monitorFields
      - name
      - postFields
      - url
      title: Add Webhook
      type: object
    WebHookResponse:
      example:
        includeCompanyDomain: true
        created: 2021-09-20 22:58:01
        name: Example Webhook
        format: json
        limit:
          times: 15
          seconds: 500
        monitorFields:
        - firstName
        - lastName
        id: 4
        postFields:
          firstName: Name
          lastName: Surname
          dateOfBirth: DOB
        lastSent: 2021-09-20 22:58:01
        url: https://www.example.com
        frequency:
          hour: 12
          month: 7
          day: 24
          minute: 56
      properties:
        id:
          description: The id of the webhook.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-id
        name:
          description: The name of the webhook.
          example: Example Webhook
          maxLength: 1024
          type: string
          x-konfig-original-example: Example Webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-name
        created:
          description: timestamp of creation
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-created
        lastSent:
          description: timestamp of last webhook sent
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-lastSent
        monitorFields:
          description: A list of fields to monitor.
          example:
          - firstName
          - lastName
          items:
            type: string
          type: array
          x-konfig-original-example:
          - firstName
          - lastName
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-monitorFields
        postFields:
          additionalProperties:
            description: External name to post field to
            type: string
          description: "A list of fields to post to the webhook url. Field ID or alias:\
            \ external name"
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          type: object
          x-konfig-original-example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-postFields
        url:
          description: The url the webhook should send data to.
          example: https://www.example.com
          type: string
          x-konfig-original-example: https://www.example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-url
        format:
          description: "The format the webhook should use (json, form-encoded)."
          example: json
          type: string
          x-konfig-original-example: json
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-format
        frequency:
          $ref: '#/components/schemas/WebHookResponse_frequency'
        limit:
          $ref: '#/components/schemas/WebHookResponse_limit'
        includeCompanyDomain:
          description: "If set to true, the company domain will be added to the header."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-includeCompanyDomain
      title: Add Webhook Response
      type: object
      x-konfig-is-used-in-successful-response: true
    WebHookLogResponse:
      example:
        employeeIds:
        - 1
        - 2
        webhookId: 5
        lastAttempted: 2021-09-20 22:58:01
        url: https://exmaple.com
        lastSuccess: 2021-09-20 22:58:01
        failureCount: 0
        status: 200
      properties:
        webhookId:
          description: The id of the webhook.
          example: 5
          type: integer
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-webhookId
        url:
          description: The URL of the webhook.
          example: https://exmaple.com
          type: string
          x-konfig-original-example: https://exmaple.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-url
        lastAttempted:
          description: timestamp of last time the webhook was sent
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-lastAttempted
        lastSuccess:
          description: timestamp of last time the webhook was sent successfully
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-lastSuccess
        failureCount:
          description: Count of how many times this call failed since last success
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-failureCount
        status:
          description: Status code of last request
          example: 200
          type: integer
          x-konfig-original-example: 200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-status
        employeeIds:
          description: A list of employee ids that were changed.
          example:
          - 1
          - 2
          items:
            type: integer
          type: array
          x-konfig-original-example:
          - 1
          - 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookLogResponse-properties-employeeIds
      title: Webhook Log Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Webhook400Error:
      example:
        errors:
        - error: Invalid request body
          issues:
          - problem one
          - problem two
          - …
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      title: Webhook 403 error
      type: object
      x-konfig-original-example:
        errors:
        - error: Invalid request body
          issues:
          - problem one
          - problem two
          - …
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook400Error
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Webhook403Error:
      example:
        errors:
        - error: "You do not have access to webhook ID: 5"
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      title: Webhook 403 error
      type: object
      x-konfig-original-example:
        errors:
        - error: "You do not have access to webhook ID: 5"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook403Error
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Webhook404Error:
      example:
        errors:
        - error: "No webhook was found with ID: 7."
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      title: Webhook 404 error
      type: object
      x-konfig-original-example:
        errors:
        - error: "No webhook was found with ID: 7."
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook404Error
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Webhook500Error:
      example:
        errors:
        - error: "Sorry for the inconvenience, please try again later or contact BambooHR."
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      title: Webhook 500 error
      type: object
      x-konfig-original-example:
        errors:
        - error: "Sorry for the inconvenience, please try again later or contact BambooHR."
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook500Error
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BenefitsAddNewCompanyBenefitRequest:
      allOf:
      - $ref: '#/components/schemas/CompanyBenefitRequest'
      - required:
        - benefitType
        - deductionTypeId
        - endDate
        - meetAcaMin
        - minEssentialCoverage
        - startDate
        type: object
    BenefitsUpdateCompanyBenefitRequest:
      allOf:
      - $ref: '#/components/schemas/CompanyBenefitRequest'
      - required:
        - benefitType
        - companyBenefitName
        - startDate
        type: object
    BenefitsAddEmployeeBenefitRequest:
      allOf:
      - $ref: '#/components/schemas/EmployeeBenefit'
      - required:
        - benefitType
        - companyBenefitId
        - companyBenefitName
        - effectiveDate
        - employeeId
        - enrollmentStatus
        - startDate
        type: object
    HoursEditHourRecordRequest:
      example:
        timeTrackingId: timeTrackingId
        hoursWorked: 0.8008282
      properties:
        timeTrackingId:
          description: The time tracking id is the id that was used to track the record
            up to 36 characters in length. (i.e. UUID).
          type: string
        hoursWorked:
          description: "The updated number of hours worked. e.g. if Employee A worked\
            \ 8.0 hours originally and decided they only worked 6.0, please send 6.0\
            \ here not -2.0."
          format: float
          type: number
      required:
      - hoursWorked
      - timeTrackingId
      type: object
    TimeTrackingApproveEmployeeTimesheetsRequest:
      example:
        timesheets:
        - timesheetId: 100
        - timesheetId: 100
        lastChanged: 1624485787
      properties:
        lastChanged:
          description: UNIX timestamp for last change to timesheet
          example: 1624485787
          type: integer
          x-konfig-original-example: 1624485787
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-lastChanged
        timesheets:
          description: Array of timesheet objects that contain the timesheet id
          items:
            $ref: '#/components/schemas/TimeTrackingApproveEmployeeTimesheetsRequest_timesheets_inner'
          type: array
      required:
      - lastChanged
      - timesheets
      type: object
    TimeTrackingApproveEmployeeTimesheetsRequest1:
      example:
        clockOuts:
        - timesheetId: 100
          date: 2021-04-23
          end: "1050"
        - timesheetId: 100
          date: 2021-04-23
          end: "1050"
      properties:
        clockOuts:
          description: Array of clock out information
          items:
            $ref: '#/components/schemas/TimeTrackingApproveEmployeeTimesheetsRequest1_clockOuts_inner'
          type: array
      type: object
    TimeTrackingGetTimesheetsByIdsRequest:
      example:
        timesheets: "10, 11, 12"
      properties:
        timesheets:
          description: Comma separated list of timesheet ids
          example: "10, 11, 12"
          type: string
          x-konfig-original-example: "10, 11, 12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingGetTimesheetsByIdsRequest-properties-timesheets
      required:
      - timesheets
      type: object
    TimeTrackingClockInEmployeeRequest:
      example:
        note: Back from lunch.
        timezone: America/Denver
        start: "780"
        projectId: 3
        taskId: 2
        clockInLocation:
          address: 123 Main
          latitude: 40.332729
          accuracy: 2
          longitude: -111.729235
      properties:
        start:
          description: The start time for the clock in. In 24 hour format HH:MM
          example: "780"
          type: string
          x-konfig-original-example: 780
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-start
        timezone:
          description: The timezone associated with the clock in.
          example: America/Denver
          type: string
          x-konfig-original-example: America/Denver
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-timezone
        note:
          description: The note associated with the clock in
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-note
        projectId:
          description: The id of the project associated with the clock in
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-projectId
        taskId:
          description: The id of the task associated with the clock in
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-taskId
        clockInLocation:
          $ref: '#/components/schemas/TimeTrackingClockInEmployeeRequest_clockInLocation'
      type: object
    TimeTrackingClockOutEmployeeRequest:
      example:
        clockOutLocation:
          address: 123 Main
          latitude: 40.332729
          accuracy: 2
          longitude: -111.729235
      properties:
        clockOutLocation:
          $ref: '#/components/schemas/TimeTrackingClockOutEmployeeRequest_clockOutLocation'
      type: object
    TimeTrackingStoreDailyEntriesRequest:
      example:
        entries:
        - date: 2021-06-25
          dailyEntryId: 1
          note: note
          hours: 7.5
          employeeId: 40342
          projectId: 1
          taskId: 2
        - date: 2021-06-25
          dailyEntryId: 1
          note: note
          hours: 7.5
          employeeId: 40342
          projectId: 1
          taskId: 2
      properties:
        entries:
          items:
            $ref: '#/components/schemas/TimeTrackingStoreDailyEntriesRequest_entries_inner'
          type: array
      type: object
    TimeTrackingDeleteClockEntriesRequest:
      example:
        clockEntryIds:
        - 10
        - 11
        - 12
      properties:
        clockEntryIds:
          example:
          - 10
          - 11
          - 12
          items:
            type: integer
          type: array
          x-konfig-original-example:
          - 10
          - 11
          - 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingDeleteClockEntriesRequest-properties-clockEntryIds
      type: object
    TimeTrackingStoreClockEntriesRequest:
      example:
        entries:
        - date: 2021-06-25
          note: Note for time entry
          start: "780"
          clockEntryId: 101
          employeeId: 40342
          end: "1020"
          projectId: 1
          taskId: 2
        - date: 2021-06-25
          note: Note for time entry
          start: "780"
          clockEntryId: 101
          employeeId: 40342
          end: "1020"
          projectId: 1
          taskId: 2
      properties:
        entries:
          items:
            $ref: '#/components/schemas/TimeTrackingStoreClockEntriesRequest_entries_inner'
          type: array
      type: object
    TimeTrackingClockOutEmployeeAtSpecificTimeRequest:
      example:
        datetime: 2020-12-16T17:28:00-05:00
        timezone: America/Denver
        employeeId: 40342
      properties:
        datetime:
          description: 'Date time for clock out in atom format. '
          example: 2020-12-16T17:28:00-05:00
          type: string
          x-konfig-original-example: 2020-12-16T17:28:00-05:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-datetime
        timezone:
          description: Timezone of the time entry
          example: America/Denver
          type: string
          x-konfig-original-example: America/Denver
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-timezone
        employeeId:
          description: The employeeId for the time entry.
          example: 40342
          type: integer
          x-konfig-original-example: 40342
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-employeeId
      type: object
    TimeTrackingEditClockedInEntryDataRequest:
      example:
        note: Back from lunch.
        timezone: America/Denver
        start: "780"
        clockOutLocation:
          address: 123 Main
          latitude: 40.332729
          accuracy: 2
          longitude: -111.729235
        projectId: 3
        taskId: 2
        clockInLocation:
          address: 123 Main
          latitude: 40.332729
          accuracy: 2
          longitude: -111.729235
      properties:
        start:
          description: The start time for the clock in. In 24 hour format HH:MM
          example: "780"
          type: string
          x-konfig-original-example: 780
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-start
        timezone:
          description: The timezone associated with the clock in.
          example: America/Denver
          type: string
          x-konfig-original-example: America/Denver
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-timezone
        note:
          description: The note associated with the clock in
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-note
        projectId:
          description: The id of the project associated with the clock in
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-projectId
        taskId:
          description: The id of the task associated with the clock in
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-taskId
        clockInLocation:
          $ref: '#/components/schemas/TimeTrackingEditClockedInEntryDataRequest_clockInLocation'
        clockOutLocation:
          $ref: '#/components/schemas/TimeTrackingEditClockedInEntryDataRequest_clockOutLocation'
      type: object
    TimeTrackingPrivateBetaAddEditClockEntriesRequest:
      example:
        entries:
        - date: 2024-01-31
          note: note
          start: 09:00
          employeeId: 0
          end: "1020"
          id: 6
          projectId: 1
          taskId: 5
        - date: 2024-01-31
          note: note
          start: 09:00
          employeeId: 0
          end: "1020"
          id: 6
          projectId: 1
          taskId: 5
      properties:
        entries:
          items:
            $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditClockEntriesRequest_entries_inner'
          type: array
      required:
      - entries
      type: object
    TimeTrackingPrivateBetaDeleteTimeSheetEntriesRequest:
      example:
        clockEntryIds:
        - 0
        - 0
      properties:
        clockEntryIds:
          items:
            type: integer
          type: array
      required:
      - clockEntryIds
      type: object
    TimeTrackingPrivateBetaAddEditHourEntriesRequest:
      example:
        hours:
        - date: 2024-01-31
          note: note
          hours: 3.5
          employeeId: 0
          id: 6
          projectId: 1
          taskId: 5
        - date: 2024-01-31
          note: note
          hours: 3.5
          employeeId: 0
          id: 6
          projectId: 1
          taskId: 5
      properties:
        hours:
          items:
            $ref: '#/components/schemas/TimeTrackingPrivateBetaAddEditHourEntriesRequest_hours_inner'
          type: array
      required:
      - hours
      type: object
    TimeTrackingPrivateBetaDeleteHourEntriesRequest:
      example:
        hourEntryIds:
        - 0
        - 0
      properties:
        hourEntryIds:
          items:
            type: integer
          type: array
      required:
      - hourEntryIds
      type: object
    TimeTrackingPrivateBetaAddTimesheetClockInRequest:
      example:
        note: Back from lunch.
        projectId: 10
        taskId: 25
      properties:
        projectId:
          description: id of the time tracking project that should be associated with
            the timesheet entry. Required if taskId is specified.
          example: 10
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-projectId
        taskId:
          description: id of the time tracking task that should be associated with
            the timesheet entry.
          example: 25
          type: integer
          x-konfig-original-example: 25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-taskId
        note:
          description: The note that should be associated with the timesheet entry
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-note
      type: object
    TimeTrackingPrivateBetaCreateProjectTaskRequest:
      example:
        employeeIds:
        - 0
        - 0
        allowAllEmployees: true
        hasTasks: true
        name: Project A
        billable: true
        tasks:
        - name: name
          billable: true
        - name: name
          billable: true
      properties:
        name:
          description: Name of the project.
          example: Project A
          type: string
          x-konfig-original-example: Project A
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaCreateProjectTaskRequest-properties-name
        billable:
          description: Indicates if the project is billable. Defaults to true if not
            provided.
          type: boolean
        allowAllEmployees:
          description: Indicates if all employees can log time for this project. Defaults
            to true if not provided.
          type: boolean
        employeeIds:
          description: A list of employee IDs that can log time for this project.
          items:
            type: integer
          type: array
        hasTasks:
          description: Indicates if the project has tasks. Defaults to false if not
            provided.
          type: boolean
        tasks:
          description: List of tasks to create and associate with the project.
          items:
            $ref: '#/components/schemas/TimeTrackingPrivateBetaCreateProjectTaskRequest_tasks_inner'
          type: array
      required:
      - name
      type: object
    GoalsUpdateGoalSharingRequest:
      example:
        sharedWithEmployeeIds:
        - 0
        - 0
      properties:
        sharedWithEmployeeIds:
          items:
            type: integer
          type: array
      type: object
    GoalsUpdateProgressRequest:
      type: integer
    GoalsCloseGoalRequest:
      type: string
    GoalsGetAlignableOptionsRequest:
      type: string
    GoalsCreateCommentRequest:
      type: string
    ApplicantTrackingAddApplicationCommentRequest:
      example:
        type: comment
        comment: I really like this applicant
      properties:
        type:
          default: comment
          description: Always the value "comment".
          example: comment
          pattern: ^comment$
          type: string
          x-konfig-original-example: comment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-type
        comment:
          description: The comment being posted.
          example: I really like this applicant
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-comment
      required:
      - comment
      - type
      type: object
      x-konfig-original-example:
        type: comment
        comment: I really like this applicant
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest
    ApplicantTrackingChangeApplicantStatusRequest:
      example:
        status: "2"
      properties:
        status:
          description: Associates a status id with an application.
          example: 2
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingChangeApplicantStatusRequest-properties-status
      required:
      - status
      type: object
      x-konfig-original-example:
        status: "2"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingChangeApplicantStatusRequest
    ApplicantTrackingCreateNewApplicationRequest:
      properties:
        firstName:
          description: The first name of the candidate.
          type: string
        lastName:
          description: The last name of the candidate.
          type: string
        email:
          description: The email address of the candidate.
          type: string
        phoneNumber:
          description: The phone number of the candidate.
          type: string
        source:
          description: "The source of the candidate application, e.g. LinkedIn, Indeed,\
            \ etc."
          type: string
        jobId:
          description: The id of the job opening for the candidate application.
          type: integer
        address:
          description: The street address of the candidate.
          type: string
        city:
          description: The city of the candidate.
          type: string
        state:
          description: "The state or province of the candidate. Accepts state name,\
            \ abbreviation, or ISO code."
          type: string
        zip:
          description: The zip code or postal code of the candidate.
          type: string
        country:
          description: The country of the candidate. Accepts country name or ISO code.
          type: string
        linkedinUrl:
          description: The LinkedIn profile url of the candidate.
          type: string
        dateAvailable:
          description: The available start date of the candidate with the format YYYY-MM-DD.
          type: string
        desiredSalary:
          description: The desired salary of the candidate.
          type: string
        referredBy:
          description: The person or entity that referred the candidate.
          type: string
        websiteUrl:
          description: "The personal website, blog, or online portfolio of the candidate."
          type: string
        highestEducation:
          description: The highest completed education level of the candidate.
          enum:
          - GED or Equivalent
          - High School
          - Some College
          - College - Associates
          - College - Bachelor of Arts
          - College - Bachelor of Fine Arts
          - College - Bachelor of Science
          - College - Master of Arts
          - College - Master of Fine Arts
          - College - Master of Science
          - College - Master of Business Administration
          - College - Doctorate
          - Medical Doctor
          - Other
          type: string
        collegeName:
          description: The college or university of the candidate.
          type: string
        references:
          description: A list of references supplied by the candidate.
          type: string
        resume:
          description: Resume of the candidate.
          format: binary
          type: string
        coverLetter:
          description: Cover letter of the candidate.
          format: binary
          type: string
      required:
      - firstName
      - jobId
      - lastName
      type: object
    ApplicantTrackingCreateNewJobOpeningRequest:
      properties:
        postingTitle:
          description: The posting title of the job opening.
          type: string
        jobStatus:
          description: The status of the job opening.
          enum:
          - Draft
          - Open
          - On Hold
          - Filled
          - Canceled
          type: string
        hiringLead:
          description: The employee id (from the v1/applicant_tracking/hiring_leads
            endpoint) of the hiring lead for the job opening.
          type: integer
        department:
          description: The department of the job opening.
          type: string
        employmentType:
          description: "The type of employment offered in the job opening, e.g. Full-Time,\
            \ Part-Time, Contractor, etc."
          type: string
        minimumExperience:
          description: The minimum experience level that qualifies a candidate for
            the job opening.
          enum:
          - Entry-level
          - Mid-level
          - Experienced
          - Manager/Supervisor
          - Senior Manager/Supervisor'
          - Executive
          - Senior Executive
          type: string
        compensation:
          description: The pay rate or compensation for the job opening.
          type: string
        jobLocation:
          description: The location id (from the v1/applicant_tracking/locations endpoint)
            of the job opening. Omit this parameter for a remote job location.
          type: integer
        jobDescription:
          description: The long-form text description of the job opening.
          type: string
        applicationQuestionResume:
          description: Whether the job opening application has a standard question
            for resume (true) or not (false) or if uploading a resume is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionAddress:
          description: Whether the job opening application has a standard question
            for address (true) or not (false) or if entering an address is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionLinkedinUrl:
          description: Whether the job opening application has a standard question
            for LinkedIn profile url (true) or not (false) or if entering a LinkedIn
            profile url is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionDateAvailable:
          description: Whether the job opening application has a standard question
            for availability date (true) or not (false) or if entering an availability
            date is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionDesiredSalary:
          description: Whether the job opening application has a standard question
            for desired salary (true) or not (false) or if entering a desired salary
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionCoverLetter:
          description: Whether the job opening application has a standard question
            for cover letter (true) or not (false) or if uploading a cover letter
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionReferredBy:
          description: Whether the job opening application has a standard question
            for referred by (true) or not (false) or if entering referred by is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionWebsiteUrl:
          description: Whether the job opening application has a standard question
            for website url (true) or not (false) or if entering a website url is
            mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionHighestEducation:
          description: Whether the job opening application has a standard question
            for highest education (true) or not (false) or if entering highest education
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionCollege:
          description: Whether the job opening application has a standard question
            for college (true) or not (false) or if entering a college is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionReferences:
          description: Whether the job opening application has a standard question
            for references (true) or not (false) or if entering references is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        internalJobCode:
          description: The internal job code for the job opening.
          type: string
      required:
      - employmentType
      - hiringLead
      - jobDescription
      - jobStatus
      - postingTitle
      type: object
    TrainingTypeAdditionRequest:
      example:
        name: My New Training
        frequency: "12"
        renewable: true
        category:
          id: 3
          name: CustomApiCategoryName2
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      properties:
        description:
          description: Description for the training.
          type: string
        name:
          description: Name of the new training type.
          example: My New Training
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-name
        frequency:
          description: The frequency is the (optional) amount of months between renewing
            trainings. Not valid if training are not renewable.
          example: 12
          type: integer
          x-konfig-original-example: "12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-frequency
        renewable:
          description: Renewable is optional but if you are setting it to true you
            must pass a frequency which is the months between renewals.
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-renewable
        category:
          $ref: '#/components/schemas/TrainingTypeAdditionRequest_category'
        required:
          description: Is this a required training?
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-required
        dueFromHireDate:
          description: Number of days before the training is due for new hires. Not
            valid unless training is required.
          example: 30
          type: integer
          x-konfig-original-example: "30"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-dueFromHireDate
        linkUrl:
          description: Optional URL that can be included with a training.
          type: string
        allowEmployeesToMarkComplete:
          default: false
          description: Allows all employees who can view the training to be able to
            mark it complete.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-allowEmployeesToMarkComplete
      required:
      - name
      - required
      type: object
      x-konfig-original-example:
        name: My New Training
        frequency: "12"
        renewable: true
        category:
          id: 3
          name: CustomApiCategoryName2
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest
    TrainingUpdateTypeRequest:
      example:
        name: My Edited Training
        frequency: "12"
        renewable: true
        category:
          name: Existing or new training category
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      properties:
        description:
          description: Description for the training.
          type: string
        name:
          description: Name of the training type.
          example: My Edited Training
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-name
        frequency:
          description: The frequency is the (optional) amount of months between renewing
            trainings. Not valid if training are not renewable.
          example: 12
          type: integer
          x-konfig-original-example: "12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-frequency
        renewable:
          description: Renewable is optional but if you are setting it to true you
            must pass a frequency.
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-renewable
        category:
          $ref: '#/components/schemas/TrainingUpdateTypeRequest_category'
        required:
          description: Is this a required training?
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-required
        dueFromHireDate:
          description: Number of days before the training is due for new hires. Not
            valid unless training is required.
          example: 30
          type: integer
          x-konfig-original-example: "30"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-dueFromHireDate
        linkUrl:
          description: Optional URL that can be included with a training.
          type: string
        allowEmployeesToMarkComplete:
          default: false
          description: Allows all employees who can view the training to be able to
            mark it complete.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-allowEmployeesToMarkComplete
      required:
      - name
      - required
      type: object
      x-konfig-original-example:
        name: My Edited Training
        frequency: "12"
        renewable: true
        category:
          name: Existing or new training category
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest
    TrainingAddCategoryRequest:
      example:
        name: My New Training Category
      properties:
        name:
          description: Name of the new training category.
          example: My New Training Category
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddCategoryRequest-properties-name
      required:
      - name
      type: object
      x-konfig-original-example:
        name: My New Training Category
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddCategoryRequest
    TrainingUpdateCategoryRequest:
      example:
        name: My Training Category
      properties:
        name:
          description: Name of the training category.
          example: My Training Category
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateCategoryRequest-properties-name
      required:
      - name
      type: object
      x-konfig-original-example:
        name: My Training Category
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateCategoryRequest
    TrainingAddEmployeeTrainingRecordRequest:
      example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
        type: "4"
      properties:
        completed:
          description: Completed is a required field and must be in yyyy-mm-dd format.
          example: 2016-05-25
          format: date
          pattern: "([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-completed
        cost:
          $ref: '#/components/schemas/TrainingAddEmployeeTrainingRecordRequest_cost'
        instructor:
          example: Bob Jones
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-instructor
        hours:
          example: 16
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-hours
        credits:
          example: 4
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-credits
        notes:
          example: sample note
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-notes
        type:
          default: 0
          description: This must be an existing training type id.
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-type
      required:
      - completed
      - type
      type: object
      x-konfig-original-example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
        type: "4"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest
    TrainingUpdateEmployeeTrainingRecordRequest:
      example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
      properties:
        completed:
          description: Completed is the only required field and must be in yyyy-mm-dd
            format. The other parameters are optional.
          example: 2016-05-25
          pattern: "([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-completed
        cost:
          $ref: '#/components/schemas/TrainingAddEmployeeTrainingRecordRequest_cost'
        instructor:
          example: Bob Jones
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-instructor
        hours:
          example: 16
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-hours
        credits:
          example: 4
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-credits
        notes:
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-notes
      required:
      - completed
      type: object
      x-konfig-original-example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest
    EmployeesGetDirectoryResponse:
      additionalProperties: true
      example:
        id: id
      properties:
        id:
          description: The ID of the employee
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeesGetDirectory200Response:
      additionalProperties: true
      properties:
        id:
          description: The ID of the employee
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    TabularDataDeleteRowResponse:
      example:
        sucess: true
      properties:
        sucess:
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    BenefitsListCompanyBenefitsResponse:
      items:
        $ref: '#/components/schemas/CompanyBenefitResponse'
      type: array
      x-konfig-is-used-in-successful-response: true
    BenefitsListCompanyBenefitTypesResponse:
      items:
        $ref: '#/components/schemas/CompanyBenefitType'
      type: array
      x-konfig-is-used-in-successful-response: true
    BenefitsListEmployeeBenefitsResponse:
      items:
        $ref: '#/components/schemas/EmployeeBenefit'
      type: array
      x-konfig-is-used-in-successful-response: true
    TimeTrackingPrivateBetaListTimesheetEntriesResponse:
      items:
        $ref: '#/components/schemas/TimesheetEntry'
      type: array
      x-konfig-is-used-in-successful-response: true
    TimeTrackingPrivateBetaAddEditClockEntriesResponse:
      items:
        $ref: '#/components/schemas/TimesheetEntry'
      type: array
      x-konfig-is-used-in-successful-response: true
    TimeTrackingPrivateBetaAddEditHourEntriesResponse:
      items:
        $ref: '#/components/schemas/TimesheetEntry'
      type: array
      x-konfig-is-used-in-successful-response: true
    TimeTrackingPrivateBetaListEmployeeProjectsResponse:
      items:
        $ref: '#/components/schemas/TimeTrackingProjectsWithTasks'
      type: array
      x-konfig-is-used-in-successful-response: true
    GoalsGetAllAggregateInfoResponse:
      example:
        persons:
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        comments:
        - goalId: 25
          commentCount: 2
        - goalId: 25
          commentCount: 2
        canAlign: false
        filters:
        - name: In Progress
          count: 3
          id: status-inProgress
        - name: In Progress
          count: 3
          id: status-inProgress
        canCreateGoals: true
        selectedFilter: status-inProgress
        goals:
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
      properties:
        canAlign:
          description: The selected user can align goals with other users.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-canAlign
        canCreateGoals:
          description: The selected user can create a goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-canCreateGoals
        filters:
          description: All the goals of the user seperated by filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfoResponse_filters_inner'
          type: array
        selectedFilter:
          description: The id of the current selected filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-selectedFilter
        goals:
          description: All goals in selected filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfoResponse_goals_inner'
          type: array
        persons:
          description: A list of people with access to the goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfoResponse_persons_inner'
          type: array
        comments:
          description: A list of how many comments belong to each goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfoResponse_comments_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsGetAllAggregateInfo200Response:
      example:
        persons:
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        comments:
        - goalId: 25
          commentCount: 2
        - goalId: 25
          commentCount: 2
        canAlign: false
        filters:
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
        canCreateGoals: true
        selectedFilter: status-inProgress
        goals:
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
      properties:
        canAlign:
          description: The selected user can align goals with other users.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-canAlign
        canCreateGoals:
          description: The selected user can create a goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-canCreateGoals
        filters:
          description: All the goals of the user seperated by filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response_filters_inner'
          type: array
        selectedFilter:
          description: The id of the current selected filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-selectedFilter
        goals:
          description: All goals in selected filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response_goals_inner'
          type: array
        persons:
          description: A list of people with access to the goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response_persons_inner'
          type: array
        comments:
          description: A list of how many comments belong to each goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response_comments_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsGetAllAggregateInfo200Response1:
      example:
        persons:
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        comments:
        - goalId: 25
          commentCount: 2
        - goalId: 25
          commentCount: 2
        canAlign: false
        filters:
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
        canCreateGoals: true
        selectedFilter: status-inProgress
        goals:
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
      properties:
        canAlign:
          description: The selected user can align goals with other users.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-canAlign
        canCreateGoals:
          description: The selected user can create a goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-canCreateGoals
        filters:
          description: All the goals of the user seperated by filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_filters_inner'
          type: array
        selectedFilter:
          description: The id of the current selected filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-selectedFilter
        goals:
          description: All goals in selected filter.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_goals_inner'
          type: array
        persons:
          description: A list of people with access to the goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_persons_inner'
          type: array
        comments:
          description: A list of how many comments belong to each goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_comments_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsGetGoalAggregateInfoResponse:
      example:
        persons:
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        - lastName: Johnson
          photoUrl: https://tim.johnson.jpg
          displayFirstName: Tim
          employeeId: 4353
          userId: 45
        goal:
          dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
        comments:
        - createdAt: 2022-05-23T17:32:42Z
          authorUserId: 1534
          canEdit: true
          canDelete: true
          id: 2
          text: This goal is taking longer than I thought.
        - createdAt: 2022-05-23T17:32:42Z
          authorUserId: 1534
          canEdit: true
          canDelete: true
          id: 2
          text: This goal is taking longer than I thought.
        alignsWithOptions:
        - id: 8
          title: Get all team goals for January complete.
        - id: 8
          title: Get all team goals for January complete.
        canAlign: false
        canCreateGoals: true
      properties:
        goal:
          $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_goal'
        canAlign:
          description: The selected user can align goals with other users.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-canAlign
        canCreateGoals:
          description: The selected user can create a goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-canCreateGoals
        alignsWithOptions:
          description: All possible goals that this goal could be aligned with.
          items:
            $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_alignsWithOptions_inner'
          type: array
        comments:
          description: Comments linked to selected goal.
          items:
            $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_comments_inner'
          type: array
        persons:
          description: A list of people with access to the goal.
          items:
            $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_persons_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsUpdateGoalSharingResponse:
      example:
        goal:
          dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
      properties:
        goal:
          $ref: '#/components/schemas/GoalsUpdateGoalSharingResponse_goal'
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsUpdateProgressResponse:
      example:
        goal:
          dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          sharedWithEmployeeIds:
          - 89
          - 89
          alignsWithOptionId: 0
          status: in_progress
      properties:
        goal:
          $ref: '#/components/schemas/GoalsUpdateProgressResponse_goal'
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsStatusCountResponse:
      example:
        filters:
        - name: In Progress
          count: 3
          id: status-inProgress
        - name: In Progress
          count: 3
          id: status-inProgress
      properties:
        filters:
          description: All the goals of the user seperated by filter.
          items:
            $ref: '#/components/schemas/GoalsStatusCountResponse_filters_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsCountPerStatusResponse:
      example:
        filters:
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
        - name: In Progress
          count: 3
          id: status-inProgress
          actions:
            canEditGoal: true
            canEditGoalProgressBar: true
            canCloseGoal: true
            canReopenGoal: true
            canShareGoal: true
      properties:
        filters:
          description: All the goals of the user seperated by filter.
          items:
            $ref: '#/components/schemas/GoalsCountPerStatusResponse_filters_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsGetEmployeeGoalsResponse:
      example:
        goals:
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
        - dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
      properties:
        goals:
          description: All goals of the selected employee
          items:
            $ref: '#/components/schemas/GoalsGetEmployeeGoalsResponse_goals_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsCreateEmployeeGoalResponse:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCreateEmployeeGoalResponse
      x-konfig-is-used-in-successful-response: true
    GoalsUpdateEmployeeGoalResponse:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateEmployeeGoalResponse
      x-konfig-is-used-in-successful-response: true
    GoalsUpdateEmployeeGoalV11Response:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateEmployeeGoalV11Response
      x-konfig-is-used-in-successful-response: true
    GoalsCloseGoalResponse:
      example:
        goal:
          dueDate: 2021-12-17T00:00:00.000+00:00
          description: Document every endpoint for the goals API.
          completionDate: 2021-12-16T00:00:00.000+00:00
          id: 4
          percentComplete: 100
          title: Complete Documentation Epic
          milestones:
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          - employeeGoalId: 12
            lastUpdateDateDateTime: 2023-07-12T14:50:46Z
            endValue: 15
            lastUpdateUserId: 24
            id: 2
            startValue: 0
            completedDateTime: 2024-07-12T14:50:46Z
            title: Sell 15 Doohickeys
            currentValue: 7
          sharedWithEmployeeIds:
          - 89
          - 89
          actions:
            canEditGoalProgressBar: false
            canEditGoalMilestoneProgressBar: true
          alignsWithOptionId: 0
          status: in_progress
      properties:
        goal:
          $ref: '#/components/schemas/GoalsCloseGoalResponse_goal'
      type: object
      x-konfig-is-used-in-successful-response: true
    GoalsReopenGoalResponse:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsReopenGoalResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingGetJobSummariesResponse:
      example:
      - title:
          id: 7153
          label: Draftsperson
        postedDate: 2017-11-30 16:59:40
        location:
          id: 5094
          label: St. Louis
          address:
            description: null
            name: null
            addressLine1: null
            addressLine2: null
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
            phoneNumber: null
        department:
          id: 367
          label: Engineering
        status:
          id: 1
          label: Open
        newApplicantsCount: 1
        activeApplicantsCount: 3
        totalApplicantsCount: 4
        id: 2
        postingUrl: string
      - title:
          id: 16222
          label: HR Specialist
        postedDate: 2017-12-08 15:29:44
        location:
          id: 5094
          label: St. Louis
          address:
            description: null
            name: null
            addressLine1: null
            addressLine2: null
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
            phoneNumber: null
        department:
          id: 17813
          label: HR
        status:
          id: 1
          label: Open
        newApplicantsCount: 5
        activeApplicantsCount: 5
        totalApplicantsCount: 5
        id: 3
        postingUrl: string
      items:
        $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner'
      type: array
      x-konfig-original-example:
      - title:
          id: 7153
          label: Draftsperson
        postedDate: 2017-11-30 16:59:40
        location:
          id: 5094
          label: St. Louis
          address:
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
        department:
          id: 367
          label: Engineering
        status:
          id: 1
          label: Open
        newApplicantsCount: 1
        activeApplicantsCount: 3
        totalApplicantsCount: 4
        id: 2
        postingUrl: string
      - title:
          id: 16222
          label: HR Specialist
        postedDate: 2017-12-08 15:29:44
        location:
          id: 5094
          label: St. Louis
          address:
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
        department:
          id: 17813
          label: HR
        status:
          id: 1
          label: Open
        newApplicantsCount: 5
        activeApplicantsCount: 5
        totalApplicantsCount: 5
        id: 3
        postingUrl: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingListApplicationsResponse:
      example:
        paginationComplete: true
        applications:
        - id: 0
          appliedDate: string
          status:
            id: 0
            label: string
          rating: 0
          applicant:
            id: 0
            firstName: string
            lastName: string
            avatar: string
          job:
            title:
              id: 0
              label: string
            id: 0
        nextPageUrl: string
      properties:
        paginationComplete:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-paginationComplete
        applications:
          items:
            $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse_applications_inner'
          type: array
        nextPageUrl:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-nextPageUrl
      type: object
      x-konfig-original-example:
        paginationComplete: true
        applications:
        - id: 0
          appliedDate: string
          status:
            id: 0
            label: string
          rating: 0
          applicant:
            id: 0
            firstName: string
            lastName: string
            avatar: string
          job:
            title:
              id: 0
              label: string
            id: 0
        nextPageUrl: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingGetApplicationDetailsResponse:
      example:
        id: 4
        appliedDate: 2018-02-09 19:43:31
        status:
          id: 19
          label: Moved
          changedByUser:
            id: 2292
            firstName: Jim
            lastName: Gang
            avatar: null
        rating: 5
        resumeFileId: 10
        coverLetterFileId: 5
        movedTo:
          applicationId: 5
          job:
            title:
              id: 254
              label: HR Specialist
            id: 16222
        movedFrom: null
        alsoAppliedToCount: 2
        duplicateApplicationCount: 1
        referredBy: null
        desiredSalary: "80000"
        commentCount: 1
        emailCount: 0
        questionsAndAnswers:
        - question:
            id: 1
            label: What's your favorite color
          answer:
            id: 22
            label: blue
        applicant:
          email: test@bamboohr.com
          phoneNumber: "8019942392"
          address:
            addressLine1: 12 w 12 s
            addressLine2: null
            city: Lehi
            state: UT
            zipcode: "84005"
            country: United States
          linkedinUrl: null
          websiteUrl: null
          availableStartDate: null
          education:
            institution: Arizona University
            level:
              id: 10
              label: Master of Science
          id: 35
          firstName: Jimmy
          lastName: Jackson
          avatar: null
        job:
          title:
            id: 6477
            label: CEO
          hiringLead:
            employeeId: 40340
            firstName: Josh
            lastName: Smith
            avatar: null
            jobTitle:
              id: 205
              label: Head Engineer
          id: 1
      properties:
        id:
          example: 4
          type: number
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-id
        appliedDate:
          example: 2018-02-09 19:43:31
          type: string
          x-konfig-original-example: 2018-02-09 19:43:31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-appliedDate
        status:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_status'
        rating:
          example: 5
          type: number
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-rating
        resumeFileId:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-resumeFileId
        coverLetterFileId:
          example: 5
          type: number
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-coverLetterFileId
        movedTo:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_movedTo'
        movedFrom:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedFrom
          example: null
        alsoAppliedToCount:
          example: 2
          type: number
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-alsoAppliedToCount
        duplicateApplicationCount:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-duplicateApplicationCount
        referredBy:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-referredBy
          example: null
        desiredSalary:
          example: "80000"
          type: string
          x-konfig-original-example: "80000"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-desiredSalary
        commentCount:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-commentCount
        emailCount:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-emailCount
        questionsAndAnswers:
          items:
            $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner'
          type: array
        applicant:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_applicant'
        job:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_job'
      type: object
      x-konfig-original-example:
        id: 4
        appliedDate: 2018-02-09 19:43:31
        status:
          id: 19
          label: Moved
          changedByUser:
            id: 2292
            firstName: Jim
            lastName: Gang
        rating: 5
        resumeFileId: 10
        coverLetterFileId: 5
        movedTo:
          applicationId: 5
          job:
            title:
              id: 254
              label: HR Specialist
            id: 16222
        alsoAppliedToCount: 2
        duplicateApplicationCount: 1
        desiredSalary: "80000"
        commentCount: 1
        emailCount: 0
        questionsAndAnswers:
        - question:
            id: 1
            label: What's your favorite color
          answer:
            id: 22
            label: blue
        applicant:
          email: test@bamboohr.com
          phoneNumber: "8019942392"
          address:
            addressLine1: 12 w 12 s
            city: Lehi
            state: UT
            zipcode: "84005"
            country: United States
          education:
            institution: Arizona University
            level:
              id: 10
              label: Master of Science
          id: 35
          firstName: Jimmy
          lastName: Jackson
        job:
          title:
            id: 6477
            label: CEO
          hiringLead:
            employeeId: 40340
            firstName: Josh
            lastName: Smith
            jobTitle:
              id: 205
              label: Head Engineer
          id: 1
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingListStatusesResponse:
      example:
      - description: null
        code: PHONE
        enabled: true
        id: 2X
        manageable: true
        name: Phone Screened
        translatedName: Phone Screened
      items:
        $ref: '#/components/schemas/ApplicantTrackingListStatusesResponse_inner'
      type: array
      x-konfig-original-example:
      - code: PHONE
        enabled: true
        id: 2X
        manageable: true
        name: Phone Screened
        translatedName: Phone Screened
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingGetCompanyLocationsResponse:
      items:
        $ref: '#/components/schemas/ApplicantTrackingGetCompanyLocationsResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingGetHiringLeadsResponse:
      items:
        $ref: '#/components/schemas/ApplicantTrackingGetHiringLeadsResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingCreateNewApplicationResponse:
      example:
      - result: success
        candidateId: 42
      items:
        $ref: '#/components/schemas/ApplicantTrackingCreateNewApplicationResponse_inner'
      type: array
      x-konfig-original-example:
      - result: success
        candidateId: 42
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse
      x-konfig-is-used-in-successful-response: true
    ApplicantTrackingCreateNewJobOpeningResponse:
      example:
      - result: success
        jobOpeningId: 11
      items:
        $ref: '#/components/schemas/ApplicantTrackingCreateNewJobOpeningResponse_inner'
      type: array
      x-konfig-original-example:
      - result: success
        jobOpeningId: 11
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse
      x-konfig-is-used-in-successful-response: true
    TrainingGetTypesResponse:
      items:
        $ref: '#/components/schemas/TrainingGetTypesResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    TrainingCategoryListResponse:
      items:
        $ref: '#/components/schemas/TrainingCategoryListResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    TrainingListEmployeeTrainingsResponse:
      items:
        $ref: '#/components/schemas/TrainingListEmployeeTrainingsResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    WebhooksListMonitorFieldsResponse:
      example:
        fields:
        - name: name
          alias: alias
          id: 0
        - name: name
          alias: alias
          id: 0
      properties:
        fields:
          items:
            $ref: '#/components/schemas/WebhooksListMonitorFieldsResponse_fields_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeesGetEmployeeDataResponse:
      additionalProperties: true
      example:
        id: id
      properties:
        id:
          description: The ID of the employee
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeesGetEmployeeData200Response:
      additionalProperties: true
      properties:
        id:
          description: The ID of the employee
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    WebhooksGetUserListResponse:
      example:
        webhooks:
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: "1"
          lastSent: 2000-01-23T04:56:07.000+00:00
          url: url
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: "1"
          lastSent: 2000-01-23T04:56:07.000+00:00
          url: url
      properties:
        webhooks:
          items:
            $ref: '#/components/schemas/WebhooksGetUserListResponse_webhooks_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    WebhooksAddNewWebhookResponse:
      example:
        privateKey: privateKey
        includeCompanyDomain: true
        created: 2021-09-20 22:58:01
        name: Example Webhook
        format: json
        limit:
          times: 15
          seconds: 500
        monitorFields:
        - firstName
        - lastName
        id: 4
        postFields:
          firstName: Name
          lastName: Surname
          dateOfBirth: DOB
        lastSent: 2021-09-20 22:58:01
        url: https://www.example.com
        frequency:
          hour: 12
          month: 7
          day: 24
          minute: 56
      properties:
        id:
          description: The id of the webhook.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-id
        name:
          description: The name of the webhook.
          example: Example Webhook
          maxLength: 1024
          type: string
          x-konfig-original-example: Example Webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-name
        created:
          description: timestamp of creation
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-created
        lastSent:
          description: timestamp of last webhook sent
          example: 2021-09-20 22:58:01
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-lastSent
        monitorFields:
          description: A list of fields to monitor.
          example:
          - firstName
          - lastName
          items:
            type: string
          type: array
          x-konfig-original-example:
          - firstName
          - lastName
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-monitorFields
        postFields:
          additionalProperties:
            description: External name to post field to
            type: string
          description: "A list of fields to post to the webhook url. Field ID or alias:\
            \ external name"
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          type: object
          x-konfig-original-example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-postFields
        url:
          description: The url the webhook should send data to.
          example: https://www.example.com
          type: string
          x-konfig-original-example: https://www.example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-url
        format:
          description: "The format the webhook should use (json, form-encoded)."
          example: json
          type: string
          x-konfig-original-example: json
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-format
        frequency:
          $ref: '#/components/schemas/WebhooksAddNewWebhookResponse_frequency'
        limit:
          $ref: '#/components/schemas/WebhooksAddNewWebhookResponse_limit'
        privateKey:
          description: The private key which can be used to verify that the webhook
            is secure (uses HMAC-SHA256)
          type: string
        includeCompanyDomain:
          description: "If set to true, the company domain will be added to the header."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-includeCompanyDomain
      type: object
      x-konfig-is-used-in-successful-response: true
    WebhooksAddNewWebhook403Response:
      example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: "123"
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      type: object
      x-konfig-original-example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: "123"
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhook403Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    WebhooksUpdateWebhookByIdResponse:
      example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: 123X
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
        - error: "You do not have access to webhook ID: 5"
      properties:
        errors:
          items:
            properties:
              error:
                type: string
            type: object
          type: array
      type: object
      x-konfig-original-example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: 123X
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
        - error: "You do not have access to webhook ID: 5"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksUpdateWebhookByIdResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-post-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-delete-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-get-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-files-post-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-reports-id-get-parameters-4-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-reports-custom-post-parameters-2-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-get-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-comments-post-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-status-post-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-put-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-delete-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-put-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-delete-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-2-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-post-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-put-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-delete-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-1-schema:
      example: "firstName,lastName"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-2-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-3-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--companyDomain-v1-employees-id-files-view-get-parameters-1-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee:
      example:
        firstName: Panda
        lastName: Bear
      properties:
        firstName:
          example: Panda
          type: string
        lastName:
          example: Bear
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-firstName:
      example: Panda
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-lastName:
      example: Bear
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-postNewEmployee:
      example:
        firstName: Panda
        lastName: Bear
      properties:
        firstName:
          example: Panda
          type: string
        lastName:
          example: Bear
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-postNewEmployee-properties-firstName:
      example: Panda
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-postNewEmployee-properties-lastName:
      example: Bear
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-request:
      example:
        status: Approved
        note: Note!
      properties:
        status:
          example: Approved
          type: string
        note:
          example: Note!
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-request-properties-status:
      example: Approved
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-request-properties-note:
      example: Note!
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PostNewEmployeeFileCategory:
      example:
      - A new category
      items:
        example: A new category
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewCompanyFileCategory:
      example:
      - A new category
      items:
        example: A new category
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewWebHook-properties-name:
      example: My new webhook
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewWebHook-properties-monitorFields:
      example:
      - firstName
      - lastName
      items:
        example: firstName
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewWebHook-properties-postFields:
      example:
        firstName: Name
        lastName: Surname
        dateOfBirth: DOB
      properties:
        firstName:
          example: Name
          type: string
        lastName:
          example: Surname
          type: string
        dateOfBirth:
          example: DOB
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewWebHook-properties-includeCompanyDomain:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-name:
      example: Example Webhook
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-created:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-lastSent:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-monitorFields:
      example:
      - firstName
      - lastName
      items:
        example: firstName
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-postFields:
      example:
        firstName: Name
        lastName: Surname
        dateOfBirth: DOB
      properties:
        firstName:
          example: Name
          type: string
        lastName:
          example: Surname
          type: string
        dateOfBirth:
          example: DOB
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-url:
      example: https://www.example.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-format:
      example: json
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-hour:
      example: 12
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-minute:
      example: 56
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-day:
      example: 24
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-limit-properties-times:
      example: 15
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-limit-properties-seconds:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookResponse-properties-includeCompanyDomain:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-webhookId:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-url:
      example: https://exmaple.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-lastAttempted:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-lastSuccess:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-failureCount:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-status:
      example: 200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebHookLogResponse-properties-employeeIds:
      example:
      - 1
      - 2
      items:
        example: 1
        type: number
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook400Error:
      example:
        errors:
        - error: Invalid request body
          issues:
          - problem one
          - problem two
          - …
      properties:
        errors:
          items:
            properties:
              error:
                example: Invalid request body
                type: string
              issues:
                items:
                  example: problem one
                  type: string
                type: array
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook403Error:
      example:
        errors:
        - error: "You do not have access to webhook ID: 5"
      properties:
        errors:
          items:
            properties:
              error:
                example: "You do not have access to webhook ID: 5"
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook404Error:
      example:
        errors:
        - error: "No webhook was found with ID: 7."
      properties:
        errors:
          items:
            properties:
              error:
                example: "No webhook was found with ID: 7."
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook500Error:
      example:
        errors:
        - error: "Sorry for the inconvenience, please try again later or contact BambooHR."
      properties:
        errors:
          items:
            properties:
              error:
                example: "Sorry for the inconvenience, please try again later or contact\
                  \ BambooHR."
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-lastChanged:
      example: 1624485787
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-timesheets-items-properties-timesheetId
    : example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-timesheetId
    : example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-end
    : example: "1050"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-date
    : example: 2021-04-23
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingGetTimesheetsByIdsRequest-properties-timesheets:
      example: "10, 11, 12"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-start:
      example: "780"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-timezone:
      example: America/Denver
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-note:
      example: Back from lunch.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-projectId:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-taskId:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-latitude:
      example: 40.332729
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-longitude:
      example: -111.729235
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-accuracy:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-address:
      example: 123 Main
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-latitude:
      example: 40.332729
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-longitude:
      example: -111.729235
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-accuracy:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-address:
      example: 123 Main
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-employeeId:
      example: 40342
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-date:
      example: 2021-06-25
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-hours:
      example: 7.5
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-dailyEntryId
    : example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-projectId:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-taskId:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingDeleteClockEntriesRequest-properties-clockEntryIds:
      example:
      - 10
      - 11
      - 12
      items:
        example: 10
        type: number
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-employeeId:
      example: 40342
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-date:
      example: 2021-06-25
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-start:
      example: "780"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-end:
      example: "1020"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-clockEntryId
    : example: 101
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-projectId:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-taskId:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-note:
      example: Note for time entry
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-datetime:
      example: 2020-12-16T17:28:00-05:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-timezone:
      example: America/Denver
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeAtSpecificTimeRequest-properties-employeeId:
      example: 40342
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-start:
      example: "780"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-timezone:
      example: America/Denver
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-note:
      example: Back from lunch.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-projectId:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-taskId:
      example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-latitude
    : example: 40.332729
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-longitude
    : example: -111.729235
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-accuracy
    : example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-address
    : example: 123 Main
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-latitude
    : example: 40.332729
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-longitude
    : example: -111.729235
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-accuracy
    : example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-address
    : example: 123 Main
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-date
    : example: 2024-01-31
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-start
    : example: 09:00
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-end
    : example: "1020"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-date
    : example: 2024-01-31
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-hours
    : example: 3.5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-projectId:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-taskId:
      example: 25
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-note:
      example: Back from lunch.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaCreateProjectTaskRequest-properties-name:
      example: Project A
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest:
      example:
        type: comment
        comment: I really like this applicant
      properties:
        type:
          example: comment
          type: string
        comment:
          example: I really like this applicant
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-type:
      example: comment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-comment:
      example: I really like this applicant
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingChangeApplicantStatusRequest:
      example:
        status: "2"
      properties:
        status:
          example: "2"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingChangeApplicantStatusRequest-properties-status:
      example: "2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest:
      example:
        name: My New Training
        frequency: "12"
        renewable: true
        category:
          id: 3
          name: CustomApiCategoryName2
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      properties:
        name:
          example: My New Training
          type: string
        frequency:
          example: "12"
          type: string
        renewable:
          example: true
          type: boolean
        category:
          properties:
            id:
              example: 3
              type: number
            name:
              example: CustomApiCategoryName2
              type: string
          type: object
        required:
          example: false
          type: boolean
        dueFromHireDate:
          properties:
            unit:
              example: day
              type: string
            amount:
              example: "30"
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-name:
      example: My New Training
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-frequency:
      example: "12"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-renewable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-name:
      example: First Aid Trainings
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-accuracy:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-address:
      example: 123 Main
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-required:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-dueFromHireDate:
      example: "30"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-allowEmployeesToMarkComplete:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest:
      example:
        name: My Edited Training
        frequency: "12"
        renewable: true
        category:
          name: Existing or new training category
        required: false
        dueFromHireDate:
          unit: day
          amount: "30"
      properties:
        name:
          example: My Edited Training
          type: string
        frequency:
          example: "12"
          type: string
        renewable:
          example: true
          type: boolean
        category:
          properties:
            name:
              example: Existing or new training category
              type: string
          type: object
        required:
          example: false
          type: boolean
        dueFromHireDate:
          properties:
            unit:
              example: day
              type: string
            amount:
              example: "30"
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-name:
      example: My Edited Training
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-frequency:
      example: "12"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-renewable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-name:
      example: CustomApiCategoryName2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-accuracy:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-address:
      example: 123 Main
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-required:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-dueFromHireDate:
      example: "30"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-allowEmployeesToMarkComplete:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddCategoryRequest:
      example:
        name: My New Training Category
      properties:
        name:
          example: My New Training Category
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddCategoryRequest-properties-name:
      example: My New Training Category
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateCategoryRequest:
      example:
        name: My Training Category
      properties:
        name:
          example: My Training Category
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateCategoryRequest-properties-name:
      example: My Training Category
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest:
      example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
        type: "4"
      properties:
        completed:
          example: 2016-05-25
          type: string
        cost:
          properties:
            currency:
              example: USD
              type: string
            amount:
              example: "100.00"
              type: string
          type: object
        instructor:
          example: Bob Jones
          type: string
        hours:
          example: "16"
          type: string
        credits:
          example: "4"
          type: string
        notes:
          example: sample note
          type: string
        type:
          example: "4"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-completed:
      example: 2016-05-25
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-instructor:
      example: Bob Jones
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-hours:
      example: "16"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-credits:
      example: "4"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-notes:
      example: sample note
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-type:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest:
      example:
        completed: 2016-05-25
        cost:
          currency: USD
          amount: "100.00"
        instructor: Bob Jones
        hours: "16"
        credits: "4"
        notes: sample note
      properties:
        completed:
          example: 2016-05-25
          type: string
        cost:
          properties:
            currency:
              example: USD
              type: string
            amount:
              example: "100.00"
              type: string
          type: object
        instructor:
          example: Bob Jones
          type: string
        hours:
          example: "16"
          type: string
        credits:
          example: "4"
          type: string
        notes:
          example: sample note
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-completed:
      example: 2016-05-25
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-instructor:
      example: Bob Jones
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-hours:
      example: "16"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-credits:
      example: "4"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-notes:
      example: sample note
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-canAlign:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-canCreateGoals:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-id:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-name:
      example: In Progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-count:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-selectedFilter:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-employeeId:
      example: 4353
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-userId:
      example: 45
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-displayFirstName
    : example: Tim
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-lastName:
      example: Johnson
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-photoUrl:
      example: https://tim.johnson.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-comments-items-properties-goalId:
      example: 25
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-comments-items-properties-commentCount:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-canAlign:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-canCreateGoals:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-id:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-name:
      example: In Progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-count:
      example: 3
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canCloseGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canEditGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canReopenGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canShareGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-selectedFilter:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-percentComplete
    : example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-employeeId:
      example: 4353
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-userId:
      example: 45
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-displayFirstName
    : example: Tim
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-lastName:
      example: Johnson
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-photoUrl:
      example: https://tim.johnson.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-comments-items-properties-goalId:
      example: 25
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-comments-items-properties-commentCount
    : example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-canAlign:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-canCreateGoals:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-id:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-name:
      example: In Progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-count:
      example: 3
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canCloseGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canEditGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canReopenGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canShareGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-selectedFilter:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-percentComplete
    : example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-completionDate
    : example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-title
    : example: Sell 15 Doohickeys
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-id
    : example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-employeeGoalId
    : example: 12
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-currentValue
    : example: 7
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-startValue
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-endValue
    : example: 15
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-completedDateTime
    : example: 2024-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-lastUpdateDateDateTime
    : example: 2023-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-lastUpdateUserId
    : example: 24
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-actions-properties-canEditGoalProgressBar
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-actions-properties-canEditGoalMilestoneProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-employeeId:
      example: 4353
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-userId:
      example: 45
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-displayFirstName
    : example: Tim
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-lastName:
      example: Johnson
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-photoUrl:
      example: https://tim.johnson.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-comments-items-properties-goalId:
      example: 25
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-comments-items-properties-commentCount
    : example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-title
    : example: Sell 15 Doohickeys
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-id
    : example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-employeeGoalId
    : example: 12
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-currentValue
    : example: 7
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-startValue
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-endValue
    : example: 15
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-completedDateTime
    : example: 2024-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-lastUpdateDateDateTime
    : example: 2023-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-lastUpdateUserId
    : example: 24
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-actions-properties-canEditGoalProgressBar
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-actions-properties-canEditGoalMilestoneProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-canAlign:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-canCreateGoals:
      example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-alignsWithOptions-items-properties-title
    : example: Get all team goals for January complete.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-alignsWithOptions-items-properties-id:
      example: 8
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-id:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-authorUserId:
      example: 1534
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-createdAt:
      example: 2022-05-23T17:32:42Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-text:
      example: This goal is taking longer than I thought.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-canEdit:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-canDelete:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-employeeId:
      example: 4353
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-userId:
      example: 45
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-displayFirstName
    : example: Tim
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-lastName:
      example: Johnson
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-photoUrl:
      example: https://tim.johnson.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-sharedWithEmployeeIds-items:
      example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-id:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-name:
      example: In Progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-count:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-id:
      example: status-inProgress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-name:
      example: In Progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-count:
      example: 3
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canCloseGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canEditGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canReopenGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canShareGoal
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-sharedWithEmployeeIds-items
    : example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-title
    : example: Sell 15 Doohickeys
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-id
    : example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-employeeGoalId
    : example: 12
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-currentValue
    : example: 7
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-startValue
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-endValue
    : example: 15
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-completedDateTime
    : example: 2024-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-lastUpdateDateDateTime
    : example: 2023-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-lastUpdateUserId
    : example: 24
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-actions-properties-canEditGoalProgressBar
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-actions-properties-canEditGoalMilestoneProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCreateEmployeeGoalResponse:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateEmployeeGoalResponse:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsUpdateEmployeeGoalV11Response:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-title:
      example: Complete Documentation Epic
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-description:
      example: Document every endpoint for the goals API.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-percentComplete:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-sharedWithEmployeeIds-items:
      example: 89
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-dueDate:
      example: 2021-12-17
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-completionDate:
      example: 2021-12-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-status:
      example: in_progress
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-title:
      example: Sell 15 Doohickeys
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-id:
      example: 2
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-employeeGoalId
    : example: 12
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-currentValue
    : example: 7
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-startValue
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-endValue
    : example: 15
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-completedDateTime
    : example: 2024-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-lastUpdateDateDateTime
    : example: 2023-07-12T14:50:46Z
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-lastUpdateUserId
    : example: 24
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-actions-properties-canEditGoalProgressBar
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-actions-properties-canEditGoalMilestoneProgressBar
    : example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GoalsReopenGoalResponse:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse:
      example:
      - title:
          id: 7153
          label: Draftsperson
        postedDate: 2017-11-30 16:59:40
        location:
          id: 5094
          label: St. Louis
          address:
            description: null
            name: null
            addressLine1: null
            addressLine2: null
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
            phoneNumber: null
        department:
          id: 367
          label: Engineering
        status:
          id: 1
          label: Open
        newApplicantsCount: 1
        activeApplicantsCount: 3
        totalApplicantsCount: 4
        id: 2
        postingUrl: string
      - title:
          id: 16222
          label: HR Specialist
        postedDate: 2017-12-08 15:29:44
        location:
          id: 5094
          label: St. Louis
          address:
            description: null
            name: null
            addressLine1: null
            addressLine2: null
            city: Lehi
            state: Utah
            zipcode: "84043"
            country: United States
            phoneNumber: null
        department:
          id: 17813
          label: HR
        status:
          id: 1
          label: Open
        newApplicantsCount: 5
        activeApplicantsCount: 5
        totalApplicantsCount: 5
        id: 3
        postingUrl: string
      items:
        properties:
          title:
            properties:
              id:
                example: 7153
                type: number
              label:
                example: Draftsperson
                type: string
            type: object
          postedDate:
            example: 2017-11-30 16:59:40
            type: string
          location:
            properties:
              id:
                example: 5094
                type: number
              label:
                example: St. Louis
                type: string
              address:
                properties:
                  description:
                    nullable: true
                    type: string
                    x-konfig-null-placeholder: true
                  name:
                    nullable: true
                    type: string
                    x-konfig-null-placeholder: true
                  addressLine1:
                    nullable: true
                    type: string
                    x-konfig-null-placeholder: true
                  addressLine2:
                    nullable: true
                    type: string
                    x-konfig-null-placeholder: true
                  city:
                    example: Lehi
                    type: string
                  state:
                    example: Utah
                    type: string
                  zipcode:
                    example: "84043"
                    type: string
                  country:
                    example: United States
                    type: string
                  phoneNumber:
                    nullable: true
                    type: string
                    x-konfig-null-placeholder: true
                type: object
            type: object
          department:
            properties:
              id:
                example: 367
                type: number
              label:
                example: Engineering
                type: string
            type: object
          status:
            properties:
              id:
                example: 1
                type: number
              label:
                example: Open
                type: string
            type: object
          newApplicantsCount:
            example: 1
            type: number
          activeApplicantsCount:
            example: 3
            type: number
          totalApplicantsCount:
            example: 4
            type: number
          id:
            example: 2
            type: number
          postingUrl:
            example: string
            type: string
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-title-properties-id:
      example: 7153
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-title-properties-label:
      example: Draftsperson
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-postedDate:
      example: 2017-11-30 16:59:40
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-id:
      example: 5094
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-label:
      example: St. Louis
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-city
    : example: Lehi
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-state
    : example: Utah
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-zipcode
    : example: "84043"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-country
    : example: United States
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-department-properties-id:
      example: 367
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-department-properties-label
    : example: Engineering
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-status-properties-id:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-status-properties-label:
      example: Open
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-newApplicantsCount:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-activeApplicantsCount:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-totalApplicantsCount:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-id:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-postingUrl:
      example: string
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse:
      example:
        paginationComplete: true
        applications:
        - id: 0
          appliedDate: string
          status:
            id: 0
            label: string
          rating: 0
          applicant:
            id: 0
            firstName: string
            lastName: string
            avatar: string
          job:
            title:
              id: 0
              label: string
            id: 0
        nextPageUrl: string
      properties:
        paginationComplete:
          example: true
          type: boolean
        applications:
          items:
            properties:
              id:
                example: 0
                type: number
              appliedDate:
                example: string
                type: string
              status:
                properties:
                  id:
                    example: 0
                    type: number
                  label:
                    example: string
                    type: string
                type: object
              rating:
                example: 0
                type: number
              applicant:
                properties:
                  id:
                    example: 0
                    type: number
                  firstName:
                    example: string
                    type: string
                  lastName:
                    example: string
                    type: string
                  avatar:
                    example: string
                    type: string
                type: object
              job:
                properties:
                  title:
                    properties:
                      id:
                        example: 0
                        type: number
                      label:
                        example: string
                        type: string
                    type: object
                  id:
                    example: 0
                    type: number
                type: object
            type: object
          type: array
        nextPageUrl:
          example: string
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-paginationComplete:
      example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-id
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-appliedDate
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-status-properties-id
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-status-properties-label
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-rating
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-id
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-firstName
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-lastName
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-avatar
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-title-properties-id
    : example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-title-properties-label
    : example: string
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-id
    : example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-nextPageUrl:
      example: string
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse:
      example:
        id: 4
        appliedDate: 2018-02-09 19:43:31
        status:
          id: 19
          label: Moved
          changedByUser:
            id: 2292
            firstName: Jim
            lastName: Gang
            avatar: null
        rating: 5
        resumeFileId: 10
        coverLetterFileId: 5
        movedTo:
          applicationId: 5
          job:
            title:
              id: 254
              label: HR Specialist
            id: 16222
        movedFrom: null
        alsoAppliedToCount: 2
        duplicateApplicationCount: 1
        referredBy: null
        desiredSalary: "80000"
        commentCount: 1
        emailCount: 0
        questionsAndAnswers:
        - question:
            id: 1
            label: What's your favorite color
          answer:
            id: 22
            label: blue
        applicant:
          email: test@bamboohr.com
          phoneNumber: "8019942392"
          address:
            addressLine1: 12 w 12 s
            addressLine2: null
            city: Lehi
            state: UT
            zipcode: "84005"
            country: United States
          linkedinUrl: null
          websiteUrl: null
          availableStartDate: null
          education:
            institution: Arizona University
            level:
              id: 10
              label: Master of Science
          id: 35
          firstName: Jimmy
          lastName: Jackson
          avatar: null
        job:
          title:
            id: 6477
            label: CEO
          hiringLead:
            employeeId: 40340
            firstName: Josh
            lastName: Smith
            avatar: null
            jobTitle:
              id: 205
              label: Head Engineer
          id: 1
      properties:
        id:
          example: 4
          type: number
        appliedDate:
          example: 2018-02-09 19:43:31
          type: string
        status:
          properties:
            id:
              example: 19
              type: number
            label:
              example: Moved
              type: string
            changedByUser:
              properties:
                id:
                  example: 2292
                  type: number
                firstName:
                  example: Jim
                  type: string
                lastName:
                  example: Gang
                  type: string
                avatar:
                  nullable: true
                  type: string
                  x-konfig-null-placeholder: true
              type: object
          type: object
        rating:
          example: 5
          type: number
        resumeFileId:
          example: 10
          type: number
        coverLetterFileId:
          example: 5
          type: number
        movedTo:
          properties:
            applicationId:
              example: 5
              type: number
            job:
              properties:
                title:
                  properties:
                    id:
                      example: 254
                      type: number
                    label:
                      example: HR Specialist
                      type: string
                  type: object
                id:
                  example: 16222
                  type: number
              type: object
          type: object
        movedFrom:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        alsoAppliedToCount:
          example: 2
          type: number
        duplicateApplicationCount:
          example: 1
          type: number
        referredBy:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        desiredSalary:
          example: "80000"
          type: string
        commentCount:
          example: 1
          type: number
        emailCount:
          example: 0
          type: number
        questionsAndAnswers:
          items:
            properties:
              question:
                properties:
                  id:
                    example: 1
                    type: number
                  label:
                    example: What's your favorite color
                    type: string
                type: object
              answer:
                properties:
                  id:
                    example: 22
                    type: number
                  label:
                    example: blue
                    type: string
                type: object
            type: object
          type: array
        applicant:
          properties:
            email:
              example: test@bamboohr.com
              type: string
            phoneNumber:
              example: "8019942392"
              type: string
            address:
              properties:
                addressLine1:
                  example: 12 w 12 s
                  type: string
                addressLine2:
                  nullable: true
                  type: string
                  x-konfig-null-placeholder: true
                city:
                  example: Lehi
                  type: string
                state:
                  example: UT
                  type: string
                zipcode:
                  example: "84005"
                  type: string
                country:
                  example: United States
                  type: string
              type: object
            linkedinUrl:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            websiteUrl:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            availableStartDate:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            education:
              properties:
                institution:
                  example: Arizona University
                  type: string
                level:
                  properties:
                    id:
                      example: 10
                      type: number
                    label:
                      example: Master of Science
                      type: string
                  type: object
              type: object
            id:
              example: 35
              type: number
            firstName:
              example: Jimmy
              type: string
            lastName:
              example: Jackson
              type: string
            avatar:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
          type: object
        job:
          properties:
            title:
              properties:
                id:
                  example: 6477
                  type: number
                label:
                  example: CEO
                  type: string
              type: object
            hiringLead:
              properties:
                employeeId:
                  example: 40340
                  type: number
                firstName:
                  example: Josh
                  type: string
                lastName:
                  example: Smith
                  type: string
                avatar:
                  nullable: true
                  type: string
                  x-konfig-null-placeholder: true
                jobTitle:
                  properties:
                    id:
                      example: 205
                      type: number
                    label:
                      example: Head Engineer
                      type: string
                  type: object
              type: object
            id:
              example: 1
              type: number
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-appliedDate:
      example: 2018-02-09 19:43:31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-id:
      example: 19
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-label:
      example: Moved
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-id
    : example: 2292
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-firstName
    : example: Jim
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-lastName
    : example: Gang
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-avatar
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-rating:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-resumeFileId:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-coverLetterFileId:
      example: 5
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-applicationId
    : example: 5
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-title-properties-id
    : example: 254
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-title-properties-label
    : example: HR Specialist
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-id
    : example: 16222
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedFrom:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-alsoAppliedToCount:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-duplicateApplicationCount:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-referredBy:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-desiredSalary:
      example: "80000"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-commentCount:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-emailCount:
      example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-question-properties-id
    : example: 1
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-question-properties-label
    : example: What's your favorite color
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-answer-properties-id
    : example: 22
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-answer-properties-label
    : example: blue
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-email:
      example: test@bamboohr.com
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-phoneNumber
    : example: "8019942392"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-addressLine1
    : example: 12 w 12 s
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-addressLine2
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-city
    : example: Lehi
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-state
    : example: UT
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-zipcode
    : example: "84005"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-country
    : example: United States
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-linkedinUrl
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-websiteUrl
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-availableStartDate
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-institution
    : example: Arizona University
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-level-properties-id
    : example: 10
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-level-properties-label
    : example: Master of Science
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-id:
      example: 35
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-firstName
    : example: Jimmy
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-lastName
    : example: Jackson
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-avatar
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-title-properties-id
    : example: 6477
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-title-properties-label
    : example: CEO
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-employeeId
    : example: 40340
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-firstName
    : example: Josh
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-lastName
    : example: Smith
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-avatar
    : nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-jobTitle-properties-id
    : example: 205
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-jobTitle-properties-label
    : example: Head Engineer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-id:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse:
      example:
      - description: null
        code: PHONE
        enabled: true
        id: 2X
        manageable: true
        name: Phone Screened
        translatedName: Phone Screened
      items:
        properties:
          description:
            nullable: true
            type: string
            x-konfig-null-placeholder: true
          code:
            example: PHONE
            type: string
          enabled:
            example: true
            type: boolean
          id:
            example: 2X
            type: string
          manageable:
            example: true
            type: boolean
          name:
            example: Phone Screened
            type: string
          translatedName:
            example: Phone Screened
            type: string
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-code:
      example: PHONE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-enabled:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-id:
      example: "2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-manageable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-name:
      example: Phone Screened
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-translatedName:
      example: Phone Screened
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse:
      example:
      - result: success
        candidateId: 42
      items:
        properties:
          result:
            example: success
            type: string
          candidateId:
            example: 42
            type: number
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse-items-properties-result:
      example: success
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse-items-properties-candidateId:
      example: 42
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse:
      example:
      - result: success
        jobOpeningId: 11
      items:
        properties:
          result:
            example: success
            type: string
          jobOpeningId:
            example: 11
            type: number
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse-items-properties-result:
      example: success
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse-items-properties-jobOpeningId:
      example: 11
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-id:
      example: "1"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-created:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-lastSent:
      example: 2021-09-21 12:00:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-id:
      example: 4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-name:
      example: Example Webhook
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-created:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-lastSent:
      example: 2021-09-20 22:58:01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-monitorFields:
      example:
      - firstName
      - lastName
      items:
        example: firstName
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-postFields:
      example:
        firstName: Name
        lastName: Surname
        dateOfBirth: DOB
      properties:
        firstName:
          example: Name
          type: string
        lastName:
          example: Surname
          type: string
        dateOfBirth:
          example: DOB
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-url:
      example: https://www.example.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-format:
      example: json
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-hour:
      example: 12
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-minute:
      example: 56
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-day:
      example: 24
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-limit-properties-times:
      example: 15
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-limit-properties-seconds:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-includeCompanyDomain:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksAddNewWebhook403Response:
      example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: "123"
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
      properties:
        errors:
          items:
            properties:
              error:
                example: Permission denied to the following fields
                type: string
              monitorFields:
                items:
                  properties:
                    id:
                      example: "123"
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              postFields:
                items:
                  properties:
                    id:
                      example: 123X
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              unknownFields:
                items:
                  properties:
                    id:
                      example: 123X
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              duplicatePostString:
                items:
                  example: fieldName
                  type: string
                type: array
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhooksUpdateWebhookByIdResponse:
      example:
        errors:
        - error: Permission denied to the following fields
          monitorFields:
          - id: 123X
            name: alias or id
          postFields:
          - id: 123X
            name: alias or id
          unknownFields:
          - id: 123X
            name: alias or id
          duplicatePostString:
          - fieldName
        - error: "You do not have access to webhook ID: 5"
      properties:
        errors:
          items:
            properties:
              error:
                example: Permission denied to the following fields
                type: string
              monitorFields:
                items:
                  properties:
                    id:
                      example: 123X
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              postFields:
                items:
                  properties:
                    id:
                      example: 123X
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              unknownFields:
                items:
                  properties:
                    id:
                      example: 123X
                      type: string
                    name:
                      example: alias or id
                      type: string
                  type: object
                type: array
              duplicatePostString:
                items:
                  example: fieldName
                  type: string
                type: array
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-directory:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employees-id-files-fileId:
      properties:
        companyDomain:
          type: string
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-delete-parameters-1-schema
        fileId:
          type: string
      required:
      - companyDomain
      - fileId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - fileId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-files-fileId:
      properties:
        companyDomain:
          type: string
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-get-parameters-1-schema
        fileId:
          type: string
      required:
      - companyDomain
      - fileId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - fileId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-files-fileId:
      properties:
        companyDomain:
          type: string
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-fileId-post-parameters-1-schema
        fileId:
          type: string
        name:
          description: ""
          type: string
        categoryId:
          description: ""
          type: string
        shareWithEmployee:
          description: ""
          type: string
      required:
      - companyDomain
      - fileId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - fileId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-files:
      properties:
        companyDomain:
          type: string
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-post-parameters-1-schema
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-files-fileId:
      properties:
        companyDomain:
          type: string
        fileId:
          type: string
      required:
      - companyDomain
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - fileId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-files-fileId:
      properties:
        companyDomain:
          type: string
        fileId:
          type: string
      required:
      - companyDomain
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - fileId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-files-fileId:
      properties:
        companyDomain:
          type: string
        fileId:
          type: string
        name:
          description: ""
          type: string
        categoryId:
          description: ""
          type: string
        shareWithEmployee:
          description: ""
          type: string
      required:
      - companyDomain
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - fileId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-files:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-reports-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        format:
          type: string
        fd:
          type: string
        onlyCurrent:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-reports-id-get-parameters-4-schema
      required:
      - companyDomain
      - format
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - format
      - fd
      - onlyCurrent
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-reports-custom:
      properties:
        companyDomain:
          type: string
        format:
          type: string
        onlyCurrent:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-reports-custom-post-parameters-2-schema
        title:
          description: ""
          type: string
        filters:
          description: ""
          properties:
            lastChanged:
              description: ""
              properties:
                includeNull:
                  description: yes|no
                  type: string
                value:
                  description: Date last changed
                  type: string
              type: object
          type: object
        fields:
          description: ""
          items:
            description: ""
            type: string
          type: array
      required:
      - companyDomain
      - format
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - format
      - onlyCurrent
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-tables-table:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
      required:
      - companyDomain
      - id
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-tables-table:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
        date:
          description: ""
          type: string
        location:
          description: ""
          type: string
        division:
          description: ""
          type: string
        department:
          description: ""
          type: string
        jobTitle:
          description: ""
          type: string
        reportsTo:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employees-id-tables-table-rowId:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
        rowId:
          type: string
      required:
      - companyDomain
      - id
      - rowId
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
      - rowId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id-tables-table-rowId:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
        rowId:
          type: string
        date:
          description: ""
          type: string
        location:
          description: ""
          type: string
        division:
          description: ""
          type: string
        department:
          description: ""
          type: string
        jobTitle:
          description: ""
          type: string
        reportsTo:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      - rowId
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
      - rowId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1_1-employees-id-tables-table-rowId:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
        rowId:
          type: string
        date:
          description: ""
          type: string
        location:
          description: ""
          type: string
        division:
          description: ""
          type: string
        department:
          description: ""
          type: string
        jobTitle:
          description: ""
          type: string
        reportsTo:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      - rowId
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
      - rowId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1_1-employees-id-tables-table:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        table:
          type: string
        date:
          description: ""
          type: string
        location:
          description: ""
          type: string
        division:
          description: ""
          type: string
        department:
          description: ""
          type: string
        jobTitle:
          description: ""
          type: string
        reportsTo:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - table
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-changed-tables-table:
      properties:
        companyDomain:
          type: string
        table:
          type: string
        since:
          type: string
      required:
      - companyDomain
      - since
      - table
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - table
      - since
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-meta-lists-listFieldId:
      properties:
        companyDomain:
          type: string
        listFieldId:
          type: string
        options:
          description: ""
          items:
            properties:
              id:
                description: ""
                type: integer
              value:
                description: ""
                maximum: 255
                type: string
              archived:
                description: ""
                maximum: 255
                type: string
              adpCode:
                description: ""
                maximum: 255
                type: string
            type: object
          type: array
      required:
      - companyDomain
      - listFieldId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - listFieldId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-request:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        status:
          description: ""
          maximum: 255
          type: string
        start:
          description: ""
          maximum: 255
          type: string
        end:
          description: ""
          maximum: 255
          type: string
        timeOffTypeId:
          description: ""
          type: integer
        amount:
          description: ""
          type: integer
        notes:
          description: ""
          items:
            properties:
              from:
                type: string
              note:
                type: string
            type: object
          type: array
        dates:
          description: ""
          items:
            properties:
              ymd:
                type: string
              amount:
                type: integer
            type: object
          type: array
        previousRequest:
          description: ""
          type: integer
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-time_off-requests-requestId-status:
      properties:
        companyDomain:
          type: string
        requestId:
          type: string
        status:
          description: "One of approved, cancelled, denied"
          example: Approved
          maximum: 20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-request-properties-status
        note:
          description: A note to attach to the change in status
          example: Note!
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-request-properties-note
      required:
      - companyDomain
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - requestId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-time_off-policies:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-employees-employeeId-time_off-policies:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-time_off-calculator:
      properties:
        companyDomain:
          type: string
        end:
          format: date-time
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      - end
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - end
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-employeeId-photo-size:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        size:
          enum:
          - original
          - large
          - medium
          - xs
          - tiny
          type: string
      required:
      - companyDomain
      - employeeId
      - size
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - size
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-employeeId-photo:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-changed:
      properties:
        companyDomain:
          type: string
        since:
          type: string
        type:
          type: string
      required:
      - companyDomain
      - since
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - since
      - type
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-login:
      properties:
        companyDomain:
          type: string
        applicationKey:
          description: ""
          type: string
        user:
          description: ""
          type: string
        password:
          description: ""
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefits-settings-deduction_types-all:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefit-company_benefit:
      properties:
        companyDomain:
          type: string
        description:
          description: Description
          type: string
        companyBenefitName:
          description: Name
          type: string
        benefitVendorId:
          description: Benefit vendor ID
          type: string
        benefitType:
          description: Benefit type
          enum:
          - health
          - dental
          - vision
          - retirement
          - hsa
          - flex
          - life
          - disability
          - reimbursement
          - supplemental
          - other
          type: string
        deductionTypeId:
          description: Deduction type ID
          type: string
        startDate:
          description: Benefit start date
          format: date
          type: string
        endDate:
          description: Benefit end date
          format: date
          type: string
        planUrl:
          description: Plan url
          type: string
        ssoLoginUrl:
          description: SSO login url
          type: string
        ssoLoginUrlLinkText:
          description: SSO login link text
          type: string
        safeHarbor:
          description: Is a safe harbor
          type: boolean
        meetAcaMin:
          description: Meets ACA minimum requirements
          type: boolean
        reimbursementAmount:
          description: Reimbursement amount
          type: number
        reimbursementFrequency:
          description: Reimbursement frequency
          enum:
          - pay period
          - month
          - quarter
          - year
          - one time
          - null
          type: string
        reimbursementCurrencyCode:
          description: Reimbursement currency code
          type: string
        minEssentialCoverage:
          description: Provides minimum essential coverage
          type: boolean
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-benefit-company_benefit-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-benefit-company_benefit-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        description:
          description: Description
          type: string
        companyBenefitName:
          description: Name
          type: string
        benefitVendorId:
          description: Benefit vendor ID
          type: string
        benefitType:
          description: Benefit type
          enum:
          - health
          - dental
          - vision
          - retirement
          - hsa
          - flex
          - life
          - disability
          - reimbursement
          - supplemental
          - other
          type: string
        deductionTypeId:
          description: Deduction type ID
          type: string
        startDate:
          description: Benefit start date
          format: date
          type: string
        endDate:
          description: Benefit end date
          format: date
          type: string
        planUrl:
          description: Plan url
          type: string
        ssoLoginUrl:
          description: SSO login url
          type: string
        ssoLoginUrlLinkText:
          description: SSO login link text
          type: string
        safeHarbor:
          description: Is a safe harbor
          type: boolean
        meetAcaMin:
          description: Meets ACA minimum requirements
          type: boolean
        reimbursementAmount:
          description: Reimbursement amount
          type: number
        reimbursementFrequency:
          description: Reimbursement frequency
          enum:
          - pay period
          - month
          - quarter
          - year
          - one time
          - null
          type: string
        reimbursementCurrencyCode:
          description: Reimbursement currency code
          type: string
        minEssentialCoverage:
          description: Provides minimum essential coverage
          type: boolean
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-company_benefit-type:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefit-employee_benefit:
      properties:
        companyDomain:
          type: string
        filters:
          description: At least one filter is required
          properties:
            employeeId:
              description: Employee Id
              type: integer
            companyBenefitId:
              description: Company Benefit Id
              type: integer
            enrollmentStatusEffectiveDate:
              description: Enrollment Status Effective Date
              format: date
              type: string
          type: object
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefit-employee_benefit:
      properties:
        companyDomain:
          type: string
        employeeId:
          description: Employee ID
          type: integer
        companyBenefitId:
          description: Company benefit ID
          type: integer
        companyBenefitName:
          description: Company benefit name
          type: string
        coverageLevel:
          description: Coverage level
          type: string
        deductionEndDate:
          description: Deduction end date
          format: date
          type: string
        deductionStartDate:
          description: Deduction start date
          format: date
          type: string
        enrollmentStatus:
          description: Enrollment status
          enum:
          - Eligible
          - Enrolled
          - Waived
          - Withdrawn
          - Terminated
          - Ineligible
          type: string
        effectiveDate:
          description: Enrollment status effective date
          format: date
          type: string
        currencyCode:
          description: Currency code
          type: string
        employeeAmount:
          description: Employee amount
          type: number
        employeeAmountType:
          description: Employee amount type
          type: string
        employeePercentBasedOn:
          description: Employee percent based on
          type: string
        employeeCapAmount:
          description: Employee cap amount
          type: number
        employeeCapAmountType:
          description: Employee cap amount type
          type: string
        employeeAnnualMax:
          description: Employee annual max
          type: number
        companyAmount:
          description: Company amount
          type: number
        companyAmountType:
          description: Company amount type
          type: string
        companyPercentBasedOn:
          description: Company percent based on
          type: string
        companyCapAmount:
          description: Company cap amount
          type: number
        companyCapAmountType:
          description: Company cap amount type
          type: string
        companyAnnualMax:
          description: Company annual max
          type: number
        benefitPlanCoverageId:
          description: Benefit Plan Coverage ID
          type: number
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitcoverages:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employeedependents-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employeedependents-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        employeeId:
          description: ""
          type: string
        firstName:
          description: ""
          type: string
        middleName:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
        relationship:
          description: ""
          type: string
        gender:
          description: ""
          type: string
        ssn:
          description: ""
          type: string
        dateOfBirth:
          description: ""
          type: string
        addressLine1:
          description: ""
          type: string
        addressLine2:
          description: ""
          type: string
        city:
          description: ""
          type: string
        state:
          description: ""
          type: string
        zipCode:
          description: ""
          type: string
        homePhone:
          description: ""
          type: string
        country:
          description: ""
          type: string
        isUsCitizen:
          description: ""
          type: string
        isStudent:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employeedependents:
      properties:
        companyDomain:
          type: string
        employeeid:
          type: string
      required:
      - companyDomain
      - employeeid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeid
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employeedependents:
      properties:
        companyDomain:
          type: string
        employeeId:
          description: ""
          type: string
        firstName:
          description: ""
          type: string
        middleName:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
        relationship:
          description: ""
          type: string
        gender:
          description: ""
          type: string
        ssn:
          description: ""
          type: string
        dateOfBirth:
          description: ""
          type: string
        addressLine1:
          description: ""
          type: string
        addressLine2:
          description: ""
          type: string
        city:
          description: ""
          type: string
        state:
          description: ""
          type: string
        zipCode:
          description: ""
          type: string
        homePhone:
          description: ""
          type: string
        country:
          description: ""
          type: string
        isUsCitizen:
          description: ""
          type: string
        isStudent:
          description: ""
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitplans:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitplancoverages:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroups:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupemployees:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-benefitgroupemployees:
      properties:
        companyDomain:
          type: string
        benefitGroupId:
          description: ""
          type: string
        employeeId:
          description: ""
          type: string
        startDate:
          description: ""
          type: string
        endDate:
          description: ""
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupplans:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-benefitgroupplancosts:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee-deductions-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee-plans-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-payroll-deductions-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_withholding-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_withholding-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_withholding-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        fedWithholding:
          description: ""
          type: string
        stateWithholding:
          description: ""
          type: string
        localWithholding:
          description: ""
          type: string
        additionalFed:
          description: ""
          type: string
        additionalState:
          description: ""
          type: string
        additionalLocal:
          description: ""
          type: string
        taxState:
          description: ""
          type: string
        taxLocal:
          description: ""
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_direct_deposit_accounts-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_direct_deposit_accounts-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_direct_deposit_accounts-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        accounts:
          description: ""
          items:
            properties:
              accountType:
                type: string
              maskedAccountNumber:
                type: string
              bankName:
                type: string
              depositOrder:
                type: string
              ruleType:
                type: string
              ruleAmount:
                type: string
            type: object
          type: array
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_unpaid_pay_stubs-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_unpaid_pay_stubs-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_unpaid_pay_stubs:
      properties:
        companyDomain:
          type: string
        employeeId:
          description: ""
          type: string
        unpaidPeriods:
          description: ""
          items:
            properties:
              payDate:
                type: string
            type: object
          type: array
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-employee_pay_stub-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employee_pay_stub-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employee_pay_stub:
      properties:
        companyDomain:
          type: string
        employeeId:
          description: ""
          type: string
        externalRecordId:
          description: ""
          type: string
        payPeriodFrom:
          description: ""
          type: string
        payPeriodTo:
          description: ""
          type: string
        payDate:
          description: ""
          type: string
        payorName:
          description: ""
          type: string
        payorAdd1:
          description: ""
          type: string
        payorAdd2:
          description: ""
          type: string
        payorCity:
          description: ""
          type: string
        payorState:
          description: ""
          type: string
        payorZip:
          description: ""
          type: string
        payeeName:
          description: ""
          type: string
        currencyCode:
          description: ""
          type: string
        net:
          description: ""
          type: string
        gross:
          description: ""
          type: string
        totalTaxes:
          description: ""
          type: string
        totalDeductions:
          description: ""
          type: string
        ytdNet:
          description: ""
          type: string
        ytdGross:
          description: ""
          type: string
        ytdTaxes:
          description: ""
          type: string
        ytdDeductions:
          description: ""
          type: string
        fedWitholding:
          description: ""
          type: string
        federalType:
          description: "must be 2020_w4, pre_2020_w4, or null"
          enum:
          - 2020_w4
          - pre_2020_w4
          type: string
        twoJobs:
          description: boolean value
          type: string
        dependentsAmount:
          description: float value
          type: string
        otherIncome:
          description: float value
          type: string
        deductionsAmount:
          description: float value
          type: string
        stateWithholding:
          description: ""
          type: string
        localWithholding:
          description: ""
          type: string
        additionalFed:
          description: ""
          type: string
        additionalState:
          description: ""
          type: string
        additionalLocal:
          description: ""
          type: string
        taxState:
          description: ""
          type: string
        taxLocal:
          description: ""
          type: string
        wages:
          description: ""
          items:
            properties:
              externalWageId:
                type: string
              wageDescription:
                type: string
              wageAmount:
                type: string
              ytdWageAmount:
                type: string
              wageRate:
                type: string
              hours:
                type: string
            type: object
          type: array
        taxes:
          description: ""
          items:
            properties:
              externalTaxId:
                type: string
              taxDescription:
                type: string
              taxAmount:
                type: string
              ytdTaxAmount:
                type: string
            type: object
          type: array
        deductions:
          description: ""
          items:
            properties:
              externalDeductionId:
                type: string
              deductionDescription:
                type: string
              deductionAmount:
                type: string
              ytdDeductionAmount:
                type: string
            type: object
          type: array
        deposits:
          description: ""
          items:
            properties:
              depositOrder:
                type: string
              depositAmount:
                type: string
              maskedAccountNumber:
                type: string
              accountType:
                type: string
            type: object
          type: array
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-timetracking-record-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-timetracking-add:
      properties:
        companyDomain:
          type: string
        timeTrackingId:
          description: A unique identifier for the record. Use this ID to adjust or
            delete these hours. It can be any ID you use to track the record up to
            36 characters in length. (i.e. UUID).
          maximum: 36
          type: string
        employeeId:
          description: The ID of the employee.
          type: integer
        divisionId:
          description: "[Optional] The ID of the division for the employee."
          type: integer
        departmentId:
          description: "[Optional] The ID of the department for the employee."
          type: integer
        jobTitleId:
          description: "[Optional] The ID of the job title for the employee."
          type: integer
        payCode:
          description: "[Optional] Only necessary if the payroll provider requires\
            \ a pay code"
          maximum: 50
          type: string
        dateHoursWorked:
          description: The date the hours were worked. Please use the ISO-8601 date
            format YYYY-MM-DD.
          type: string
        payRate:
          description: "[Optional] The rate of pay. e.g. $15.00/hour should use 15.00\
            \ here. Only necessary if the payroll provider requires a pay rate."
          format: float
          type: number
        rateType:
          description: The type of hours - regular or overtime. Please use either
            "REG" or "OT" here.
          type: string
        hoursWorked:
          description: The number of hours worked.
          format: float
          type: number
        jobCode:
          description: "[Optional] A job code."
          type: integer
        jobData:
          description: "[Optional] A list of up to four 20 characters max job numbers\
            \ in comma delimited format with no spaces."
          type: string
      required:
      - companyDomain
      - dateHoursWorked
      - employeeId
      - hoursWorked
      - rateType
      - timeTrackingId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-timetracking-adjust:
      properties:
        companyDomain:
          type: string
        timeTrackingId:
          description: The time tracking id is the id that was used to track the record
            up to 36 characters in length. (i.e. UUID).
          type: string
        hoursWorked:
          description: "The updated number of hours worked. e.g. if Employee A worked\
            \ 8.0 hours originally and decided they only worked 6.0, please send 6.0\
            \ here not -2.0."
          format: float
          type: number
      required:
      - companyDomain
      - hoursWorked
      - timeTrackingId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-timetracking-delete-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-timesheets-approve:
      properties:
        companyDomain:
          type: string
        lastChanged:
          description: UNIX timestamp for last change to timesheet
          example: 1624485787
          type: integer
          x-konfig-original-example: 1624485787
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-lastChanged
        timesheets:
          description: Array of timesheet objects that contain the timesheet id
          items:
            properties:
              timesheetId:
                description: The id of the timesheet
                example: 100
                type: integer
                x-konfig-original-example: 100
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-timesheets-items-properties-timesheetId
            type: object
          type: array
      required:
      - companyDomain
      - lastChanged
      - timesheets
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-timesheets-clock_out_and_approve:
      properties:
        companyDomain:
          type: string
        clockOuts:
          description: Array of clock out information
          items:
            properties:
              timesheetId:
                description: The id of the timesheet
                example: 100
                type: integer
                x-konfig-original-example: 100
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-timesheetId
              end:
                description: 24 hour format (hh:mm) for clock out time
                example: "1050"
                type: string
                x-konfig-original-example: 1050
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-end
              date:
                description: Date of the clock out. Date string format (YYYY-MM-DD)
                example: 2021-04-23
                type: string
                x-konfig-original-example: 2021-04-23
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-date
            required:
            - date
            - end
            - timesheetId
            type: object
          type: array
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-timesheets:
      properties:
        companyDomain:
          type: string
        timesheets:
          description: Comma separated list of timesheet ids
          example: "10, 11, 12"
          type: string
          x-konfig-original-example: "10, 11, 12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingGetTimesheetsByIdsRequest-properties-timesheets
      required:
      - companyDomain
      - timesheets
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_in-employeeId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        start:
          description: The start time for the clock in. In 24 hour format HH:MM
          example: "780"
          type: string
          x-konfig-original-example: 780
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-start
        timezone:
          description: The timezone associated with the clock in.
          example: America/Denver
          type: string
          x-konfig-original-example: America/Denver
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-timezone
        note:
          description: The note associated with the clock in
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-note
        projectId:
          description: The id of the project associated with the clock in
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-projectId
        taskId:
          description: The id of the task associated with the clock in
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-taskId
        clockInLocation:
          properties:
            latitude:
              example: 40.332729
              format: double
              type: number
              x-konfig-original-example: 40.332729
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-latitude
            longitude:
              example: -111.729235
              format: double
              type: number
              x-konfig-original-example: -111.729235
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-longitude
            accuracy:
              description: Accuracy in meters of the clock in location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-accuracy
            address:
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-address
          type: object
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_out-employeeId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        clockOutLocation:
          properties:
            latitude:
              example: 40.332729
              format: double
              type: number
              x-konfig-original-example: 40.332729
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-latitude
            longitude:
              example: -111.729235
              format: double
              type: number
              x-konfig-original-example: -111.729235
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-longitude
            accuracy:
              description: Accuracy in meters of the clock out location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-accuracy
            address:
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-address
          type: object
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-daily_entries:
      properties:
        companyDomain:
          type: string
        entries:
          items:
            properties:
              employeeId:
                description: employee id for the time entry
                example: 40342
                type: integer
                x-konfig-original-example: 40342
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-employeeId
              date:
                description: date of the time entry
                example: 2021-06-25
                type: string
                x-konfig-original-example: 2021-06-25
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-date
              hours:
                description: The number of hours for the time entry.
                example: 7.5
                format: float
                type: number
                x-konfig-original-example: 7.5
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-hours
              dailyEntryId:
                description: The id of the daily entry if updating an existing entry
                example: 1
                type: integer
                x-konfig-original-example: 1
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-dailyEntryId
              projectId:
                description: The id of the project associated with the time entry
                example: 1
                type: integer
                x-konfig-original-example: 1
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-projectId
              taskId:
                description: The id of the task associated with the time entry
                example: 2
                type: integer
                x-konfig-original-example: 2
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-taskId
              note:
                type: string
            type: object
          type: array
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-time_tracking-clock_entries:
      properties:
        companyDomain:
          type: string
        clockEntryIds:
          example:
          - 10
          - 11
          - 12
          items:
            type: integer
          type: array
          x-konfig-original-example:
          - 10
          - 11
          - 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingDeleteClockEntriesRequest-properties-clockEntryIds
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries:
      properties:
        companyDomain:
          type: string
        entries:
          items:
            properties:
              employeeId:
                description: employee id for the time entry
                example: 40342
                type: integer
                x-konfig-original-example: 40342
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-employeeId
              date:
                description: date of the time entry
                example: 2021-06-25
                type: string
                x-konfig-original-example: 2021-06-25
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-date
              start:
                description: 24 hour format (hh:mm) for start time
                example: "780"
                type: string
                x-konfig-original-example: 780
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-start
              end:
                description: 24 hour format (hh:mm) for end time
                example: "1020"
                type: string
                x-konfig-original-example: 1020
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-end
              clockEntryId:
                description: id of existing time entry. used when updating time entry
                example: 101
                type: integer
                x-konfig-original-example: 101
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-clockEntryId
              projectId:
                description: The id of the project associated with the time entry
                example: 1
                type: integer
                x-konfig-original-example: 1
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-projectId
              taskId:
                description: The id of the task associated with the time entry
                example: 2
                type: integer
                x-konfig-original-example: 2
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-taskId
              note:
                example: Note for time entry
                type: string
                x-konfig-original-example: Note for time entry
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-note
            type: object
          type: array
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-timesheet-timesheetId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        timesheetId:
          type: string
      required:
      - companyDomain
      - employeeId
      - timesheetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - timesheetId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-daily_entries-id:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - employeeId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-clock_entries-id:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - employeeId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-is_clocked_in:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employee-employeeId-clock_in-data:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        start:
          description: The start time for the clock in. In 24 hour format HH:MM
          example: "780"
          type: string
          x-konfig-original-example: 780
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-start
        timezone:
          description: The timezone associated with the clock in.
          example: America/Denver
          type: string
          x-konfig-original-example: America/Denver
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-timezone
        note:
          description: The note associated with the clock in
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-note
        projectId:
          description: The id of the project associated with the clock in
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-projectId
        taskId:
          description: The id of the task associated with the clock in
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-taskId
        clockInLocation:
          properties:
            latitude:
              example: 40.332729
              format: double
              type: number
              x-konfig-original-example: 40.332729
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-latitude
            longitude:
              example: -111.729235
              format: double
              type: number
              x-konfig-original-example: -111.729235
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-longitude
            accuracy:
              description: Accuracy in meters of the clock in location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-accuracy
            address:
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-address
          type: object
        clockOutLocation:
          properties:
            latitude:
              example: 40.332729
              format: double
              type: number
              x-konfig-original-example: 40.332729
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-latitude
            longitude:
              example: -111.729235
              format: double
              type: number
              x-konfig-original-example: -111.729235
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-longitude
            accuracy:
              description: Accuracy in meters of the clock in location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-accuracy
            address:
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-address
          type: object
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-projects:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    ? konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employee-employeeId-projects-projectId-tasks
    : properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        projectId:
          type: string
      required:
      - companyDomain
      - employeeId
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - projectId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-timesheet_entries:
      properties:
        companyDomain:
          type: string
        start:
          type: string
        end:
          type: string
        employeeIds:
          type: string
      required:
      - companyDomain
      - end
      - start
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - start
      - end
      - employeeIds
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries-store:
      properties:
        companyDomain:
          type: string
        entries:
          items:
            properties:
              employeeId:
                description: Unique identifier for the employee.
                type: integer
              date:
                description: Date for the timesheet entry. Must be in YYYY-MM-DD format.
                example: 2024-01-31
                type: string
                x-konfig-original-example: 2024-01-31
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-date
              start:
                description: Start time for the timesheet entry. Local time for the
                  employee. Must be in hh:mm 24 hour format.
                example: 09:00
                type: string
                x-konfig-original-example: 09:00
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-start
              end:
                description: End time for the timesheet entry. Local time for the
                  employee. Must be in hh:mm 24 hour format.
                example: "1020"
                type: string
                x-konfig-original-example: 1020
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-end
              id:
                description: The ID of an existing timesheet entry. This can be specified
                  to edit an existing entry.
                type: integer
              projectId:
                description: The ID of the project to associate with the timesheet
                  entry.
                type: integer
              taskId:
                description: The ID of the task to associate with the timesheet entry.
                type: integer
              note:
                description: Optional note to associate with the timesheet entry.
                type: string
            required:
            - date
            - employeeId
            - end
            - start
            type: object
          type: array
      required:
      - companyDomain
      - entries
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-clock_entries-delete:
      properties:
        companyDomain:
          type: string
        clockEntryIds:
          items:
            type: integer
          type: array
      required:
      - clockEntryIds
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-hour_entries-store:
      properties:
        companyDomain:
          type: string
        hours:
          items:
            properties:
              employeeId:
                description: Unique identifier for the employee.
                type: integer
              date:
                description: Date for the timesheet entry. Must be in YYYY-MM-DD format.
                example: 2024-01-31
                type: string
                x-konfig-original-example: 2024-01-31
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-date
              hours:
                description: Hours worked for this timesheet entry.
                example: 3.5
                type: number
                x-konfig-original-example: 3.5
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-hours
              id:
                description: The ID of an existing timesheet entry. This can be specified
                  to edit an existing entry.
                type: integer
              projectId:
                description: The ID of the project to associate with the timesheet
                  entry.
                type: integer
              taskId:
                description: The ID of the task to associate with the timesheet entry.
                type: integer
              note:
                description: Optional note to associate with the timesheet entry.
                type: string
            required:
            - date
            - employeeId
            - hours
            type: object
          type: array
      required:
      - companyDomain
      - hours
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-hour_entries-delete:
      properties:
        companyDomain:
          type: string
        hourEntryIds:
          items:
            type: integer
          type: array
      required:
      - companyDomain
      - hourEntryIds
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employees-employeeId-clock_in:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        projectId:
          description: id of the time tracking project that should be associated with
            the timesheet entry. Required if taskId is specified.
          example: 10
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-projectId
        taskId:
          description: id of the time tracking task that should be associated with
            the timesheet entry.
          example: 25
          type: integer
          x-konfig-original-example: 25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-taskId
        note:
          description: The note that should be associated with the timesheet entry
          example: Back from lunch.
          type: string
          x-konfig-original-example: Back from lunch.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddTimesheetClockInRequest-properties-note
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-employees-employeeId-clock_out:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_tracking-employees-employeeId-projects:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-time_tracking-projects:
      properties:
        companyDomain:
          type: string
        name:
          description: Name of the project.
          example: Project A
          type: string
          x-konfig-original-example: Project A
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaCreateProjectTaskRequest-properties-name
        billable:
          description: Indicates if the project is billable. Defaults to true if not
            provided.
          type: boolean
        allowAllEmployees:
          description: Indicates if all employees can log time for this project. Defaults
            to true if not provided.
          type: boolean
        employeeIds:
          description: A list of employee IDs that can log time for this project.
          items:
            type: integer
          type: array
        hasTasks:
          description: Indicates if the project has tasks. Defaults to false if not
            provided.
          type: boolean
        tasks:
          description: List of tasks to create and associate with the project.
          items:
            properties:
              name:
                description: Name of the task.
                type: string
              billable:
                description: Indicates if the tasks is billable. Defaults to true
                  if not provided.
                type: boolean
            required:
            - name
            type: object
          type: array
      required:
      - companyDomain
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-aggregate:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-performance-employees-employeeId-goals-aggregate:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_2-performance-employees-employeeId-goals-aggregate:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-goalId-aggregate:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
      required:
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-performance-employees-employeeId-goals-goalId-sharedWith:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
        sharedWithEmployeeIds:
          items:
            type: integer
          type: array
      required:
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-filters:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1_1-performance-employees-employeeId-goals-filters:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-canCreateGoals:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        filter:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - filter
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-performance-employees-employeeId-goals:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        title:
          description: "[Required] The goal title."
          maxLength: 1024
          type: string
        description:
          description: "[Optional] The goal description."
          maxLength: 65535
          type: string
        percentComplete:
          description: "[Optional] The goal completion percentage (0 - 100). If completionDate\
            \ is set, this value must be 100."
          type: integer
        alignsWithOptionId:
          description: "[Optional] The option ID that aligns with this goal."
          type: string
        sharedWithEmployeeIds:
          description: "[Required] Employee IDs of employees with whom the goal is\
            \ shared. All goal owners are considered \"shared with\". This must include\
            \ the employee for whom the goal is created."
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: "[Required] The goal due date in YYYY-mm-dd format."
          type: string
        completionDate:
          description: "[Optional] The date the goal was completed. If date is set,\
            \ and no milestones are contained within this goal, percentComplete must\
            \ be set to 100. If this goal does contain milestones, completion date\
            \ cannot be set."
          format: float
          type: number
        milestones:
          description: "[Optional] Milestones for the goal."
          items:
            $ref: '#/components/schemas/Milestone'
          type: array
      required:
      - companyDomain
      - dueDate
      - employeeId
      - sharedWithEmployeeIds
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-performance-employees-employeeId-goals-goalId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
      required:
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-performance-employees-employeeId-goals-goalId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
        title:
          description: The goal title.
          maxLength: 1024
          type: string
        description:
          description: The goal description.
          maxLength: 65535
          type: string
        id:
          description: A unique identifier for the record. Use this ID to reference
            this goal.
          type: integer
        percentComplete:
          description: The goal completion percentage (0 - 100).
          type: integer
        alignsWithOptionId:
          description: The option ID that aligns with this goal.
          type: string
        sharedWithEmployeeIds:
          description: Employee IDs of employees with whom the goal is shared. All
            goal owners are considered "shared with".
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: The goal due date in YYYY-mm-dd format.
          type: string
        completionDate:
          description: The date the goal was completed.
          format: float
          type: number
      required:
      - companyDomain
      - employeeId
      - goalId
      - id
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1_1-performance-employees-employeeId-goals-goalId:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
        title:
          description: "[Required] The goal title."
          maxLength: 1024
          type: string
        description:
          description: "[Optional] The goal description."
          maxLength: 65535
          type: string
        alignsWithOptionId:
          description: "[Optional] The option ID that aligns with this goal."
          type: string
        sharedWithEmployeeIds:
          description: "[Required] Employee IDs of employees with whom the goal is\
            \ shared. All goal owners are considered \"shared with\". This must include\
            \ the employee for whom the goal is created."
          items:
            type: integer
          maximum: 50
          type: array
        dueDate:
          description: "[Required] The goal due date in YYYY-mm-dd format."
          type: string
        milestonesEnabled:
          description: "[Optional] A flag indicating whether or not milestones are\
            \ enabled for this goal. Setting this flag to false will delete all existing\
            \ milestones for this goal."
          type: boolean
        deletedMilestoneIds:
          description: "[Optional] Ids of all the milestones to be deleted with the\
            \ update."
          items:
            type: integer
          type: array
        milestones:
          description: "[Optional] All milestones to be added to the goal with this\
            \ update."
          items:
            $ref: '#/components/schemas/Milestone'
          type: array
      required:
      - companyDomain
      - dueDate
      - employeeId
      - goalId
      - sharedWithEmployeeIds
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-performance-employees-employeeId-goals-goalId-reopen:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
      required:
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-shareOptions:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        search:
          type: string
        limit:
          type: string
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - search
      - limit
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-performance-employees-employeeId-goals-goalId-comments:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
      required:
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
    ? konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-performance-employees-employeeId-goals-goalId-comments-commentId
    : properties:
        companyDomain:
          type: string
        employeeId:
          type: string
        goalId:
          type: string
        commentId:
          type: string
      required:
      - commentId
      - companyDomain
      - employeeId
      - goalId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - goalId
      - commentId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-jobs:
      properties:
        companyDomain:
          type: string
        statusGroups:
          enum:
          - ALL
          - DRAFT_AND_OPEN
          - Open
          - Filled
          - Draft
          - Deleted
          - On Hold
          - Canceled
          type: string
        sortBy:
          enum:
          - count
          - title
          - lead
          - created
          - status
          type: string
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - statusGroups
      - sortBy
      - sortOrder
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-applications:
      properties:
        companyDomain:
          type: string
        page:
          type: integer
        jobId:
          type: integer
        applicationStatusId:
          type: integer
        applicationStatus:
          enum:
          - ALL
          - ALL_ACTIVE
          - NEW
          - ACTIVE
          - INACTIVE
          - HIRED
          type: string
        jobStatusGroups:
          enum:
          - ALL
          - DRAFT_AND_OPEN
          - Open
          - Filled
          - Draft
          - Deleted
          - On Hold
          - Canceled
          type: string
        searchString:
          type: string
        sortBy:
          enum:
          - first_name
          - job_title
          - rating
          - phone
          - status
          - last_updated
          - created_date
          type: string
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
        newSince:
          format: date-time
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - page
      - jobId
      - applicationStatusId
      - applicationStatus
      - jobStatusGroups
      - searchString
      - sortBy
      - sortOrder
      - newSince
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-applications-applicationId:
      properties:
        companyDomain:
          type: string
        applicationId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-get-parameters-1-schema
      required:
      - applicationId
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - applicationId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-applications-applicationId-comments:
      properties:
        companyDomain:
          type: string
        applicationId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-comments-post-parameters-1-schema
        type:
          default: comment
          description: Always the value "comment".
          example: comment
          pattern: ^comment$
          type: string
          x-konfig-original-example: comment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-type
        comment:
          description: The comment being posted.
          example: I really like this applicant
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingAddApplicationCommentRequest-properties-comment
      required:
      - applicationId
      - comment
      - companyDomain
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - applicationId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-statuses:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-applications-applicationId-status:
      properties:
        companyDomain:
          type: string
        applicationId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-applicant_tracking-applications-applicationId-status-post-parameters-1-schema
        status:
          description: Associates a status id with an application.
          example: 2
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingChangeApplicantStatusRequest-properties-status
      required:
      - applicationId
      - companyDomain
      - status
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - applicationId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-locations:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-applicant_tracking-hiring_leads:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-application:
      properties:
        companyDomain:
          type: string
        firstName:
          description: The first name of the candidate.
          type: string
        lastName:
          description: The last name of the candidate.
          type: string
        email:
          description: The email address of the candidate.
          type: string
        phoneNumber:
          description: The phone number of the candidate.
          type: string
        source:
          description: "The source of the candidate application, e.g. LinkedIn, Indeed,\
            \ etc."
          type: string
        jobId:
          description: The id of the job opening for the candidate application.
          type: integer
        address:
          description: The street address of the candidate.
          type: string
        city:
          description: The city of the candidate.
          type: string
        state:
          description: "The state or province of the candidate. Accepts state name,\
            \ abbreviation, or ISO code."
          type: string
        zip:
          description: The zip code or postal code of the candidate.
          type: string
        country:
          description: The country of the candidate. Accepts country name or ISO code.
          type: string
        linkedinUrl:
          description: The LinkedIn profile url of the candidate.
          type: string
        dateAvailable:
          description: The available start date of the candidate with the format YYYY-MM-DD.
          type: string
        desiredSalary:
          description: The desired salary of the candidate.
          type: string
        referredBy:
          description: The person or entity that referred the candidate.
          type: string
        websiteUrl:
          description: "The personal website, blog, or online portfolio of the candidate."
          type: string
        highestEducation:
          description: The highest completed education level of the candidate.
          enum:
          - GED or Equivalent
          - High School
          - Some College
          - College - Associates
          - College - Bachelor of Arts
          - College - Bachelor of Fine Arts
          - College - Bachelor of Science
          - College - Master of Arts
          - College - Master of Fine Arts
          - College - Master of Science
          - College - Master of Business Administration
          - College - Doctorate
          - Medical Doctor
          - Other
          type: string
        collegeName:
          description: The college or university of the candidate.
          type: string
        references:
          description: A list of references supplied by the candidate.
          type: string
        resume:
          description: Resume of the candidate.
          format: binary
          type: string
        coverLetter:
          description: Cover letter of the candidate.
          format: binary
          type: string
      required:
      - companyDomain
      - firstName
      - jobId
      - lastName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-applicant_tracking-job_opening:
      properties:
        companyDomain:
          type: string
        postingTitle:
          description: The posting title of the job opening.
          type: string
        jobStatus:
          description: The status of the job opening.
          enum:
          - Draft
          - Open
          - On Hold
          - Filled
          - Canceled
          type: string
        hiringLead:
          description: The employee id (from the v1/applicant_tracking/hiring_leads
            endpoint) of the hiring lead for the job opening.
          type: integer
        department:
          description: The department of the job opening.
          type: string
        employmentType:
          description: "The type of employment offered in the job opening, e.g. Full-Time,\
            \ Part-Time, Contractor, etc."
          type: string
        minimumExperience:
          description: The minimum experience level that qualifies a candidate for
            the job opening.
          enum:
          - Entry-level
          - Mid-level
          - Experienced
          - Manager/Supervisor
          - Senior Manager/Supervisor'
          - Executive
          - Senior Executive
          type: string
        compensation:
          description: The pay rate or compensation for the job opening.
          type: string
        jobLocation:
          description: The location id (from the v1/applicant_tracking/locations endpoint)
            of the job opening. Omit this parameter for a remote job location.
          type: integer
        jobDescription:
          description: The long-form text description of the job opening.
          type: string
        applicationQuestionResume:
          description: Whether the job opening application has a standard question
            for resume (true) or not (false) or if uploading a resume is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionAddress:
          description: Whether the job opening application has a standard question
            for address (true) or not (false) or if entering an address is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionLinkedinUrl:
          description: Whether the job opening application has a standard question
            for LinkedIn profile url (true) or not (false) or if entering a LinkedIn
            profile url is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionDateAvailable:
          description: Whether the job opening application has a standard question
            for availability date (true) or not (false) or if entering an availability
            date is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionDesiredSalary:
          description: Whether the job opening application has a standard question
            for desired salary (true) or not (false) or if entering a desired salary
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionCoverLetter:
          description: Whether the job opening application has a standard question
            for cover letter (true) or not (false) or if uploading a cover letter
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionReferredBy:
          description: Whether the job opening application has a standard question
            for referred by (true) or not (false) or if entering referred by is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionWebsiteUrl:
          description: Whether the job opening application has a standard question
            for website url (true) or not (false) or if entering a website url is
            mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionHighestEducation:
          description: Whether the job opening application has a standard question
            for highest education (true) or not (false) or if entering highest education
            is mandatory (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionCollege:
          description: Whether the job opening application has a standard question
            for college (true) or not (false) or if entering a college is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        applicationQuestionReferences:
          description: Whether the job opening application has a standard question
            for references (true) or not (false) or if entering references is mandatory
            (required).
          enum:
          - "true"
          - "false"
          - Required
          type: string
        internalJobCode:
          description: The internal job code for the job opening.
          type: string
      required:
      - companyDomain
      - employmentType
      - hiringLead
      - jobDescription
      - jobStatus
      - postingTitle
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-type:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-type:
      properties:
        companyDomain:
          type: string
        description:
          description: Description for the training.
          type: string
        name:
          description: Name of the new training type.
          example: My New Training
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-name
        frequency:
          description: The frequency is the (optional) amount of months between renewing
            trainings. Not valid if training are not renewable.
          example: 12
          type: integer
          x-konfig-original-example: "12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-frequency
        renewable:
          description: Renewable is optional but if you are setting it to true you
            must pass a frequency which is the months between renewals.
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-renewable
        category:
          description: The category is optional and you can pass either a category
            id or a category name.
          properties:
            id:
              description: Category ID
              example: 3
              type: integer
              x-konfig-original-example: 3
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-id
            name:
              description: Category Name
              example: First Aid Trainings
              type: string
              x-konfig-original-example: First Aid Trainings
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-name
            accuracy:
              description: Accuracy in meters of the clock in location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-accuracy
            address:
              description: Address...
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-address
          type: object
        required:
          description: Is this a required training?
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-required
        dueFromHireDate:
          description: Number of days before the training is due for new hires. Not
            valid unless training is required.
          example: 30
          type: integer
          x-konfig-original-example: "30"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-dueFromHireDate
        linkUrl:
          description: Optional URL that can be included with a training.
          type: string
        allowEmployeesToMarkComplete:
          default: false
          description: Allows all employees who can view the training to be able to
            mark it complete.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-allowEmployeesToMarkComplete
      required:
      - companyDomain
      - name
      - required
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-type-trainingTypeId:
      properties:
        companyDomain:
          type: string
        trainingTypeId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-delete-parameters-1-schema
      required:
      - companyDomain
      - trainingTypeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - trainingTypeId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-type-trainingTypeId:
      properties:
        companyDomain:
          type: string
        trainingTypeId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-type-trainingTypeId-put-parameters-1-schema
        description:
          description: Description for the training.
          type: string
        name:
          description: Name of the training type.
          example: My Edited Training
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-name
        frequency:
          description: The frequency is the (optional) amount of months between renewing
            trainings. Not valid if training are not renewable.
          example: 12
          type: integer
          x-konfig-original-example: "12"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-frequency
        renewable:
          description: Renewable is optional but if you are setting it to true you
            must pass a frequency.
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-renewable
        category:
          description: Category is optional and passing an empty value will remove
            the category from the training type. Passing a name will assign the training
            type to the new training category.
          properties:
            id:
              description: Category ID
              example: 3
              type: integer
              x-konfig-original-example: 3
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-id
            name:
              description: Category Name
              example: CustomApiCategoryName2
              type: string
              x-konfig-original-example: CustomApiCategoryName2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-name
            accuracy:
              description: Accuracy in meters of the clock in location
              example: 2
              type: integer
              x-konfig-original-example: 2
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-accuracy
            address:
              description: Address...
              example: 123 Main
              type: string
              x-konfig-original-example: 123 Main
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-address
          type: object
        required:
          description: Is this a required training?
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-required
        dueFromHireDate:
          description: Number of days before the training is due for new hires. Not
            valid unless training is required.
          example: 30
          type: integer
          x-konfig-original-example: "30"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-dueFromHireDate
        linkUrl:
          description: Optional URL that can be included with a training.
          type: string
        allowEmployeesToMarkComplete:
          default: false
          description: Allows all employees who can view the training to be able to
            mark it complete.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-allowEmployeesToMarkComplete
      required:
      - companyDomain
      - name
      - required
      - trainingTypeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - trainingTypeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-category:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-category:
      properties:
        companyDomain:
          type: string
        name:
          description: Name of the new training category.
          example: My New Training Category
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddCategoryRequest-properties-name
      required:
      - companyDomain
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-category-trainingCategoryId:
      properties:
        companyDomain:
          type: string
        trainingCategoryId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-delete-parameters-1-schema
      required:
      - companyDomain
      - trainingCategoryId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - trainingCategoryId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-category-trainingCategoryId:
      properties:
        companyDomain:
          type: string
        trainingCategoryId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-category-trainingCategoryId-put-parameters-1-schema
        name:
          description: Name of the training category.
          example: My Training Category
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateCategoryRequest-properties-name
      required:
      - companyDomain
      - name
      - trainingCategoryId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - trainingCategoryId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-training-record-employee-employeeId:
      properties:
        companyDomain:
          type: string
        employeeId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-1-schema
        trainingTypeId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-get-parameters-2-schema
      required:
      - companyDomain
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
      - trainingTypeId
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-training-record-employee-employeeId:
      properties:
        companyDomain:
          type: string
        employeeId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employee-employeeId-post-parameters-1-schema
        completed:
          description: Completed is a required field and must be in yyyy-mm-dd format.
          example: 2016-05-25
          format: date
          pattern: "([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-completed
        cost:
          properties:
            currency:
              type: string
            cost:
              type: number
        instructor:
          example: Bob Jones
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-instructor
        hours:
          example: 16
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-hours
        credits:
          example: 4
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-credits
        notes:
          example: sample note
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-notes
        type:
          default: 0
          description: This must be an existing training type id.
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingAddEmployeeTrainingRecordRequest-properties-type
      required:
      - companyDomain
      - completed
      - employeeId
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-training-record-employeeTrainingRecordId:
      properties:
        companyDomain:
          type: string
        employeeTrainingRecordId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-delete-parameters-1-schema
      required:
      - companyDomain
      - employeeTrainingRecordId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeTrainingRecordId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-training-record-employeeTrainingRecordId:
      properties:
        companyDomain:
          type: string
        employeeTrainingRecordId:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-training-record-employeeTrainingRecordId-put-parameters-1-schema
        completed:
          description: Completed is the only required field and must be in yyyy-mm-dd
            format. The other parameters are optional.
          example: 2016-05-25
          pattern: "([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-completed
        cost:
          properties:
            currency:
              type: string
            cost:
              type: number
        instructor:
          example: Bob Jones
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-instructor
        hours:
          example: 16
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-hours
        credits:
          example: 4
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-credits
        notes:
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateEmployeeTrainingRecordRequest-properties-notes
      required:
      - companyDomain
      - completed
      - employeeTrainingRecordId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeTrainingRecordId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-monitor_fields:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-id-log:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id:
      properties:
        companyDomain:
          type: string
        fields:
          default: "firstName,lastName"
          example: "firstName,lastName"
          type: string
          x-konfig-original-example: "firstName,lastName"
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-1-schema
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-2-schema
        onlyCurrent:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-get-parameters-3-schema
      required:
      - companyDomain
      - fields
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - fields
      - id
      - onlyCurrent
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        firstName:
          description: ""
          example: Panda
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-firstName
        lastName:
          description: ""
          example: Bear
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-lastName
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-employees:
      properties:
        companyDomain:
          type: string
        firstName:
          description: ""
          example: Panda
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-postNewEmployee-properties-firstName
        lastName:
          description: ""
          example: Bear
          maximum: 255
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-postNewEmployee-properties-lastName
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-employees-id-files-view:
      properties:
        companyDomain:
          type: string
        id:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--companyDomain-v1-employees-id-files-view-get-parameters-1-schema
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-files-view:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-fields:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-tables:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-lists:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-users:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-time_off-types:
      properties:
        companyDomain:
          type: string
        mode:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - mode
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-meta-time_off-policies:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_off-requests:
      properties:
        companyDomain:
          type: string
        id:
          type: integer
        action:
          type: string
        employeeId:
          type: string
        start:
          type: string
        end:
          type: string
        type:
          type: string
        status:
          type: string
      required:
      - companyDomain
      - end
      - start
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
      - action
      - employeeId
      - start
      - end
      - type
      - status
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-history:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: integer
        date:
          description: The date the request should be added in history. This will
            usually be the first date of the request. Should be in ISO8601 date format
            (YYYY-MM-DD).
          type: string
        timeOffRequestId:
          description: The ID of the time off request.
          type: integer
        note:
          description: This is an optional note to show in history.
          maximum: 255
          type: string
      required:
      - companyDomain
      - date
      - employeeId
      - timeOffRequestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-employees-employeeId-time_off-balance_adjustment:
      properties:
        companyDomain:
          type: string
        employeeId:
          type: integer
        date:
          description: The date the adjustment should be added in history. Should
            be in ISO8601 date format (YYYY-MM-DD).
          type: string
        timeOffTypeId:
          description: The ID of the time off type to add a balance adjustment for.
          type: integer
        amount:
          description: The number of hours/days to adjust the balance by.
          format: float
          type: number
        note:
          description: This is an optional note to show in history.
          maximum: 255
          type: string
      required:
      - amount
      - companyDomain
      - date
      - employeeId
      - timeOffTypeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-time_off-whos_out:
      properties:
        companyDomain:
          type: string
        start:
          type: string
        end:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - start
      - end
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks:
      properties:
        companyDomain:
          type: string
      required:
      - companyDomain
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-post--companyDomain-v1-webhooks:
      properties:
        companyDomain:
          type: string
        name:
          description: The name of the webhook.
          example: My new webhook
          maxLength: 1024
          type: string
          x-konfig-original-example: My new webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-name
        monitorFields:
          description: A list of fields to monitor.
          example:
          - firstName
          - lastName
          items:
            type: string
          type: array
          x-konfig-original-example:
          - firstName
          - lastName
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-monitorFields
        postFields:
          additionalProperties:
            description: External name to post field to
            type: string
          description: "A list of fields to post to the webhook url. Field ID or alias:\
            \ external name"
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          type: object
          x-konfig-original-example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-postFields
        url:
          description: The url the webhook should send data to (must begin with https://).
          pattern: ^http://
          type: string
        format:
          description: "The format the webhook should use (json - default, form-encoded)."
          enum:
          - json
          - form-encoded
          type: string
        frequency:
          description: How often the webhook could fire.
          properties:
            hour:
              description: "The hour to potentially fire (0-23, null to potentially\
                \ fire every hour)"
              maximum: 23
              minimum: 0
              type: integer
            minute:
              description: "The minute to potentially fire (0-59, null to potentially\
                \ fire every minute)"
              maximum: 59
              minimum: 0
              type: integer
            day:
              description: "The day to potentially fire (1-31, null to potentially\
                \ fire every day)"
              maximum: 31
              minimum: 1
              type: integer
            month:
              description: "The month to potentially fire (1-12, null to potentially\
                \ fire every month)"
              maximum: 12
              minimum: 1
              type: integer
          type: object
        limit:
          description: "To limit how often to potentially fire a webhook, and maximum\
            \ amount of records to send"
          properties:
            times:
              description: The amount of records to send
              type: integer
            seconds:
              description: The minimum amount of seconds between requests
              type: integer
          type: object
        includeCompanyDomain:
          description: "If set to true, the company domain will be added to the header."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-includeCompanyDomain
      required:
      - companyDomain
      - monitorFields
      - name
      - postFields
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
    konfig-generated-schema-single-parameter-schema-delete--companyDomain-v1-webhooks-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-get--companyDomain-v1-webhooks-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
      required:
      - companyDomain
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    konfig-generated-schema-single-parameter-schema-put--companyDomain-v1-webhooks-id:
      properties:
        companyDomain:
          type: string
        id:
          type: string
        name:
          description: The name of the webhook.
          example: My new webhook
          maxLength: 1024
          type: string
          x-konfig-original-example: My new webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-name
        monitorFields:
          description: A list of fields to monitor.
          example:
          - firstName
          - lastName
          items:
            type: string
          type: array
          x-konfig-original-example:
          - firstName
          - lastName
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-monitorFields
        postFields:
          additionalProperties:
            description: External name to post field to
            type: string
          description: "A list of fields to post to the webhook url. Field ID or alias:\
            \ external name"
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          type: object
          x-konfig-original-example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-postFields
        url:
          description: The url the webhook should send data to (must begin with https://).
          pattern: ^http://
          type: string
        format:
          description: "The format the webhook should use (json - default, form-encoded)."
          enum:
          - json
          - form-encoded
          type: string
        frequency:
          description: How often the webhook could fire.
          properties:
            hour:
              description: "The hour to potentially fire (0-23, null to potentially\
                \ fire every hour)"
              maximum: 23
              minimum: 0
              type: integer
            minute:
              description: "The minute to potentially fire (0-59, null to potentially\
                \ fire every minute)"
              maximum: 59
              minimum: 0
              type: integer
            day:
              description: "The day to potentially fire (1-31, null to potentially\
                \ fire every day)"
              maximum: 31
              minimum: 1
              type: integer
            month:
              description: "The month to potentially fire (1-12, null to potentially\
                \ fire every month)"
              maximum: 12
              minimum: 1
              type: integer
          type: object
        limit:
          description: "To limit how often to potentially fire a webhook, and maximum\
            \ amount of records to send"
          properties:
            times:
              description: The amount of records to send
              type: integer
            seconds:
              description: The minimum amount of seconds between requests
              type: integer
          type: object
        includeCompanyDomain:
          description: "If set to true, the company domain will be added to the header."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewWebHook-properties-includeCompanyDomain
      required:
      - companyDomain
      - id
      - monitorFields
      - name
      - postFields
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - companyDomain
      - id
    ListFieldValues_options_inner:
      example:
        archived: archived
        adpCode: adpCode
        id: 0
        value: value
      properties:
        id:
          description: ""
          type: integer
        value:
          description: ""
          maximum: 255
          type: string
        archived:
          description: ""
          maximum: 255
          type: string
        adpCode:
          description: ""
          maximum: 255
          type: string
      type: object
    TimeOffRequest_notes_inner:
      example:
        note: note
        from: from
      properties:
        from:
          type: string
        note:
          type: string
      type: object
    TimeOffRequest_dates_inner:
      example:
        ymd: ymd
        amount: 1
      properties:
        ymd:
          type: string
        amount:
          type: integer
      type: object
    TimeOffPolicies_inner:
      properties:
        timeOffPolicyId:
          type: integer
        accrualStartDate:
          type: string
      type: object
    RequestCustomReport_filters_lastChanged:
      description: ""
      example:
        includeNull: includeNull
        value: value
      properties:
        includeNull:
          description: yes|no
          type: string
        value:
          description: Date last changed
          type: string
      type: object
    RequestCustomReport_filters:
      description: ""
      example:
        lastChanged:
          includeNull: includeNull
          value: value
      properties:
        lastChanged:
          $ref: '#/components/schemas/RequestCustomReport_filters_lastChanged'
      type: object
    EmployeeBenefitFilters_filters:
      description: At least one filter is required
      example:
        employeeId: 0
        enrollmentStatusEffectiveDate: 2000-01-23
        companyBenefitId: 6
      properties:
        employeeId:
          description: Employee Id
          type: integer
        companyBenefitId:
          description: Company Benefit Id
          type: integer
        enrollmentStatusEffectiveDate:
          description: Enrollment Status Effective Date
          format: date
          type: string
      type: object
    EmployeeDeposit_accounts_inner:
      example:
        depositOrder: depositOrder
        accountType: accountType
        ruleType: ruleType
        bankName: bankName
        ruleAmount: ruleAmount
        maskedAccountNumber: maskedAccountNumber
      properties:
        accountType:
          type: string
        maskedAccountNumber:
          type: string
        bankName:
          type: string
        depositOrder:
          type: string
        ruleType:
          type: string
        ruleAmount:
          type: string
      type: object
    EmployeeUnpaidPaystub_unpaidPeriods_inner:
      example:
        payDate: payDate
      properties:
        payDate:
          type: string
      type: object
    EmployeePaystub_wages_inner:
      example:
        wageDescription: wageDescription
        hours: hours
        wageRate: wageRate
        ytdWageAmount: ytdWageAmount
        externalWageId: externalWageId
        wageAmount: wageAmount
      properties:
        externalWageId:
          type: string
        wageDescription:
          type: string
        wageAmount:
          type: string
        ytdWageAmount:
          type: string
        wageRate:
          type: string
        hours:
          type: string
      type: object
    EmployeePaystub_taxes_inner:
      example:
        ytdTaxAmount: ytdTaxAmount
        taxDescription: taxDescription
        externalTaxId: externalTaxId
        taxAmount: taxAmount
      properties:
        externalTaxId:
          type: string
        taxDescription:
          type: string
        taxAmount:
          type: string
        ytdTaxAmount:
          type: string
      type: object
    EmployeePaystub_deductions_inner:
      example:
        deductionAmount: deductionAmount
        externalDeductionId: externalDeductionId
        deductionDescription: deductionDescription
        ytdDeductionAmount: ytdDeductionAmount
      properties:
        externalDeductionId:
          type: string
        deductionDescription:
          type: string
        deductionAmount:
          type: string
        ytdDeductionAmount:
          type: string
      type: object
    EmployeePaystub_deposits_inner:
      example:
        depositAmount: depositAmount
        depositOrder: depositOrder
        accountType: accountType
        maskedAccountNumber: maskedAccountNumber
      properties:
        depositOrder:
          type: string
        depositAmount:
          type: string
        maskedAccountNumber:
          type: string
        accountType:
          type: string
      type: object
    NewWebHook_frequency:
      description: How often the webhook could fire.
      example:
        hour: 1
        month: 7
        day: 5
        minute: 35
      properties:
        hour:
          description: "The hour to potentially fire (0-23, null to potentially fire\
            \ every hour)"
          maximum: 23
          minimum: 0
          type: integer
        minute:
          description: "The minute to potentially fire (0-59, null to potentially\
            \ fire every minute)"
          maximum: 59
          minimum: 0
          type: integer
        day:
          description: "The day to potentially fire (1-31, null to potentially fire\
            \ every day)"
          maximum: 31
          minimum: 1
          type: integer
        month:
          description: "The month to potentially fire (1-12, null to potentially fire\
            \ every month)"
          maximum: 12
          minimum: 1
          type: integer
      type: object
    NewWebHook_limit:
      description: "To limit how often to potentially fire a webhook, and maximum\
        \ amount of records to send"
      example:
        times: 5
        seconds: 2
      properties:
        times:
          description: The amount of records to send
          type: integer
        seconds:
          description: The minimum amount of seconds between requests
          type: integer
      type: object
    WebHookResponse_frequency:
      description: How often the webhook could fire.
      example:
        hour: 12
        month: 7
        day: 24
        minute: 56
      properties:
        hour:
          description: The hour to potentially fire.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-hour
        minute:
          description: The minute to potentially fire
          example: 56
          type: integer
          x-konfig-original-example: 56
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-minute
        day:
          description: The day to potentially fire
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-frequency-properties-day
        month:
          description: The month to potentially fire
          example: 7
          x-konfig-original-example: 7
      type: object
    WebHookResponse_limit:
      description: "To limit how often to potentially fire a webhook, and maximum\
        \ amount of records to send"
      example:
        times: 15
        seconds: 500
      properties:
        times:
          description: The amount of records to send
          example: 15
          type: integer
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-limit-properties-times
        seconds:
          description: The minimum amount of seconds between requests
          example: 500
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebHookResponse-properties-limit-properties-seconds
      type: object
    TimeTrackingApproveEmployeeTimesheetsRequest_timesheets_inner:
      example:
        timesheetId: 100
      properties:
        timesheetId:
          description: The id of the timesheet
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest-properties-timesheets-items-properties-timesheetId
      type: object
    TimeTrackingApproveEmployeeTimesheetsRequest1_clockOuts_inner:
      example:
        timesheetId: 100
        date: 2021-04-23
        end: "1050"
      properties:
        timesheetId:
          description: The id of the timesheet
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-timesheetId
        end:
          description: 24 hour format (hh:mm) for clock out time
          example: "1050"
          type: string
          x-konfig-original-example: 1050
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-end
        date:
          description: Date of the clock out. Date string format (YYYY-MM-DD)
          example: 2021-04-23
          type: string
          x-konfig-original-example: 2021-04-23
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingApproveEmployeeTimesheetsRequest1-properties-clockOuts-items-properties-date
      required:
      - date
      - end
      - timesheetId
      type: object
    TimeTrackingClockInEmployeeRequest_clockInLocation:
      example:
        address: 123 Main
        latitude: 40.332729
        accuracy: 2
        longitude: -111.729235
      properties:
        latitude:
          example: 40.332729
          format: double
          type: number
          x-konfig-original-example: 40.332729
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-latitude
        longitude:
          example: -111.729235
          format: double
          type: number
          x-konfig-original-example: -111.729235
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-longitude
        accuracy:
          description: Accuracy in meters of the clock in location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-accuracy
        address:
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockInEmployeeRequest-properties-clockInLocation-properties-address
      type: object
    TimeTrackingClockOutEmployeeRequest_clockOutLocation:
      example:
        address: 123 Main
        latitude: 40.332729
        accuracy: 2
        longitude: -111.729235
      properties:
        latitude:
          example: 40.332729
          format: double
          type: number
          x-konfig-original-example: 40.332729
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-latitude
        longitude:
          example: -111.729235
          format: double
          type: number
          x-konfig-original-example: -111.729235
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-longitude
        accuracy:
          description: Accuracy in meters of the clock out location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-accuracy
        address:
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingClockOutEmployeeRequest-properties-clockOutLocation-properties-address
      type: object
    TimeTrackingStoreDailyEntriesRequest_entries_inner:
      example:
        date: 2021-06-25
        dailyEntryId: 1
        note: note
        hours: 7.5
        employeeId: 40342
        projectId: 1
        taskId: 2
      properties:
        employeeId:
          description: employee id for the time entry
          example: 40342
          type: integer
          x-konfig-original-example: 40342
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-employeeId
        date:
          description: date of the time entry
          example: 2021-06-25
          type: string
          x-konfig-original-example: 2021-06-25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-date
        hours:
          description: The number of hours for the time entry.
          example: 7.5
          format: float
          type: number
          x-konfig-original-example: 7.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-hours
        dailyEntryId:
          description: The id of the daily entry if updating an existing entry
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-dailyEntryId
        projectId:
          description: The id of the project associated with the time entry
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-projectId
        taskId:
          description: The id of the task associated with the time entry
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreDailyEntriesRequest-properties-entries-items-properties-taskId
        note:
          type: string
      type: object
    TimeTrackingStoreClockEntriesRequest_entries_inner:
      example:
        date: 2021-06-25
        note: Note for time entry
        start: "780"
        clockEntryId: 101
        employeeId: 40342
        end: "1020"
        projectId: 1
        taskId: 2
      properties:
        employeeId:
          description: employee id for the time entry
          example: 40342
          type: integer
          x-konfig-original-example: 40342
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-employeeId
        date:
          description: date of the time entry
          example: 2021-06-25
          type: string
          x-konfig-original-example: 2021-06-25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-date
        start:
          description: 24 hour format (hh:mm) for start time
          example: "780"
          type: string
          x-konfig-original-example: 780
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-start
        end:
          description: 24 hour format (hh:mm) for end time
          example: "1020"
          type: string
          x-konfig-original-example: 1020
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-end
        clockEntryId:
          description: id of existing time entry. used when updating time entry
          example: 101
          type: integer
          x-konfig-original-example: 101
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-clockEntryId
        projectId:
          description: The id of the project associated with the time entry
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-projectId
        taskId:
          description: The id of the task associated with the time entry
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-taskId
        note:
          example: Note for time entry
          type: string
          x-konfig-original-example: Note for time entry
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingStoreClockEntriesRequest-properties-entries-items-properties-note
      type: object
    TimeTrackingEditClockedInEntryDataRequest_clockInLocation:
      example:
        address: 123 Main
        latitude: 40.332729
        accuracy: 2
        longitude: -111.729235
      properties:
        latitude:
          example: 40.332729
          format: double
          type: number
          x-konfig-original-example: 40.332729
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-latitude
        longitude:
          example: -111.729235
          format: double
          type: number
          x-konfig-original-example: -111.729235
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-longitude
        accuracy:
          description: Accuracy in meters of the clock in location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-accuracy
        address:
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockInLocation-properties-address
      type: object
    TimeTrackingEditClockedInEntryDataRequest_clockOutLocation:
      example:
        address: 123 Main
        latitude: 40.332729
        accuracy: 2
        longitude: -111.729235
      properties:
        latitude:
          example: 40.332729
          format: double
          type: number
          x-konfig-original-example: 40.332729
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-latitude
        longitude:
          example: -111.729235
          format: double
          type: number
          x-konfig-original-example: -111.729235
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-longitude
        accuracy:
          description: Accuracy in meters of the clock in location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-accuracy
        address:
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingEditClockedInEntryDataRequest-properties-clockOutLocation-properties-address
      type: object
    TimeTrackingPrivateBetaAddEditClockEntriesRequest_entries_inner:
      example:
        date: 2024-01-31
        note: note
        start: 09:00
        employeeId: 0
        end: "1020"
        id: 6
        projectId: 1
        taskId: 5
      properties:
        employeeId:
          description: Unique identifier for the employee.
          type: integer
        date:
          description: Date for the timesheet entry. Must be in YYYY-MM-DD format.
          example: 2024-01-31
          type: string
          x-konfig-original-example: 2024-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-date
        start:
          description: Start time for the timesheet entry. Local time for the employee.
            Must be in hh:mm 24 hour format.
          example: 09:00
          type: string
          x-konfig-original-example: 09:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-start
        end:
          description: End time for the timesheet entry. Local time for the employee.
            Must be in hh:mm 24 hour format.
          example: "1020"
          type: string
          x-konfig-original-example: 1020
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditClockEntriesRequest-properties-entries-items-properties-end
        id:
          description: The ID of an existing timesheet entry. This can be specified
            to edit an existing entry.
          type: integer
        projectId:
          description: The ID of the project to associate with the timesheet entry.
          type: integer
        taskId:
          description: The ID of the task to associate with the timesheet entry.
          type: integer
        note:
          description: Optional note to associate with the timesheet entry.
          type: string
      required:
      - date
      - employeeId
      - end
      - start
      type: object
    TimeTrackingPrivateBetaAddEditHourEntriesRequest_hours_inner:
      example:
        date: 2024-01-31
        note: note
        hours: 3.5
        employeeId: 0
        id: 6
        projectId: 1
        taskId: 5
      properties:
        employeeId:
          description: Unique identifier for the employee.
          type: integer
        date:
          description: Date for the timesheet entry. Must be in YYYY-MM-DD format.
          example: 2024-01-31
          type: string
          x-konfig-original-example: 2024-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-date
        hours:
          description: Hours worked for this timesheet entry.
          example: 3.5
          type: number
          x-konfig-original-example: 3.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeTrackingPrivateBetaAddEditHourEntriesRequest-properties-hours-items-properties-hours
        id:
          description: The ID of an existing timesheet entry. This can be specified
            to edit an existing entry.
          type: integer
        projectId:
          description: The ID of the project to associate with the timesheet entry.
          type: integer
        taskId:
          description: The ID of the task to associate with the timesheet entry.
          type: integer
        note:
          description: Optional note to associate with the timesheet entry.
          type: string
      required:
      - date
      - employeeId
      - hours
      type: object
    TimeTrackingPrivateBetaCreateProjectTaskRequest_tasks_inner:
      example:
        name: name
        billable: true
      properties:
        name:
          description: Name of the task.
          type: string
        billable:
          description: Indicates if the tasks is billable. Defaults to true if not
            provided.
          type: boolean
      required:
      - name
      type: object
    TrainingTypeAdditionRequest_category:
      description: The category is optional and you can pass either a category id
        or a category name.
      properties:
        id:
          description: Category ID
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-id
        name:
          description: Category Name
          example: First Aid Trainings
          type: string
          x-konfig-original-example: First Aid Trainings
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-name
        accuracy:
          description: Accuracy in meters of the clock in location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-accuracy
        address:
          description: Address...
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingTypeAdditionRequest-properties-category-properties-address
      type: object
    TrainingUpdateTypeRequest_category:
      description: Category is optional and passing an empty value will remove the
        category from the training type. Passing a name will assign the training type
        to the new training category.
      properties:
        id:
          description: Category ID
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-id
        name:
          description: Category Name
          example: CustomApiCategoryName2
          type: string
          x-konfig-original-example: CustomApiCategoryName2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-name
        accuracy:
          description: Accuracy in meters of the clock in location
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-accuracy
        address:
          description: Address...
          example: 123 Main
          type: string
          x-konfig-original-example: 123 Main
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrainingUpdateTypeRequest-properties-category-properties-address
      type: object
    TrainingAddEmployeeTrainingRecordRequest_cost:
      properties:
        currency:
          type: string
        cost:
          type: number
    GoalsGetAllAggregateInfoResponse_filters_inner:
      example:
        name: In Progress
        count: 3
        id: status-inProgress
      properties:
        id:
          description: Id of the filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-id
        name:
          description: The name of the filter.
          example: In Progress
          type: string
          x-konfig-original-example: In Progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-name
        count:
          description: Count of the goals with that filter.
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-filters-items-properties-count
      type: object
    GoalsGetAllAggregateInfoResponse_goals_inner:
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        sharedWithEmployeeIds:
        - 89
        - 89
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-goals-items-properties-status
      type: object
    GoalsGetAllAggregateInfoResponse_persons_inner:
      example:
        lastName: Johnson
        photoUrl: https://tim.johnson.jpg
        displayFirstName: Tim
        employeeId: 4353
        userId: 45
      properties:
        employeeId:
          description: The id of this employee.
          example: 4353
          type: integer
          x-konfig-original-example: 4353
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-employeeId
        userId:
          description: The user id of the person if applicable.
          example: 45
          type: integer
          x-konfig-original-example: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-userId
        displayFirstName:
          description: First name of the person.
          example: Tim
          type: string
          x-konfig-original-example: Tim
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-displayFirstName
        lastName:
          description: Last name of the person.
          example: Johnson
          type: string
          x-konfig-original-example: Johnson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-lastName
        photoUrl:
          description: url of the user profile image.
          example: https://tim.johnson.jpg
          type: string
          x-konfig-original-example: https://tim.johnson.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-persons-items-properties-photoUrl
      type: object
    GoalsGetAllAggregateInfoResponse_comments_inner:
      example:
        goalId: 25
        commentCount: 2
      properties:
        goalId:
          description: The goalId that the comments are linked to.
          example: 25
          type: integer
          x-konfig-original-example: 25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-comments-items-properties-goalId
        commentCount:
          description: How many comments are linked to the goal
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfoResponse-properties-comments-items-properties-commentCount
      type: object
    GoalsGetAllAggregateInfo200Response_filters_inner_actions:
      description: What actions a user can preform on this kind of goal.
      example:
        canEditGoal: true
        canEditGoalProgressBar: true
        canCloseGoal: true
        canReopenGoal: true
        canShareGoal: true
      properties:
        canCloseGoal:
          description: Can a goal be closed in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canCloseGoal
        canEditGoal:
          description: Can a goal be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canEditGoal
        canEditGoalProgressBar:
          description: Can a goal progress bar be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
        canReopenGoal:
          description: Can a goal be reopened in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canReopenGoal
        canShareGoal:
          description: Can a goal be shared in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-actions-properties-canShareGoal
      type: object
    GoalsGetAllAggregateInfo200Response_filters_inner:
      example:
        name: In Progress
        count: 3
        id: status-inProgress
        actions:
          canEditGoal: true
          canEditGoalProgressBar: true
          canCloseGoal: true
          canReopenGoal: true
          canShareGoal: true
      properties:
        id:
          description: Id of the filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-id
        name:
          description: The name of the filter.
          example: In Progress
          type: string
          x-konfig-original-example: In Progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-name
        count:
          description: Count of the goals with that filter.
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-filters-items-properties-count
        actions:
          $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response_filters_inner_actions'
      type: object
    GoalsGetAllAggregateInfo200Response_goals_inner:
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        sharedWithEmployeeIds:
        - 89
        - 89
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-goals-items-properties-status
      type: object
    GoalsGetAllAggregateInfo200Response_persons_inner:
      example:
        lastName: Johnson
        photoUrl: https://tim.johnson.jpg
        displayFirstName: Tim
        employeeId: 4353
        userId: 45
      properties:
        employeeId:
          description: The id of this employee.
          example: 4353
          type: integer
          x-konfig-original-example: 4353
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-employeeId
        userId:
          description: The user id of the person if applicable.
          example: 45
          type: integer
          x-konfig-original-example: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-userId
        displayFirstName:
          description: First name of the person.
          example: Tim
          type: string
          x-konfig-original-example: Tim
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-displayFirstName
        lastName:
          description: Last name of the person.
          example: Johnson
          type: string
          x-konfig-original-example: Johnson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-lastName
        photoUrl:
          description: url of the user profile image.
          example: https://tim.johnson.jpg
          type: string
          x-konfig-original-example: https://tim.johnson.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-persons-items-properties-photoUrl
      type: object
    GoalsGetAllAggregateInfo200Response_comments_inner:
      example:
        goalId: 25
        commentCount: 2
      properties:
        goalId:
          description: The goalId that the comments are linked to.
          example: 25
          type: integer
          x-konfig-original-example: 25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-comments-items-properties-goalId
        commentCount:
          description: How many comments are linked to the goal
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response-properties-comments-items-properties-commentCount
      type: object
    GoalsGetAllAggregateInfo200Response1_filters_inner_actions:
      description: What actions a user can preform on this kind of goal.
      example:
        canEditGoal: true
        canEditGoalProgressBar: true
        canCloseGoal: true
        canReopenGoal: true
        canShareGoal: true
      properties:
        canCloseGoal:
          description: Can a goal be closed in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canCloseGoal
        canEditGoal:
          description: Can a goal be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canEditGoal
        canEditGoalProgressBar:
          description: Can a goal progress bar be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
        canReopenGoal:
          description: Can a goal be reopened in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canReopenGoal
        canShareGoal:
          description: Can a goal be shared in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-actions-properties-canShareGoal
      type: object
    GoalsGetAllAggregateInfo200Response1_filters_inner:
      example:
        name: In Progress
        count: 3
        id: status-inProgress
        actions:
          canEditGoal: true
          canEditGoalProgressBar: true
          canCloseGoal: true
          canReopenGoal: true
          canShareGoal: true
      properties:
        id:
          description: Id of the filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-id
        name:
          description: The name of the filter.
          example: In Progress
          type: string
          x-konfig-original-example: In Progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-name
        count:
          description: Count of the goals with that filter.
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-filters-items-properties-count
        actions:
          $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_filters_inner_actions'
      type: object
    GoalsGetAllAggregateInfo200Response1_goals_inner_milestones_inner:
      description: An individual milestone.
      example:
        employeeGoalId: 12
        lastUpdateDateDateTime: 2023-07-12T14:50:46Z
        endValue: 15
        lastUpdateUserId: 24
        id: 2
        startValue: 0
        completedDateTime: 2024-07-12T14:50:46Z
        title: Sell 15 Doohickeys
        currentValue: 7
      properties:
        title:
          description: The title of the milestone.
          example: Sell 15 Doohickeys
          type: string
          x-konfig-original-example: Sell 15 Doohickeys
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-title
        id:
          description: The id of the milestone.
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-id
        employeeGoalId:
          description: The id of the goal which encompasses this milestone.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-employeeGoalId
        currentValue:
          description: "The current value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. On the creation of a numeric milestone\
            \ this value will automatically be set to the start value of the milestone.\
            \ If the milestone is a simple checkbox milestone, this value will always\
            \ be null."
          example: 7
          type: number
          x-konfig-original-example: 7
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-currentValue
        startValue:
          description: "The starting value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-startValue
        endValue:
          description: "The end goal for a numeric milestone. This number will be\
            \ rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 15
          type: number
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-endValue
        completedDateTime:
          description: The date and time in which the goal has been completed. If
            the goal is not completed the value will be null.
          example: 2024-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2024-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-completedDateTime
        lastUpdateDateDateTime:
          description: The date and time in which the goal was last updated.
          example: 2023-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2023-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-lastUpdateDateDateTime
        lastUpdateUserId:
          description: The ID of the user who last updated this milestone.
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-milestones-items-properties-lastUpdateUserId
      type: object
    GoalsGetAllAggregateInfo200Response1_goals_inner_actions:
      description: Actions that are available to a goal with milestones enabled. This
        object will not appear on a goal without milestones.
      example:
        canEditGoalProgressBar: false
        canEditGoalMilestoneProgressBar: true
      properties:
        canEditGoalProgressBar:
          description: Can the user edit the progress bar of this goal.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-actions-properties-canEditGoalProgressBar
        canEditGoalMilestoneProgressBar:
          description: can the user edit the progress of a milestone in this goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-actions-properties-canEditGoalMilestoneProgressBar
      type: object
    GoalsGetAllAggregateInfo200Response1_goals_inner:
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        milestones:
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        sharedWithEmployeeIds:
        - 89
        - 89
        actions:
          canEditGoalProgressBar: false
          canEditGoalMilestoneProgressBar: true
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-goals-items-properties-status
        milestones:
          description: All milestones for the individual goal. This array will not
            exist if milestones are not selected for this goal.
          items:
            $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_goals_inner_milestones_inner'
          type: array
        actions:
          $ref: '#/components/schemas/GoalsGetAllAggregateInfo200Response1_goals_inner_actions'
      type: object
    GoalsGetAllAggregateInfo200Response1_persons_inner:
      example:
        lastName: Johnson
        photoUrl: https://tim.johnson.jpg
        displayFirstName: Tim
        employeeId: 4353
        userId: 45
      properties:
        employeeId:
          description: The id of this employee.
          example: 4353
          type: integer
          x-konfig-original-example: 4353
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-employeeId
        userId:
          description: The user id of the person if applicable.
          example: 45
          type: integer
          x-konfig-original-example: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-userId
        displayFirstName:
          description: First name of the person.
          example: Tim
          type: string
          x-konfig-original-example: Tim
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-displayFirstName
        lastName:
          description: Last name of the person.
          example: Johnson
          type: string
          x-konfig-original-example: Johnson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-lastName
        photoUrl:
          description: url of the user profile image.
          example: https://tim.johnson.jpg
          type: string
          x-konfig-original-example: https://tim.johnson.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-persons-items-properties-photoUrl
      type: object
    GoalsGetAllAggregateInfo200Response1_comments_inner:
      example:
        goalId: 25
        commentCount: 2
      properties:
        goalId:
          description: The goalId that the comments are linked to.
          example: 25
          type: integer
          x-konfig-original-example: 25
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-comments-items-properties-goalId
        commentCount:
          description: How many comments are linked to the goal
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetAllAggregateInfo200Response1-properties-comments-items-properties-commentCount
      type: object
    GoalsGetGoalAggregateInfoResponse_goal_milestones_inner:
      description: An individual milestone.
      example:
        employeeGoalId: 12
        lastUpdateDateDateTime: 2023-07-12T14:50:46Z
        endValue: 15
        lastUpdateUserId: 24
        id: 2
        startValue: 0
        completedDateTime: 2024-07-12T14:50:46Z
        title: Sell 15 Doohickeys
        currentValue: 7
      properties:
        title:
          description: The title of the milestone.
          example: Sell 15 Doohickeys
          type: string
          x-konfig-original-example: Sell 15 Doohickeys
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-title
        id:
          description: The id of the milestone.
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-id
        employeeGoalId:
          description: The id of the goal which encompasses this milestone.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-employeeGoalId
        currentValue:
          description: "The current value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. On the creation of a numeric milestone\
            \ this value will automatically be set to the start value of the milestone.\
            \ If the milestone is a simple checkbox milestone, this value will always\
            \ be null."
          example: 7
          type: number
          x-konfig-original-example: 7
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-currentValue
        startValue:
          description: "The starting value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-startValue
        endValue:
          description: "The end goal for a numeric milestone. This number will be\
            \ rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 15
          type: number
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-endValue
        completedDateTime:
          description: The date and time in which the goal has been completed. If
            the goal is not completed the value will be null.
          example: 2024-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2024-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-completedDateTime
        lastUpdateDateDateTime:
          description: The date and time in which the goal was last updated.
          example: 2023-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2023-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-lastUpdateDateDateTime
        lastUpdateUserId:
          description: The ID of the user who last updated this milestone.
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-milestones-items-properties-lastUpdateUserId
      type: object
    GoalsGetGoalAggregateInfoResponse_goal_actions:
      description: Actions that are available to a goal with milestones enabled. This
        object will not appear on a goal without milestones.
      example:
        canEditGoalProgressBar: false
        canEditGoalMilestoneProgressBar: true
      properties:
        canEditGoalProgressBar:
          description: Can the user edit the progress bar of this goal.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-actions-properties-canEditGoalProgressBar
        canEditGoalMilestoneProgressBar:
          description: can the user edit the progress of a milestone in this goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-actions-properties-canEditGoalMilestoneProgressBar
      type: object
    GoalsGetGoalAggregateInfoResponse_goal:
      description: The selected goal object
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        milestones:
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        sharedWithEmployeeIds:
        - 89
        - 89
        actions:
          canEditGoalProgressBar: false
          canEditGoalMilestoneProgressBar: true
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-goal-properties-status
        milestones:
          description: All milestones for the individual goal. This array will not
            exist if milestones are not selected for this goal.
          items:
            $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_goal_milestones_inner'
          type: array
        actions:
          $ref: '#/components/schemas/GoalsGetGoalAggregateInfoResponse_goal_actions'
      type: object
    GoalsGetGoalAggregateInfoResponse_alignsWithOptions_inner:
      example:
        id: 8
        title: Get all team goals for January complete.
      properties:
        title:
          description: Title of the goal that the selected goal could be aligned with.
          example: Get all team goals for January complete.
          type: string
          x-konfig-original-example: Get all team goals for January complete.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-alignsWithOptions-items-properties-title
        id:
          description: Id of the goal that the selected goal could be aligned with.
          example: 8
          type: integer
          x-konfig-original-example: 8
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-alignsWithOptions-items-properties-id
      type: object
    GoalsGetGoalAggregateInfoResponse_comments_inner:
      example:
        createdAt: 2022-05-23T17:32:42Z
        authorUserId: 1534
        canEdit: true
        canDelete: true
        id: 2
        text: This goal is taking longer than I thought.
      properties:
        id:
          description: Id of the comment.
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-id
        authorUserId:
          description: Id of the author of the comment.
          example: 1534
          type: integer
          x-konfig-original-example: 1534
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-authorUserId
        createdAt:
          description: The date and time that the comment was created.
          example: 2022-05-23T17:32:42Z
          format: date-time
          type: string
          x-konfig-original-example: 2022-05-23T17:32:42Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-createdAt
        text:
          description: The actual text of the comment.
          example: This goal is taking longer than I thought.
          type: string
          x-konfig-original-example: This goal is taking longer than I thought.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-text
        canEdit:
          description: Can the comment be edited.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-canEdit
        canDelete:
          description: Can the comment be deleted.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-comments-items-properties-canDelete
      type: object
    GoalsGetGoalAggregateInfoResponse_persons_inner:
      example:
        lastName: Johnson
        photoUrl: https://tim.johnson.jpg
        displayFirstName: Tim
        employeeId: 4353
        userId: 45
      properties:
        employeeId:
          description: The id of this employee.
          example: 4353
          type: integer
          x-konfig-original-example: 4353
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-employeeId
        userId:
          description: The user id of the person if applicable.
          example: 45
          type: integer
          x-konfig-original-example: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-userId
        displayFirstName:
          description: First name of the person.
          example: Tim
          type: string
          x-konfig-original-example: Tim
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-displayFirstName
        lastName:
          description: Last name of the person.
          example: Johnson
          type: string
          x-konfig-original-example: Johnson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-lastName
        photoUrl:
          description: url of the user profile image.
          example: https://tim.johnson.jpg
          type: string
          x-konfig-original-example: https://tim.johnson.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetGoalAggregateInfoResponse-properties-persons-items-properties-photoUrl
      type: object
    GoalsUpdateGoalSharingResponse_goal:
      description: The selected goal object
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        sharedWithEmployeeIds:
        - 89
        - 89
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateGoalSharingResponse-properties-goal-properties-status
      type: object
    GoalsUpdateProgressResponse_goal:
      description: The selected goal object
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        sharedWithEmployeeIds:
        - 89
        - 89
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsUpdateProgressResponse-properties-goal-properties-status
      type: object
    GoalsStatusCountResponse_filters_inner:
      example:
        name: In Progress
        count: 3
        id: status-inProgress
      properties:
        id:
          description: Id of the filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-id
        name:
          description: The name of the filter.
          example: In Progress
          type: string
          x-konfig-original-example: In Progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-name
        count:
          description: Count of the goals with that filter.
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsStatusCountResponse-properties-filters-items-properties-count
      type: object
    GoalsCountPerStatusResponse_filters_inner_actions:
      description: What actions a user can preform on this kind of goal.
      example:
        canEditGoal: true
        canEditGoalProgressBar: true
        canCloseGoal: true
        canReopenGoal: true
        canShareGoal: true
      properties:
        canCloseGoal:
          description: Can a goal be closed in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canCloseGoal
        canEditGoal:
          description: Can a goal be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canEditGoal
        canEditGoalProgressBar:
          description: Can a goal progress bar be edited in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canEditGoalProgressBar
        canReopenGoal:
          description: Can a goal be reopened in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canReopenGoal
        canShareGoal:
          description: Can a goal be shared in this state.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-actions-properties-canShareGoal
      type: object
    GoalsCountPerStatusResponse_filters_inner:
      example:
        name: In Progress
        count: 3
        id: status-inProgress
        actions:
          canEditGoal: true
          canEditGoalProgressBar: true
          canCloseGoal: true
          canReopenGoal: true
          canShareGoal: true
      properties:
        id:
          description: Id of the filter.
          example: status-inProgress
          type: string
          x-konfig-original-example: status-inProgress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-id
        name:
          description: The name of the filter.
          example: In Progress
          type: string
          x-konfig-original-example: In Progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-name
        count:
          description: Count of the goals with that filter.
          example: 3
          type: integer
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCountPerStatusResponse-properties-filters-items-properties-count
        actions:
          $ref: '#/components/schemas/GoalsCountPerStatusResponse_filters_inner_actions'
      type: object
    GoalsGetEmployeeGoalsResponse_goals_inner_milestones_inner:
      description: An individual milestone.
      example:
        employeeGoalId: 12
        lastUpdateDateDateTime: 2023-07-12T14:50:46Z
        endValue: 15
        lastUpdateUserId: 24
        id: 2
        startValue: 0
        completedDateTime: 2024-07-12T14:50:46Z
        title: Sell 15 Doohickeys
        currentValue: 7
      properties:
        title:
          description: The title of the milestone.
          example: Sell 15 Doohickeys
          type: string
          x-konfig-original-example: Sell 15 Doohickeys
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-title
        id:
          description: The id of the milestone.
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-id
        employeeGoalId:
          description: The id of the goal which encompasses this milestone.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-employeeGoalId
        currentValue:
          description: "The current value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. On the creation of a numeric milestone\
            \ this value will automatically be set to the start value of the milestone.\
            \ If the milestone is a simple checkbox milestone, this value will always\
            \ be null."
          example: 7
          type: number
          x-konfig-original-example: 7
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-currentValue
        startValue:
          description: "The starting value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-startValue
        endValue:
          description: "The end goal for a numeric milestone. This number will be\
            \ rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 15
          type: number
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-endValue
        completedDateTime:
          description: The date and time in which the goal has been completed. If
            the goal is not completed the value will be null.
          example: 2024-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2024-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-completedDateTime
        lastUpdateDateDateTime:
          description: The date and time in which the goal was last updated.
          example: 2023-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2023-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-lastUpdateDateDateTime
        lastUpdateUserId:
          description: The ID of the user who last updated this milestone.
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-milestones-items-properties-lastUpdateUserId
      type: object
    GoalsGetEmployeeGoalsResponse_goals_inner_actions:
      description: Actions that are available to a goal with milestones enabled. This
        object will not appear on a goal without milestones.
      example:
        canEditGoalProgressBar: false
        canEditGoalMilestoneProgressBar: true
      properties:
        canEditGoalProgressBar:
          description: Can the user edit the progress bar of this goal.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-actions-properties-canEditGoalProgressBar
        canEditGoalMilestoneProgressBar:
          description: can the user edit the progress of a milestone in this goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-actions-properties-canEditGoalMilestoneProgressBar
      type: object
    GoalsGetEmployeeGoalsResponse_goals_inner:
      description: An individual goal
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        milestones:
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        sharedWithEmployeeIds:
        - 89
        - 89
        actions:
          canEditGoalProgressBar: false
          canEditGoalMilestoneProgressBar: true
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsGetEmployeeGoalsResponse-properties-goals-items-properties-status
        milestones:
          description: All milestones for the individual goal. This array will not
            exist if milestones are not selected for this goal.
          items:
            $ref: '#/components/schemas/GoalsGetEmployeeGoalsResponse_goals_inner_milestones_inner'
          type: array
        actions:
          $ref: '#/components/schemas/GoalsGetEmployeeGoalsResponse_goals_inner_actions'
      type: object
    GoalsCloseGoalResponse_goal_milestones_inner:
      description: An individual milestone.
      example:
        employeeGoalId: 12
        lastUpdateDateDateTime: 2023-07-12T14:50:46Z
        endValue: 15
        lastUpdateUserId: 24
        id: 2
        startValue: 0
        completedDateTime: 2024-07-12T14:50:46Z
        title: Sell 15 Doohickeys
        currentValue: 7
      properties:
        title:
          description: The title of the milestone.
          example: Sell 15 Doohickeys
          type: string
          x-konfig-original-example: Sell 15 Doohickeys
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-title
        id:
          description: The id of the milestone.
          example: 2
          type: integer
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-id
        employeeGoalId:
          description: The id of the goal which encompasses this milestone.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-employeeGoalId
        currentValue:
          description: "The current value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. On the creation of a numeric milestone\
            \ this value will automatically be set to the start value of the milestone.\
            \ If the milestone is a simple checkbox milestone, this value will always\
            \ be null."
          example: 7
          type: number
          x-konfig-original-example: 7
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-currentValue
        startValue:
          description: "The starting value for a numeric milestone. This number will\
            \ be rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-startValue
        endValue:
          description: "The end goal for a numeric milestone. This number will be\
            \ rounded to the nearest hundreds. If the milestone is a simple checkbox\
            \ milestone, this value will always be null."
          example: 15
          type: number
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-endValue
        completedDateTime:
          description: The date and time in which the goal has been completed. If
            the goal is not completed the value will be null.
          example: 2024-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2024-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-completedDateTime
        lastUpdateDateDateTime:
          description: The date and time in which the goal was last updated.
          example: 2023-07-12T14:50:46Z
          format: Date-Time
          type: string
          x-konfig-original-example: 2023-07-12T14:50:46Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-lastUpdateDateDateTime
        lastUpdateUserId:
          description: The ID of the user who last updated this milestone.
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-milestones-items-properties-lastUpdateUserId
      type: object
    GoalsCloseGoalResponse_goal_actions:
      description: Actions that are available to a goal with milestones enabled. This
        object will not appear on a goal without milestones.
      example:
        canEditGoalProgressBar: false
        canEditGoalMilestoneProgressBar: true
      properties:
        canEditGoalProgressBar:
          description: Can the user edit the progress bar of this goal.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-actions-properties-canEditGoalProgressBar
        canEditGoalMilestoneProgressBar:
          description: can the user edit the progress of a milestone in this goal.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-actions-properties-canEditGoalMilestoneProgressBar
      type: object
    GoalsCloseGoalResponse_goal:
      description: An individual goal
      example:
        dueDate: 2021-12-17T00:00:00.000+00:00
        description: Document every endpoint for the goals API.
        completionDate: 2021-12-16T00:00:00.000+00:00
        id: 4
        percentComplete: 100
        title: Complete Documentation Epic
        milestones:
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        - employeeGoalId: 12
          lastUpdateDateDateTime: 2023-07-12T14:50:46Z
          endValue: 15
          lastUpdateUserId: 24
          id: 2
          startValue: 0
          completedDateTime: 2024-07-12T14:50:46Z
          title: Sell 15 Doohickeys
          currentValue: 7
        sharedWithEmployeeIds:
        - 89
        - 89
        actions:
          canEditGoalProgressBar: false
          canEditGoalMilestoneProgressBar: true
        alignsWithOptionId: 0
        status: in_progress
      properties:
        title:
          description: Title of the goal.
          example: Complete Documentation Epic
          type: string
          x-konfig-original-example: Complete Documentation Epic
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-title
        description:
          description: A description of the goal.
          example: Document every endpoint for the goals API.
          type: string
          x-konfig-original-example: Document every endpoint for the goals API.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-description
        id:
          description: The id of the goal.
          example: 4
          type: integer
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-id
        percentComplete:
          description: A percentage (1-100) that denotes how complete the goal is.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-percentComplete
        alignsWithOptionId:
          type: integer
        sharedWithEmployeeIds:
          description: Ids of the employees that have access to this goal.
          items:
            example: 89
            type: integer
            x-konfig-original-example: 89
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-sharedWithEmployeeIds-items
          type: array
        dueDate:
          description: The due date of the goal.
          example: 2021-12-17
          format: date
          type: string
          x-konfig-original-example: 2021-12-17
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-dueDate
        completionDate:
          description: The date the goal was completed.
          example: 2021-12-16
          format: date
          type: string
          x-konfig-original-example: 2021-12-16
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-completionDate
        status:
          description: The status of the goal.
          example: in_progress
          type: string
          x-konfig-original-example: in_progress
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GoalsCloseGoalResponse-properties-goal-properties-status
        milestones:
          description: All milestones for the individual goal. This array will not
            exist if milestones are not selected for this goal.
          items:
            $ref: '#/components/schemas/GoalsCloseGoalResponse_goal_milestones_inner'
          type: array
        actions:
          $ref: '#/components/schemas/GoalsCloseGoalResponse_goal_actions'
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner_title:
      properties:
        id:
          example: 7153
          type: number
          x-konfig-original-example: 7153
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-title-properties-id
        label:
          example: Draftsperson
          type: string
          x-konfig-original-example: Draftsperson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-title-properties-label
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner_location_address:
      properties:
        description:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        name:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        addressLine1:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        addressLine2:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        city:
          example: Lehi
          type: string
          x-konfig-original-example: Lehi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-city
        state:
          example: Utah
          type: string
          x-konfig-original-example: Utah
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-state
        zipcode:
          example: "84043"
          type: string
          x-konfig-original-example: "84043"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-zipcode
        country:
          example: United States
          type: string
          x-konfig-original-example: United States
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-address-properties-country
        phoneNumber:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner_location:
      properties:
        id:
          example: 5094
          type: number
          x-konfig-original-example: 5094
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-id
        label:
          example: St. Louis
          type: string
          x-konfig-original-example: St. Louis
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-location-properties-label
        address:
          $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner_location_address'
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner_department:
      properties:
        id:
          example: 367
          type: number
          x-konfig-original-example: 367
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-department-properties-id
        label:
          example: Engineering
          type: string
          x-konfig-original-example: Engineering
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-department-properties-label
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner_status:
      properties:
        id:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-status-properties-id
        label:
          example: Open
          type: string
          x-konfig-original-example: Open
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-status-properties-label
      type: object
    ApplicantTrackingGetJobSummariesResponse_inner:
      properties:
        title:
          $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner_title'
        postedDate:
          example: 2017-11-30 16:59:40
          type: string
          x-konfig-original-example: 2017-11-30 16:59:40
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-postedDate
        location:
          $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner_location'
        department:
          $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner_department'
        status:
          $ref: '#/components/schemas/ApplicantTrackingGetJobSummariesResponse_inner_status'
        newApplicantsCount:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-newApplicantsCount
        activeApplicantsCount:
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-activeApplicantsCount
        totalApplicantsCount:
          example: 4
          type: number
          x-konfig-original-example: 4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-totalApplicantsCount
        id:
          example: 2
          type: number
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-id
        postingUrl:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetJobSummariesResponse-items-properties-postingUrl
      type: object
    ApplicantTrackingListApplicationsResponse_applications_inner_status:
      properties:
        id:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-status-properties-id
        label:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-status-properties-label
      type: object
    ApplicantTrackingListApplicationsResponse_applications_inner_applicant:
      properties:
        id:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-id
        firstName:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-firstName
        lastName:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-lastName
        avatar:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-applicant-properties-avatar
      type: object
    ApplicantTrackingListApplicationsResponse_applications_inner_job_title:
      properties:
        id:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-title-properties-id
        label:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-title-properties-label
      type: object
    ApplicantTrackingListApplicationsResponse_applications_inner_job:
      properties:
        title:
          $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse_applications_inner_job_title'
        id:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-job-properties-id
      type: object
    ApplicantTrackingListApplicationsResponse_applications_inner:
      properties:
        id:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-id
        appliedDate:
          example: string
          type: string
          x-konfig-original-example: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-appliedDate
        status:
          $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse_applications_inner_status'
        rating:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListApplicationsResponse-properties-applications-items-properties-rating
        applicant:
          $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse_applications_inner_applicant'
        job:
          $ref: '#/components/schemas/ApplicantTrackingListApplicationsResponse_applications_inner_job'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_status_changedByUser:
      properties:
        id:
          example: 2292
          type: number
          x-konfig-original-example: 2292
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-id
        firstName:
          example: Jim
          type: string
          x-konfig-original-example: Jim
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-firstName
        lastName:
          example: Gang
          type: string
          x-konfig-original-example: Gang
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-lastName
        avatar:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-changedByUser-properties-avatar
          example: null
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_status:
      properties:
        id:
          example: 19
          type: number
          x-konfig-original-example: 19
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-id
        label:
          example: Moved
          type: string
          x-konfig-original-example: Moved
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-status-properties-label
        changedByUser:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_status_changedByUser'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_movedTo_job_title:
      properties:
        id:
          example: 254
          type: number
          x-konfig-original-example: 254
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-title-properties-id
        label:
          example: HR Specialist
          type: string
          x-konfig-original-example: HR Specialist
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-title-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_movedTo_job:
      properties:
        title:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_movedTo_job_title'
        id:
          example: 16222
          type: number
          x-konfig-original-example: 16222
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-job-properties-id
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_movedTo:
      properties:
        applicationId:
          example: 5
          type: number
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-movedTo-properties-applicationId
        job:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_movedTo_job'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner_question:
      properties:
        id:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-question-properties-id
        label:
          example: What's your favorite color
          type: string
          x-konfig-original-example: What's your favorite color
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-question-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner_answer:
      properties:
        id:
          example: 22
          type: number
          x-konfig-original-example: 22
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-answer-properties-id
        label:
          example: blue
          type: string
          x-konfig-original-example: blue
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-questionsAndAnswers-items-properties-answer-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner:
      properties:
        question:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner_question'
        answer:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_questionsAndAnswers_inner_answer'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_applicant_address:
      properties:
        addressLine1:
          example: 12 w 12 s
          type: string
          x-konfig-original-example: 12 w 12 s
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-addressLine1
        addressLine2:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-addressLine2
          example: null
        city:
          example: Lehi
          type: string
          x-konfig-original-example: Lehi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-city
        state:
          example: UT
          type: string
          x-konfig-original-example: UT
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-state
        zipcode:
          example: "84005"
          type: string
          x-konfig-original-example: "84005"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-zipcode
        country:
          example: United States
          type: string
          x-konfig-original-example: United States
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-address-properties-country
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_applicant_education_level:
      properties:
        id:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-level-properties-id
        label:
          example: Master of Science
          type: string
          x-konfig-original-example: Master of Science
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-level-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_applicant_education:
      properties:
        institution:
          example: Arizona University
          type: string
          x-konfig-original-example: Arizona University
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-education-properties-institution
        level:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_applicant_education_level'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_applicant:
      properties:
        email:
          example: test@bamboohr.com
          type: string
          x-konfig-original-example: test@bamboohr.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-email
        phoneNumber:
          example: "8019942392"
          type: string
          x-konfig-original-example: "8019942392"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-phoneNumber
        address:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_applicant_address'
        linkedinUrl:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-linkedinUrl
          example: null
        websiteUrl:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-websiteUrl
          example: null
        availableStartDate:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-availableStartDate
          example: null
        education:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_applicant_education'
        id:
          example: 35
          type: number
          x-konfig-original-example: 35
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-id
        firstName:
          example: Jimmy
          type: string
          x-konfig-original-example: Jimmy
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-firstName
        lastName:
          example: Jackson
          type: string
          x-konfig-original-example: Jackson
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-lastName
        avatar:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-applicant-properties-avatar
          example: null
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_job_title:
      properties:
        id:
          example: 6477
          type: number
          x-konfig-original-example: 6477
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-title-properties-id
        label:
          example: CEO
          type: string
          x-konfig-original-example: CEO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-title-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_job_hiringLead_jobTitle:
      properties:
        id:
          example: 205
          type: number
          x-konfig-original-example: 205
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-jobTitle-properties-id
        label:
          example: Head Engineer
          type: string
          x-konfig-original-example: Head Engineer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-jobTitle-properties-label
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_job_hiringLead:
      properties:
        employeeId:
          example: 40340
          type: number
          x-konfig-original-example: 40340
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-employeeId
        firstName:
          example: Josh
          type: string
          x-konfig-original-example: Josh
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-firstName
        lastName:
          example: Smith
          type: string
          x-konfig-original-example: Smith
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-lastName
        avatar:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-hiringLead-properties-avatar
          example: null
        jobTitle:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_job_hiringLead_jobTitle'
      type: object
    ApplicantTrackingGetApplicationDetailsResponse_job:
      properties:
        title:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_job_title'
        hiringLead:
          $ref: '#/components/schemas/ApplicantTrackingGetApplicationDetailsResponse_job_hiringLead'
        id:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingGetApplicationDetailsResponse-properties-job-properties-id
      type: object
    ApplicantTrackingListStatusesResponse_inner:
      properties:
        description:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        code:
          example: PHONE
          type: string
          x-konfig-original-example: PHONE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-code
        enabled:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-enabled
        id:
          example: "2"
          type: string
          x-konfig-original-example: "2"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-id
        manageable:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-manageable
        name:
          example: Phone Screened
          type: string
          x-konfig-original-example: Phone Screened
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-name
        translatedName:
          example: Phone Screened
          type: string
          x-konfig-original-example: Phone Screened
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingListStatusesResponse-items-properties-translatedName
      type: object
    ApplicantTrackingGetCompanyLocationsResponse_inner:
      example:
        location:
          zipcode: zipcode
          country:
            name: name
            id: 1
            iso_code: iso_code
          city: city
          phone: phone
          name: name
          description: description
          addressLine1: addressLine1
          addressLine2: addressLine2
          id: 0
          state:
            name: name
            id: 6
            abbrev: abbrev
            iso_code: iso_code
      properties:
        location:
          $ref: '#/components/schemas/Location'
      type: object
    ApplicantTrackingGetHiringLeadsResponse_inner:
      example:
        hiringLead:
          preferredFullName: preferredFullName
          employeeId: 0
      properties:
        hiringLead:
          $ref: '#/components/schemas/HiringLead'
      type: object
    ApplicantTrackingCreateNewApplicationResponse_inner:
      properties:
        result:
          example: success
          type: string
          x-konfig-original-example: success
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse-items-properties-result
        candidateId:
          example: 42
          type: number
          x-konfig-original-example: 42
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewApplicationResponse-items-properties-candidateId
      type: object
    ApplicantTrackingCreateNewJobOpeningResponse_inner:
      properties:
        result:
          example: success
          type: string
          x-konfig-original-example: success
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse-items-properties-result
        jobOpeningId:
          example: 11
          type: number
          x-konfig-original-example: 11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicantTrackingCreateNewJobOpeningResponse-items-properties-jobOpeningId
      type: object
    TrainingGetTypesResponse_inner:
      example:
        trainingId:
          dueFromHireDate: 1
          renewable: true
          name: name
          linkUrl: linkUrl
          description: description
          id: 0
          category:
            name: name
            id: 5
          required: 5
          frequency: 6
          allowEmployeesToMarkComplete: true
      properties:
        trainingId:
          $ref: '#/components/schemas/TrainingType'
      type: object
    TrainingCategoryListResponse_inner:
      example:
        categoryId:
          name: name
          id: 5
      properties:
        categoryId:
          $ref: '#/components/schemas/TrainingCategory'
      type: object
    TrainingListEmployeeTrainingsResponse_inner:
      example:
        trainingId:
          hours: 5.962133916683182
          notes: notes
          cost: cost
          instructor: instructor
          credits: 1.4658129805029452
          employeeId: 6
          id: 0
          completed: completed
          type: 5
      properties:
        trainingId:
          $ref: '#/components/schemas/TrainingRecord'
      type: object
    WebhooksListMonitorFieldsResponse_fields_inner:
      example:
        name: name
        alias: alias
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        alias:
          type: string
      type: object
    WebhooksGetUserListResponse_webhooks_inner:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: "1"
        lastSent: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        id:
          description: The ID of the webhook.
          example: "1"
          type: string
          x-konfig-original-example: "1"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-id
        name:
          description: The name of the webhook.
          type: string
        created:
          description: The creation date of the webhook.
          format: date-time
          type: string
          x-konfig-original-example: 2021-09-20 22:58:01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-created
        lastSent:
          description: The date the webhook was last sent.
          format: date-time
          type: string
          x-konfig-original-example: 2021-09-21 12:00:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksGetUserListResponse-properties-webhooks-items-properties-lastSent
        url:
          description: The url of the webhook.
          type: string
      type: object
    WebhooksAddNewWebhookResponse_frequency:
      description: How often the webhook could fire.
      example:
        hour: 12
        month: 7
        day: 24
        minute: 56
      properties:
        hour:
          description: The hour to potentially fire.
          example: 12
          type: integer
          x-konfig-original-example: 12
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-hour
        minute:
          description: The minute to potentially fire
          example: 56
          type: integer
          x-konfig-original-example: 56
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-minute
        day:
          description: The day to potentially fire
          example: 24
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-frequency-properties-day
        month:
          description: The month to potentially fire
          example: 7
          x-konfig-original-example: 7
      type: object
    WebhooksAddNewWebhookResponse_limit:
      description: "To limit how often to potentially fire a webhook, and maximum\
        \ amount of records to send"
      example:
        times: 15
        seconds: 500
      properties:
        times:
          description: The amount of records to send
          example: 15
          type: integer
          x-konfig-original-example: 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-limit-properties-times
        seconds:
          description: The minimum amount of seconds between requests
          example: 500
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhooksAddNewWebhookResponse-properties-limit-properties-seconds
      type: object
  securitySchemes:
    auth:
      flows:
        authorizationCode:
          authorizationUrl: "https://{companyDomain}.bamboohr.com/authorize.php"
          scopes: {}
          tokenUrl: "https://{companyDomain}.bamboohr.com/token.php"
      type: oauth2
      x-konfig-globally-required-security: false
    basic:
      scheme: basic
      type: http
      x-konfig-globally-required-security: false
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

