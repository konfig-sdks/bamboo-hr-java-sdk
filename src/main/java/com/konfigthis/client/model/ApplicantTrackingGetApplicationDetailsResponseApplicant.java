/*
 * BambooHR API
 * This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ApplicantTrackingGetApplicationDetailsResponseApplicantAddress;
import com.konfigthis.client.model.ApplicantTrackingGetApplicationDetailsResponseApplicantEducation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ApplicantTrackingGetApplicationDetailsResponseApplicant
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ApplicantTrackingGetApplicationDetailsResponseApplicant {
  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private ApplicantTrackingGetApplicationDetailsResponseApplicantAddress address;

  public static final String SERIALIZED_NAME_LINKEDIN_URL = "linkedinUrl";
  @SerializedName(SERIALIZED_NAME_LINKEDIN_URL)
  private String linkedinUrl;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public static final String SERIALIZED_NAME_AVAILABLE_START_DATE = "availableStartDate";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_START_DATE)
  private String availableStartDate;

  public static final String SERIALIZED_NAME_EDUCATION = "education";
  @SerializedName(SERIALIZED_NAME_EDUCATION)
  private ApplicantTrackingGetApplicationDetailsResponseApplicantEducation education;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Double id;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private String avatar;

  public ApplicantTrackingGetApplicationDetailsResponseApplicant() {
  }

  public ApplicantTrackingGetApplicationDetailsResponseApplicant email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test@bamboohr.com", value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant phoneNumber(String phoneNumber) {
    
    
    
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8019942392", value = "")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    
    
    
    this.phoneNumber = phoneNumber;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant address(ApplicantTrackingGetApplicationDetailsResponseApplicantAddress address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicantTrackingGetApplicationDetailsResponseApplicantAddress getAddress() {
    return address;
  }


  public void setAddress(ApplicantTrackingGetApplicationDetailsResponseApplicantAddress address) {
    
    
    
    this.address = address;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant linkedinUrl(String linkedinUrl) {
    
    
    
    
    this.linkedinUrl = linkedinUrl;
    return this;
  }

   /**
   * Get linkedinUrl
   * @return linkedinUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLinkedinUrl() {
    return linkedinUrl;
  }


  public void setLinkedinUrl(String linkedinUrl) {
    
    
    
    this.linkedinUrl = linkedinUrl;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant websiteUrl(String websiteUrl) {
    
    
    
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Get websiteUrl
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(String websiteUrl) {
    
    
    
    this.websiteUrl = websiteUrl;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant availableStartDate(String availableStartDate) {
    
    
    
    
    this.availableStartDate = availableStartDate;
    return this;
  }

   /**
   * Get availableStartDate
   * @return availableStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAvailableStartDate() {
    return availableStartDate;
  }


  public void setAvailableStartDate(String availableStartDate) {
    
    
    
    this.availableStartDate = availableStartDate;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant education(ApplicantTrackingGetApplicationDetailsResponseApplicantEducation education) {
    
    
    
    
    this.education = education;
    return this;
  }

   /**
   * Get education
   * @return education
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicantTrackingGetApplicationDetailsResponseApplicantEducation getEducation() {
    return education;
  }


  public void setEducation(ApplicantTrackingGetApplicationDetailsResponseApplicantEducation education) {
    
    
    
    this.education = education;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant id(Double id) {
    
    
    
    
    this.id = id;
    return this;
  }

  public ApplicantTrackingGetApplicationDetailsResponseApplicant id(Integer id) {
    
    
    
    
    this.id = id.doubleValue();
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "35", value = "")

  public Double getId() {
    return id;
  }


  public void setId(Double id) {
    
    
    
    this.id = id;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jimmy", value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jackson", value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public ApplicantTrackingGetApplicationDetailsResponseApplicant avatar(String avatar) {
    
    
    
    
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAvatar() {
    return avatar;
  }


  public void setAvatar(String avatar) {
    
    
    
    this.avatar = avatar;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ApplicantTrackingGetApplicationDetailsResponseApplicant instance itself
   */
  public ApplicantTrackingGetApplicationDetailsResponseApplicant putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantTrackingGetApplicationDetailsResponseApplicant applicantTrackingGetApplicationDetailsResponseApplicant = (ApplicantTrackingGetApplicationDetailsResponseApplicant) o;
    return Objects.equals(this.email, applicantTrackingGetApplicationDetailsResponseApplicant.email) &&
        Objects.equals(this.phoneNumber, applicantTrackingGetApplicationDetailsResponseApplicant.phoneNumber) &&
        Objects.equals(this.address, applicantTrackingGetApplicationDetailsResponseApplicant.address) &&
        Objects.equals(this.linkedinUrl, applicantTrackingGetApplicationDetailsResponseApplicant.linkedinUrl) &&
        Objects.equals(this.websiteUrl, applicantTrackingGetApplicationDetailsResponseApplicant.websiteUrl) &&
        Objects.equals(this.availableStartDate, applicantTrackingGetApplicationDetailsResponseApplicant.availableStartDate) &&
        Objects.equals(this.education, applicantTrackingGetApplicationDetailsResponseApplicant.education) &&
        Objects.equals(this.id, applicantTrackingGetApplicationDetailsResponseApplicant.id) &&
        Objects.equals(this.firstName, applicantTrackingGetApplicationDetailsResponseApplicant.firstName) &&
        Objects.equals(this.lastName, applicantTrackingGetApplicationDetailsResponseApplicant.lastName) &&
        Objects.equals(this.avatar, applicantTrackingGetApplicationDetailsResponseApplicant.avatar)&&
        Objects.equals(this.additionalProperties, applicantTrackingGetApplicationDetailsResponseApplicant.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, phoneNumber, address, linkedinUrl, websiteUrl, availableStartDate, education, id, firstName, lastName, avatar, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantTrackingGetApplicationDetailsResponseApplicant {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    linkedinUrl: ").append(toIndentedString(linkedinUrl)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    availableStartDate: ").append(toIndentedString(availableStartDate)).append("\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("email");
    openapiFields.add("phoneNumber");
    openapiFields.add("address");
    openapiFields.add("linkedinUrl");
    openapiFields.add("websiteUrl");
    openapiFields.add("availableStartDate");
    openapiFields.add("education");
    openapiFields.add("id");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("avatar");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApplicantTrackingGetApplicationDetailsResponseApplicant
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApplicantTrackingGetApplicationDetailsResponseApplicant.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicantTrackingGetApplicationDetailsResponseApplicant is not found in the empty JSON string", ApplicantTrackingGetApplicationDetailsResponseApplicant.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        ApplicantTrackingGetApplicationDetailsResponseApplicantAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      if (!jsonObj.get("linkedinUrl").isJsonNull() && (jsonObj.get("linkedinUrl") != null && !jsonObj.get("linkedinUrl").isJsonNull()) && !jsonObj.get("linkedinUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedinUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedinUrl").toString()));
      }
      if (!jsonObj.get("websiteUrl").isJsonNull() && (jsonObj.get("websiteUrl") != null && !jsonObj.get("websiteUrl").isJsonNull()) && !jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if (!jsonObj.get("availableStartDate").isJsonNull() && (jsonObj.get("availableStartDate") != null && !jsonObj.get("availableStartDate").isJsonNull()) && !jsonObj.get("availableStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availableStartDate").toString()));
      }
      // validate the optional field `education`
      if (jsonObj.get("education") != null && !jsonObj.get("education").isJsonNull()) {
        ApplicantTrackingGetApplicationDetailsResponseApplicantEducation.validateJsonObject(jsonObj.getAsJsonObject("education"));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (!jsonObj.get("avatar").isJsonNull() && (jsonObj.get("avatar") != null && !jsonObj.get("avatar").isJsonNull()) && !jsonObj.get("avatar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicantTrackingGetApplicationDetailsResponseApplicant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicantTrackingGetApplicationDetailsResponseApplicant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicantTrackingGetApplicationDetailsResponseApplicant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicantTrackingGetApplicationDetailsResponseApplicant.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicantTrackingGetApplicationDetailsResponseApplicant>() {
           @Override
           public void write(JsonWriter out, ApplicantTrackingGetApplicationDetailsResponseApplicant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicantTrackingGetApplicationDetailsResponseApplicant read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ApplicantTrackingGetApplicationDetailsResponseApplicant instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicantTrackingGetApplicationDetailsResponseApplicant given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicantTrackingGetApplicationDetailsResponseApplicant
  * @throws IOException if the JSON string is invalid with respect to ApplicantTrackingGetApplicationDetailsResponseApplicant
  */
  public static ApplicantTrackingGetApplicationDetailsResponseApplicant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicantTrackingGetApplicationDetailsResponseApplicant.class);
  }

 /**
  * Convert an instance of ApplicantTrackingGetApplicationDetailsResponseApplicant to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

