/*
 * BambooHR API
 * This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.WebhooksAddNewWebhookResponseFrequency;
import com.konfigthis.client.model.WebhooksAddNewWebhookResponseLimit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WebhooksAddNewWebhookResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WebhooksAddNewWebhookResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_LAST_SENT = "lastSent";
  @SerializedName(SERIALIZED_NAME_LAST_SENT)
  private String lastSent;

  public static final String SERIALIZED_NAME_MONITOR_FIELDS = "monitorFields";
  @SerializedName(SERIALIZED_NAME_MONITOR_FIELDS)
  private List<String> monitorFields = null;

  public static final String SERIALIZED_NAME_POST_FIELDS = "postFields";
  @SerializedName(SERIALIZED_NAME_POST_FIELDS)
  private Map<String, String> postFields = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private WebhooksAddNewWebhookResponseFrequency frequency;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private WebhooksAddNewWebhookResponseLimit limit;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "privateKey";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  private String privateKey;

  public static final String SERIALIZED_NAME_INCLUDE_COMPANY_DOMAIN = "includeCompanyDomain";
  @SerializedName(SERIALIZED_NAME_INCLUDE_COMPANY_DOMAIN)
  private Boolean includeCompanyDomain;

  public WebhooksAddNewWebhookResponse() {
  }

  public WebhooksAddNewWebhookResponse id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The id of the webhook.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4", value = "The id of the webhook.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public WebhooksAddNewWebhookResponse name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the webhook.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Example Webhook", value = "The name of the webhook.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public WebhooksAddNewWebhookResponse created(String created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * timestamp of creation
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-20 22:58:01", value = "timestamp of creation")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {
    
    
    
    this.created = created;
  }


  public WebhooksAddNewWebhookResponse lastSent(String lastSent) {
    
    
    
    
    this.lastSent = lastSent;
    return this;
  }

   /**
   * timestamp of last webhook sent
   * @return lastSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-20 22:58:01", value = "timestamp of last webhook sent")

  public String getLastSent() {
    return lastSent;
  }


  public void setLastSent(String lastSent) {
    
    
    
    this.lastSent = lastSent;
  }


  public WebhooksAddNewWebhookResponse monitorFields(List<String> monitorFields) {
    
    
    
    
    this.monitorFields = monitorFields;
    return this;
  }

  public WebhooksAddNewWebhookResponse addMonitorFieldsItem(String monitorFieldsItem) {
    if (this.monitorFields == null) {
      this.monitorFields = new ArrayList<>();
    }
    this.monitorFields.add(monitorFieldsItem);
    return this;
  }

   /**
   * A list of fields to monitor.
   * @return monitorFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"firstName\",\"lastName\"]", value = "A list of fields to monitor.")

  public List<String> getMonitorFields() {
    return monitorFields;
  }


  public void setMonitorFields(List<String> monitorFields) {
    
    
    
    this.monitorFields = monitorFields;
  }


  public WebhooksAddNewWebhookResponse postFields(Map<String, String> postFields) {
    
    
    
    
    this.postFields = postFields;
    return this;
  }

  public WebhooksAddNewWebhookResponse putPostFieldsItem(String key, String postFieldsItem) {
    if (this.postFields == null) {
      this.postFields = new HashMap<>();
    }
    this.postFields.put(key, postFieldsItem);
    return this;
  }

   /**
   * A list of fields to post to the webhook url. Field ID or alias: external name
   * @return postFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"firstName\":\"Name\",\"lastName\":\"Surname\",\"dateOfBirth\":\"DOB\"}", value = "A list of fields to post to the webhook url. Field ID or alias: external name")

  public Map<String, String> getPostFields() {
    return postFields;
  }


  public void setPostFields(Map<String, String> postFields) {
    
    
    
    this.postFields = postFields;
  }


  public WebhooksAddNewWebhookResponse url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * The url the webhook should send data to.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com", value = "The url the webhook should send data to.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public WebhooksAddNewWebhookResponse format(String format) {
    
    
    
    
    this.format = format;
    return this;
  }

   /**
   * The format the webhook should use (json, form-encoded).
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "json", value = "The format the webhook should use (json, form-encoded).")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    
    
    
    this.format = format;
  }


  public WebhooksAddNewWebhookResponse frequency(WebhooksAddNewWebhookResponseFrequency frequency) {
    
    
    
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebhooksAddNewWebhookResponseFrequency getFrequency() {
    return frequency;
  }


  public void setFrequency(WebhooksAddNewWebhookResponseFrequency frequency) {
    
    
    
    this.frequency = frequency;
  }


  public WebhooksAddNewWebhookResponse limit(WebhooksAddNewWebhookResponseLimit limit) {
    
    
    
    
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebhooksAddNewWebhookResponseLimit getLimit() {
    return limit;
  }


  public void setLimit(WebhooksAddNewWebhookResponseLimit limit) {
    
    
    
    this.limit = limit;
  }


  public WebhooksAddNewWebhookResponse privateKey(String privateKey) {
    
    
    
    
    this.privateKey = privateKey;
    return this;
  }

   /**
   * The private key which can be used to verify that the webhook is secure (uses HMAC-SHA256)
   * @return privateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The private key which can be used to verify that the webhook is secure (uses HMAC-SHA256)")

  public String getPrivateKey() {
    return privateKey;
  }


  public void setPrivateKey(String privateKey) {
    
    
    
    this.privateKey = privateKey;
  }


  public WebhooksAddNewWebhookResponse includeCompanyDomain(Boolean includeCompanyDomain) {
    
    
    
    
    this.includeCompanyDomain = includeCompanyDomain;
    return this;
  }

   /**
   * If set to true, the company domain will be added to the header.
   * @return includeCompanyDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If set to true, the company domain will be added to the header.")

  public Boolean getIncludeCompanyDomain() {
    return includeCompanyDomain;
  }


  public void setIncludeCompanyDomain(Boolean includeCompanyDomain) {
    
    
    
    this.includeCompanyDomain = includeCompanyDomain;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WebhooksAddNewWebhookResponse instance itself
   */
  public WebhooksAddNewWebhookResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhooksAddNewWebhookResponse webhooksAddNewWebhookResponse = (WebhooksAddNewWebhookResponse) o;
    return Objects.equals(this.id, webhooksAddNewWebhookResponse.id) &&
        Objects.equals(this.name, webhooksAddNewWebhookResponse.name) &&
        Objects.equals(this.created, webhooksAddNewWebhookResponse.created) &&
        Objects.equals(this.lastSent, webhooksAddNewWebhookResponse.lastSent) &&
        Objects.equals(this.monitorFields, webhooksAddNewWebhookResponse.monitorFields) &&
        Objects.equals(this.postFields, webhooksAddNewWebhookResponse.postFields) &&
        Objects.equals(this.url, webhooksAddNewWebhookResponse.url) &&
        Objects.equals(this.format, webhooksAddNewWebhookResponse.format) &&
        Objects.equals(this.frequency, webhooksAddNewWebhookResponse.frequency) &&
        Objects.equals(this.limit, webhooksAddNewWebhookResponse.limit) &&
        Objects.equals(this.privateKey, webhooksAddNewWebhookResponse.privateKey) &&
        Objects.equals(this.includeCompanyDomain, webhooksAddNewWebhookResponse.includeCompanyDomain)&&
        Objects.equals(this.additionalProperties, webhooksAddNewWebhookResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, created, lastSent, monitorFields, postFields, url, format, frequency, limit, privateKey, includeCompanyDomain, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhooksAddNewWebhookResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastSent: ").append(toIndentedString(lastSent)).append("\n");
    sb.append("    monitorFields: ").append(toIndentedString(monitorFields)).append("\n");
    sb.append("    postFields: ").append(toIndentedString(postFields)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    includeCompanyDomain: ").append(toIndentedString(includeCompanyDomain)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("created");
    openapiFields.add("lastSent");
    openapiFields.add("monitorFields");
    openapiFields.add("postFields");
    openapiFields.add("url");
    openapiFields.add("format");
    openapiFields.add("frequency");
    openapiFields.add("limit");
    openapiFields.add("privateKey");
    openapiFields.add("includeCompanyDomain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhooksAddNewWebhookResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhooksAddNewWebhookResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhooksAddNewWebhookResponse is not found in the empty JSON string", WebhooksAddNewWebhookResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("lastSent") != null && !jsonObj.get("lastSent").isJsonNull()) && !jsonObj.get("lastSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastSent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("monitorFields") != null && !jsonObj.get("monitorFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `monitorFields` to be an array in the JSON string but got `%s`", jsonObj.get("monitorFields").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      // validate the optional field `frequency`
      if (jsonObj.get("frequency") != null && !jsonObj.get("frequency").isJsonNull()) {
        WebhooksAddNewWebhookResponseFrequency.validateJsonObject(jsonObj.getAsJsonObject("frequency"));
      }
      // validate the optional field `limit`
      if (jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) {
        WebhooksAddNewWebhookResponseLimit.validateJsonObject(jsonObj.getAsJsonObject("limit"));
      }
      if ((jsonObj.get("privateKey") != null && !jsonObj.get("privateKey").isJsonNull()) && !jsonObj.get("privateKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateKey").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhooksAddNewWebhookResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhooksAddNewWebhookResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhooksAddNewWebhookResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhooksAddNewWebhookResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhooksAddNewWebhookResponse>() {
           @Override
           public void write(JsonWriter out, WebhooksAddNewWebhookResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhooksAddNewWebhookResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WebhooksAddNewWebhookResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhooksAddNewWebhookResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhooksAddNewWebhookResponse
  * @throws IOException if the JSON string is invalid with respect to WebhooksAddNewWebhookResponse
  */
  public static WebhooksAddNewWebhookResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhooksAddNewWebhookResponse.class);
  }

 /**
  * Convert an instance of WebhooksAddNewWebhookResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

