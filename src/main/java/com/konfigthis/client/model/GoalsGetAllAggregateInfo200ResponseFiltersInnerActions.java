/*
 * BambooHR API
 * This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * What actions a user can preform on this kind of goal.
 */
@ApiModel(description = "What actions a user can preform on this kind of goal.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GoalsGetAllAggregateInfo200ResponseFiltersInnerActions {
  public static final String SERIALIZED_NAME_CAN_CLOSE_GOAL = "canCloseGoal";
  @SerializedName(SERIALIZED_NAME_CAN_CLOSE_GOAL)
  private Boolean canCloseGoal;

  public static final String SERIALIZED_NAME_CAN_EDIT_GOAL = "canEditGoal";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_GOAL)
  private Boolean canEditGoal;

  public static final String SERIALIZED_NAME_CAN_EDIT_GOAL_PROGRESS_BAR = "canEditGoalProgressBar";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_GOAL_PROGRESS_BAR)
  private Boolean canEditGoalProgressBar;

  public static final String SERIALIZED_NAME_CAN_REOPEN_GOAL = "canReopenGoal";
  @SerializedName(SERIALIZED_NAME_CAN_REOPEN_GOAL)
  private Boolean canReopenGoal;

  public static final String SERIALIZED_NAME_CAN_SHARE_GOAL = "canShareGoal";
  @SerializedName(SERIALIZED_NAME_CAN_SHARE_GOAL)
  private Boolean canShareGoal;

  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions() {
  }

  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions canCloseGoal(Boolean canCloseGoal) {
    
    
    
    
    this.canCloseGoal = canCloseGoal;
    return this;
  }

   /**
   * Can a goal be closed in this state.
   * @return canCloseGoal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Can a goal be closed in this state.")

  public Boolean getCanCloseGoal() {
    return canCloseGoal;
  }


  public void setCanCloseGoal(Boolean canCloseGoal) {
    
    
    
    this.canCloseGoal = canCloseGoal;
  }


  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions canEditGoal(Boolean canEditGoal) {
    
    
    
    
    this.canEditGoal = canEditGoal;
    return this;
  }

   /**
   * Can a goal be edited in this state.
   * @return canEditGoal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Can a goal be edited in this state.")

  public Boolean getCanEditGoal() {
    return canEditGoal;
  }


  public void setCanEditGoal(Boolean canEditGoal) {
    
    
    
    this.canEditGoal = canEditGoal;
  }


  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions canEditGoalProgressBar(Boolean canEditGoalProgressBar) {
    
    
    
    
    this.canEditGoalProgressBar = canEditGoalProgressBar;
    return this;
  }

   /**
   * Can a goal progress bar be edited in this state.
   * @return canEditGoalProgressBar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Can a goal progress bar be edited in this state.")

  public Boolean getCanEditGoalProgressBar() {
    return canEditGoalProgressBar;
  }


  public void setCanEditGoalProgressBar(Boolean canEditGoalProgressBar) {
    
    
    
    this.canEditGoalProgressBar = canEditGoalProgressBar;
  }


  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions canReopenGoal(Boolean canReopenGoal) {
    
    
    
    
    this.canReopenGoal = canReopenGoal;
    return this;
  }

   /**
   * Can a goal be reopened in this state.
   * @return canReopenGoal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Can a goal be reopened in this state.")

  public Boolean getCanReopenGoal() {
    return canReopenGoal;
  }


  public void setCanReopenGoal(Boolean canReopenGoal) {
    
    
    
    this.canReopenGoal = canReopenGoal;
  }


  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions canShareGoal(Boolean canShareGoal) {
    
    
    
    
    this.canShareGoal = canShareGoal;
    return this;
  }

   /**
   * Can a goal be shared in this state.
   * @return canShareGoal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Can a goal be shared in this state.")

  public Boolean getCanShareGoal() {
    return canShareGoal;
  }


  public void setCanShareGoal(Boolean canShareGoal) {
    
    
    
    this.canShareGoal = canShareGoal;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GoalsGetAllAggregateInfo200ResponseFiltersInnerActions instance itself
   */
  public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoalsGetAllAggregateInfo200ResponseFiltersInnerActions goalsGetAllAggregateInfo200ResponseFiltersInnerActions = (GoalsGetAllAggregateInfo200ResponseFiltersInnerActions) o;
    return Objects.equals(this.canCloseGoal, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.canCloseGoal) &&
        Objects.equals(this.canEditGoal, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.canEditGoal) &&
        Objects.equals(this.canEditGoalProgressBar, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.canEditGoalProgressBar) &&
        Objects.equals(this.canReopenGoal, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.canReopenGoal) &&
        Objects.equals(this.canShareGoal, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.canShareGoal)&&
        Objects.equals(this.additionalProperties, goalsGetAllAggregateInfo200ResponseFiltersInnerActions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canCloseGoal, canEditGoal, canEditGoalProgressBar, canReopenGoal, canShareGoal, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoalsGetAllAggregateInfo200ResponseFiltersInnerActions {\n");
    sb.append("    canCloseGoal: ").append(toIndentedString(canCloseGoal)).append("\n");
    sb.append("    canEditGoal: ").append(toIndentedString(canEditGoal)).append("\n");
    sb.append("    canEditGoalProgressBar: ").append(toIndentedString(canEditGoalProgressBar)).append("\n");
    sb.append("    canReopenGoal: ").append(toIndentedString(canReopenGoal)).append("\n");
    sb.append("    canShareGoal: ").append(toIndentedString(canShareGoal)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("canCloseGoal");
    openapiFields.add("canEditGoal");
    openapiFields.add("canEditGoalProgressBar");
    openapiFields.add("canReopenGoal");
    openapiFields.add("canShareGoal");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GoalsGetAllAggregateInfo200ResponseFiltersInnerActions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GoalsGetAllAggregateInfo200ResponseFiltersInnerActions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoalsGetAllAggregateInfo200ResponseFiltersInnerActions is not found in the empty JSON string", GoalsGetAllAggregateInfo200ResponseFiltersInnerActions.openapiRequiredFields.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoalsGetAllAggregateInfo200ResponseFiltersInnerActions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoalsGetAllAggregateInfo200ResponseFiltersInnerActions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoalsGetAllAggregateInfo200ResponseFiltersInnerActions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoalsGetAllAggregateInfo200ResponseFiltersInnerActions.class));

       return (TypeAdapter<T>) new TypeAdapter<GoalsGetAllAggregateInfo200ResponseFiltersInnerActions>() {
           @Override
           public void write(JsonWriter out, GoalsGetAllAggregateInfo200ResponseFiltersInnerActions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GoalsGetAllAggregateInfo200ResponseFiltersInnerActions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GoalsGetAllAggregateInfo200ResponseFiltersInnerActions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GoalsGetAllAggregateInfo200ResponseFiltersInnerActions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GoalsGetAllAggregateInfo200ResponseFiltersInnerActions
  * @throws IOException if the JSON string is invalid with respect to GoalsGetAllAggregateInfo200ResponseFiltersInnerActions
  */
  public static GoalsGetAllAggregateInfo200ResponseFiltersInnerActions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoalsGetAllAggregateInfo200ResponseFiltersInnerActions.class);
  }

 /**
  * Convert an instance of GoalsGetAllAggregateInfo200ResponseFiltersInnerActions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

